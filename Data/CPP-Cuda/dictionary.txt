add_100 -> add_100: Probability = 1.00, Count = 1
, -> ,: Probability = 0.54, Count = 472
, -> ): Probability = 0.02, Count = 21
, -> y: Probability = 0.00, Count = 2
, -> float: Probability = 0.02, Count = 18
, -> *: Probability = 0.04, Count = 37
, -> const: Probability = 0.03, Count = 24
, -> t_id: Probability = 0.00, Count = 1
, -> =: Probability = 0.02, Count = 16
, -> b: Probability = 0.00, Count = 3
, -> a: Probability = 0.00, Count = 3
, -> c: Probability = 0.00, Count = 4
, -> value: Probability = 0.00, Count = 1
, -> unsigned: Probability = 0.01, Count = 7
, -> +: Probability = 0.01, Count = 6
, -> int: Probability = 0.06, Count = 54
, -> x: Probability = 0.01, Count = 13
, -> [: Probability = 0.00, Count = 2
, -> row: Probability = 0.00, Count = 1
, -> INCX: Probability = 0.00, Count = 1
, -> blockIdx: Probability = 0.02, Count = 15
, -> size: Probability = 0.00, Count = 3
, -> input: Probability = 0.00, Count = 2
, -> rand: Probability = 0.00, Count = 2
, -> scale: Probability = 0.00, Count = 1
, -> }: Probability = 0.00, Count = 1
, -> aR2: Probability = 0.00, Count = 1
, -> double: Probability = 0.01, Count = 6
, -> score_thr: Probability = 0.00, Count = 1
, -> score: Probability = 0.00, Count = 1
, -> (: Probability = 0.00, Count = 2
, -> sx: Probability = 0.00, Count = 1
, -> {: Probability = 0.01, Count = 5
, -> ;: Probability = 0.01, Count = 6
, -> filter: Probability = 0.00, Count = 2
, -> d_input: Probability = 0.00, Count = 1
, -> >: Probability = 0.00, Count = 2
, -> data_size: Probability = 0.00, Count = 1
, -> blockDim: Probability = 0.01, Count = 5
, -> perimeterRes: Probability = 0.00, Count = 1
, -> threadIdx: Probability = 0.01, Count = 5
, -> input_str_cuda: Probability = 0.00, Count = 2
, -> :: Probability = 0.00, Count = 1
, -> tx: Probability = 0.00, Count = 1
, -> maxvd: Probability = 0.00, Count = 1
, -> k: Probability = 0.00, Count = 1
, -> depth_scale: Probability = 0.00, Count = 1
, -> indices: Probability = 0.00, Count = 1
, -> p: Probability = 0.00, Count = 1
, -> .: Probability = 0.02, Count = 17
, -> d_label: Probability = 0.00, Count = 1
, -> d_label_sub: Probability = 0.00, Count = 1
, -> n: Probability = 0.00, Count = 4
, -> clamp_min: Probability = 0.00, Count = 1
, -> r2: Probability = 0.00, Count = 1
, -> LS: Probability = 0.00, Count = 1
, -> height: Probability = 0.00, Count = 2
, -> ny: Probability = 0.00, Count = 1
, -> ]: Probability = 0.00, Count = 1
, -> neighbors: Probability = 0.00, Count = 1
, -> f: Probability = 0.00, Count = 1
, -> weights: Probability = 0.00, Count = 1
, -> points: Probability = 0.00, Count = 1
, -> i: Probability = 0.00, Count = 2
, -> shared_dimensions: Probability = 0.00, Count = 1
, -> row_a: Probability = 0.00, Count = 1
, -> End: Probability = 0.00, Count = 1
, -> IJ: Probability = 0.00, Count = 1
, -> occNo: Probability = 0.00, Count = 1
, -> rho: Probability = 0.00, Count = 1
, -> psi: Probability = 0.00, Count = 3
, -> dcopy: Probability = 0.00, Count = 2
, -> ns: Probability = 0.00, Count = 1
, -> it: Probability = 0.00, Count = 1
, -> sources_z: Probability = 0.00, Count = 1
, -> spatial: Probability = 0.00, Count = 1
, -> batch: Probability = 0.00, Count = 1
, -> filters: Probability = 0.00, Count = 1
, -> mean: Probability = 0.00, Count = 1
, -> rows: Probability = 0.00, Count = 1
, -> grad: Probability = 0.00, Count = 1
, -> depth: Probability = 0.00, Count = 1
, -> MeanLogNormalFrame: Probability = 0.00, Count = 1
, -> pixel: Probability = 0.00, Count = 1
, -> groups: Probability = 0.00, Count = 1
, -> normM_c: Probability = 0.00, Count = 1
, -> long: Probability = 0.00, Count = 1
, -> real: Probability = 0.00, Count = 1
, -> uLength: Probability = 0.00, Count = 1
, -> sr: Probability = 0.00, Count = 1
, -> u: Probability = 0.00, Count = 2
, -> width: Probability = 0.00, Count = 4
, -> convLength: Probability = 0.00, Count = 1
, -> if: Probability = 0.00, Count = 1
, -> out: Probability = 0.00, Count = 2
, -> h2: Probability = 0.00, Count = 1
, -> h1: Probability = 0.00, Count = 1
, -> output: Probability = 0.00, Count = 1
, -> eps: Probability = 0.00, Count = 1
, -> 1e: Probability = 0.00, Count = 1
, -> X: Probability = 0.00, Count = 1
, -> m: Probability = 0.00, Count = 1
, -> w: Probability = 0.00, Count = 1
, -> char: Probability = 0.00, Count = 2
, -> r: Probability = 0.00, Count = 1
, -> gpu_img_out_u: Probability = 0.00, Count = 1
, -> gpu_img_in_r: Probability = 0.00, Count = 1
, -> dpsi: Probability = 0.00, Count = 1
, -> __shared__: Probability = 0.00, Count = 1
, -> realPart: Probability = 0.00, Count = 1
, -> q_i: Probability = 0.00, Count = 1
, -> r_q: Probability = 0.00, Count = 1
, -> r_i: Probability = 0.00, Count = 1
, -> s1: Probability = 0.00, Count = 2
, -> w2: Probability = 0.00, Count = 1
, -> scores_out: Probability = 0.00, Count = 1
, -> batchSize: Probability = 0.00, Count = 1
, -> -: Probability = 0.00, Count = 1
, -> stride: Probability = 0.00, Count = 1
, -> rt2: Probability = 0.00, Count = 1
, -> gpu_img_out_r: Probability = 0.00, Count = 1
, -> index: Probability = 0.00, Count = 1
, -> rt: Probability = 0.00, Count = 1
, -> minw: Probability = 0.00, Count = 1
, -> minh: Probability = 0.00, Count = 1
, -> step: Probability = 0.00, Count = 1
, -> temp_diff: Probability = 0.00, Count = 1
, -> channel: Probability = 0.00, Count = 1
, -> top_data: Probability = 0.00, Count = 1
, -> wsize: Probability = 0.00, Count = 1
void -> void: Probability = 0.93, Count = 171
void -> x: Probability = 0.01, Count = 1
void -> int: Probability = 0.01, Count = 1
void -> float: Probability = 0.01, Count = 1
void -> const: Probability = 0.01, Count = 1
void -> tid: Probability = 0.01, Count = 1
void -> {: Probability = 0.01, Count = 1
void -> ,: Probability = 0.01, Count = 1
void -> __global__: Probability = 0.01, Count = 1
void -> :: Probability = 0.01, Count = 1
void -> *: Probability = 0.01, Count = 1
void -> size_t: Probability = 0.01, Count = 1
void -> MulMatrixOnGPU: Probability = 0.01, Count = 1
idx -> blockIdx: Probability = 0.10, Count = 13
idx -> ]: Probability = 0.03, Count = 4
idx -> x: Probability = 0.05, Count = 7
idx -> threadIdx: Probability = 0.05, Count = 6
idx -> <: Probability = 0.03, Count = 4
idx -> blockDim: Probability = 0.03, Count = 4
idx -> .: Probability = 0.05, Count = 6
idx -> int: Probability = 0.05, Count = 6
idx -> ;: Probability = 0.06, Count = 8
idx -> N: Probability = 0.02, Count = 2
idx -> idx: Probability = 0.10, Count = 13
idx -> {: Probability = 0.04, Count = 5
idx -> ,: Probability = 0.02, Count = 3
idx -> a: Probability = 0.02, Count = 2
idx -> *: Probability = 0.05, Count = 6
idx -> =: Probability = 0.08, Count = 10
idx -> double: Probability = 0.01, Count = 1
idx -> c: Probability = 0.01, Count = 1
idx -> ): Probability = 0.02, Count = 2
idx -> +: Probability = 0.05, Count = 6
idx -> inputleft: Probability = 0.01, Count = 1
idx -> inner_reps: Probability = 0.01, Count = 1
idx -> 0: Probability = 0.01, Count = 1
idx -> d_in: Probability = 0.01, Count = 1
idx -> (: Probability = 0.02, Count = 3
idx -> twod1: Probability = 0.02, Count = 2
idx -> [: Probability = 0.01, Count = 1
idx -> }: Probability = 0.01, Count = 1
idx -> unsigned: Probability = 0.02, Count = 3
idx -> cols: Probability = 0.01, Count = 1
idx -> if: Probability = 0.01, Count = 1
idx -> temp: Probability = 0.01, Count = 1
idx -> float: Probability = 0.01, Count = 1
idx -> column: Probability = 0.01, Count = 1
idx -> return: Probability = 0.01, Count = 1
idx -> y: Probability = 0.01, Count = 1
idx -> long: Probability = 0.01, Count = 1
idx -> i: Probability = 0.01, Count = 1
numElements -> numElements: Probability = 1.00, Count = 2
) -> ): Probability = 0.14, Count = 92
) -> {: Probability = 0.03, Count = 19
) -> blockDim: Probability = 0.02, Count = 10
) -> tid: Probability = 0.00, Count = 3
) -> ;: Probability = 0.05, Count = 34
) -> ]: Probability = 0.02, Count = 15
) -> <: Probability = 0.02, Count = 11
) -> y: Probability = 0.02, Count = 13
) -> x: Probability = 0.05, Count = 35
) -> if: Probability = 0.01, Count = 9
) -> N: Probability = 0.01, Count = 4
) -> ,: Probability = 0.03, Count = 22
) -> val: Probability = 0.00, Count = 2
) -> .: Probability = 0.07, Count = 43
) -> =: Probability = 0.04, Count = 24
) -> output: Probability = 0.00, Count = 2
) -> *: Probability = 0.04, Count = 28
) -> int: Probability = 0.06, Count = 37
) -> t_id: Probability = 0.00, Count = 1
) -> +: Probability = 0.03, Count = 20
) -> i: Probability = 0.02, Count = 14
) -> gridDim: Probability = 0.00, Count = 2
) -> j: Probability = 0.01, Count = 4
) -> [: Probability = 0.02, Count = 14
) -> threadIdx: Probability = 0.02, Count = 11
) -> float: Probability = 0.02, Count = 10
) -> tmp: Probability = 0.00, Count = 1
) -> }: Probability = 0.02, Count = 10
) -> c: Probability = 0.00, Count = 2
) -> (: Probability = 0.04, Count = 24
) -> blockIdx: Probability = 0.02, Count = 13
) -> a: Probability = 0.00, Count = 2
) -> return: Probability = 0.00, Count = 3
) -> idx: Probability = 0.00, Count = 3
) -> INCX: Probability = 0.00, Count = 1
) -> Y: Probability = 0.00, Count = 1
) -> size: Probability = 0.00, Count = 3
) -> /: Probability = 0.00, Count = 1
) -> m: Probability = 0.00, Count = 1
) -> gid: Probability = 0.00, Count = 1
) -> col: Probability = 0.00, Count = 2
) -> odd_inc: Probability = 0.00, Count = 1
) -> tx: Probability = 0.00, Count = 2
) -> prA: Probability = 0.00, Count = 1
) -> un_idx: Probability = 0.00, Count = 1
) -> 5: Probability = 0.00, Count = 1
) -> score_thr: Probability = 0.00, Count = 1
) -> set_valid_mask: Probability = 0.00, Count = 1
) -> else: Probability = 0.00, Count = 1
) -> 1: Probability = 0.00, Count = 3
) -> width: Probability = 0.00, Count = 2
) -> nnz: Probability = 0.00, Count = 1
) -> diff: Probability = 0.00, Count = 1
) -> nx: Probability = 0.00, Count = 1
) -> dec_index: Probability = 0.00, Count = 1
) -> -: Probability = 0.00, Count = 1
) -> memHeight: Probability = 0.00, Count = 1
) -> devMatX: Probability = 0.00, Count = 1
) -> row: Probability = 0.00, Count = 1
) -> result: Probability = 0.00, Count = 1
) -> |: Probability = 0.00, Count = 1
) -> long: Probability = 0.00, Count = 3
) -> k: Probability = 0.00, Count = 2
) -> input_str_cuda: Probability = 0.00, Count = 1
) -> b: Probability = 0.00, Count = 1
) -> 0: Probability = 0.01, Count = 7
) -> :: Probability = 0.00, Count = 1
) -> maxhd: Probability = 0.00, Count = 1
) -> d_in: Probability = 0.00, Count = 2
) -> ind_in: Probability = 0.00, Count = 2
) -> p: Probability = 0.00, Count = 1
) -> n: Probability = 0.00, Count = 2
) -> double: Probability = 0.00, Count = 1
) -> for: Probability = 0.00, Count = 3
) -> sum: Probability = 0.00, Count = 2
) -> c2: Probability = 0.00, Count = 2
) -> c1: Probability = 0.00, Count = 1
) -> unsigned: Probability = 0.00, Count = 3
) -> column: Probability = 0.00, Count = 2
) -> z: Probability = 0.00, Count = 2
) -> depth: Probability = 0.00, Count = 2
) -> binary: Probability = 0.00, Count = 1
) -> index: Probability = 0.01, Count = 8
) -> UN: Probability = 0.00, Count = 1
) -> stepSize: Probability = 0.00, Count = 1
) -> __syncthreads: Probability = 0.00, Count = 1
) -> tIndx: Probability = 0.00, Count = 1
) -> cols: Probability = 0.00, Count = 1
) -> >: Probability = 0.00, Count = 1
) -> u: Probability = 0.00, Count = 2
) -> d_indptr: Probability = 0.00, Count = 1
) -> &: Probability = 0.00, Count = 2
) -> eachElement: Probability = 0.00, Count = 1
) -> element_c: Probability = 0.00, Count = 1
) -> num: Probability = 0.00, Count = 2
) -> const: Probability = 0.00, Count = 2
) -> h: Probability = 0.00, Count = 1
) -> out: Probability = 0.00, Count = 1
) -> sr: Probability = 0.00, Count = 1
) -> width_col: Probability = 0.00, Count = 1
) -> firstIndexToGrab: Probability = 0.00, Count = 1
) -> zq: Probability = 0.00, Count = 1
) -> gpu_img_out_b: Probability = 0.00, Count = 1
) -> step: Probability = 0.00, Count = 1
< -> <: Probability = 0.03, Count = 11
< -> }: Probability = 0.01, Count = 2
< -> .: Probability = 0.07, Count = 22
< -> y: Probability = 0.05, Count = 16
< -> ]: Probability = 0.03, Count = 10
< -> int: Probability = 0.04, Count = 13
< -> =: Probability = 0.07, Count = 24
< -> blockIdx: Probability = 0.03, Count = 9
< -> *: Probability = 0.05, Count = 18
< -> [: Probability = 0.01, Count = 2
< -> (: Probability = 0.04, Count = 13
< -> +: Probability = 0.06, Count = 21
< -> blockDim: Probability = 0.04, Count = 15
< -> >: Probability = 0.02, Count = 6
< -> ): Probability = 0.02, Count = 6
< -> j: Probability = 0.01, Count = 4
< -> idx: Probability = 0.01, Count = 3
< -> threadIdx: Probability = 0.04, Count = 13
< -> i: Probability = 0.02, Count = 8
< -> x: Probability = 0.07, Count = 25
< -> {: Probability = 0.02, Count = 6
< -> if: Probability = 0.02, Count = 6
< -> count: Probability = 0.00, Count = 1
< -> row: Probability = 0.02, Count = 6
< -> g_data: Probability = 0.00, Count = 1
< -> float: Probability = 0.01, Count = 2
< -> output: Probability = 0.00, Count = 1
< -> dims: Probability = 0.00, Count = 1
< -> ;: Probability = 0.05, Count = 17
< -> sy: Probability = 0.00, Count = 1
< -> &: Probability = 0.01, Count = 3
< -> char: Probability = 0.00, Count = 1
< -> ,: Probability = 0.01, Count = 3
< -> rows: Probability = 0.00, Count = 1
< -> N: Probability = 0.00, Count = 1
< -> bit_index: Probability = 0.00, Count = 1
< -> d_in: Probability = 0.00, Count = 1
< -> for: Probability = 0.00, Count = 1
< -> dia: Probability = 0.00, Count = 1
< -> cos: Probability = 0.00, Count = 1
< -> jj: Probability = 0.00, Count = 1
< -> sum: Probability = 0.00, Count = 1
< -> ny: Probability = 0.00, Count = 1
< -> Row: Probability = 0.00, Count = 1
< -> 0: Probability = 0.01, Count = 3
< -> size_block: Probability = 0.00, Count = 1
< -> |: Probability = 0.00, Count = 1
< -> binary: Probability = 0.00, Count = 1
< -> End: Probability = 0.00, Count = 1
< -> c: Probability = 0.01, Count = 2
< -> grid_width: Probability = 0.00, Count = 1
< -> bIndy: Probability = 0.00, Count = 1
< -> Cd: Probability = 0.00, Count = 1
< -> return: Probability = 0.00, Count = 1
< -> z: Probability = 0.01, Count = 2
< -> d_indptr: Probability = 0.00, Count = 1
< -> host_inputArray1: Probability = 0.00, Count = 1
< -> newvalue: Probability = 0.00, Count = 1
< -> n: Probability = 0.00, Count = 1
< -> tid: Probability = 0.00, Count = 1
< -> u: Probability = 0.00, Count = 1
< -> index: Probability = 0.01, Count = 3
< -> stride: Probability = 0.00, Count = 1
< -> out_index: Probability = 0.00, Count = 1
< -> long: Probability = 0.00, Count = 1
< -> 1: Probability = 0.00, Count = 1
< -> P: Probability = 0.00, Count = 1
< -> batchSize: Probability = 0.01, Count = 2
< -> step: Probability = 0.00, Count = 1
< -> wsize: Probability = 0.00, Count = 1
< -> top_data: Probability = 0.00, Count = 1
int -> int: Probability = 0.35, Count = 328
int -> {: Probability = 0.02, Count = 23
int -> threadIdx: Probability = 0.01, Count = 9
int -> .: Probability = 0.04, Count = 36
int -> =: Probability = 0.06, Count = 53
int -> i: Probability = 0.01, Count = 9
int -> (: Probability = 0.02, Count = 16
int -> ,: Probability = 0.06, Count = 56
int -> index: Probability = 0.00, Count = 4
int -> output: Probability = 0.00, Count = 4
int -> ]: Probability = 0.01, Count = 5
int -> idx: Probability = 0.00, Count = 2
int -> ): Probability = 0.03, Count = 25
int -> nrows: Probability = 0.00, Count = 1
int -> offsets: Probability = 0.00, Count = 1
int -> x: Probability = 0.03, Count = 27
int -> blockIdx: Probability = 0.02, Count = 17
int -> y: Probability = 0.01, Count = 8
int -> nthreads: Probability = 0.00, Count = 1
int -> nx: Probability = 0.00, Count = 3
int -> gid: Probability = 0.00, Count = 1
int -> double: Probability = 0.01, Count = 6
int -> c: Probability = 0.00, Count = 3
int -> <: Probability = 0.01, Count = 7
int -> size: Probability = 0.01, Count = 5
int -> val2: Probability = 0.00, Count = 1
int -> *: Probability = 0.04, Count = 35
int -> unsigned: Probability = 0.01, Count = 7
int -> }: Probability = 0.00, Count = 2
int -> const: Probability = 0.02, Count = 19
int -> ;: Probability = 0.02, Count = 20
int -> +: Probability = 0.02, Count = 16
int -> z: Probability = 0.00, Count = 2
int -> myId: Probability = 0.00, Count = 1
int -> float: Probability = 0.03, Count = 31
int -> devSpeed: Probability = 0.00, Count = 1
int -> bool: Probability = 0.00, Count = 1
int -> blockDim: Probability = 0.01, Count = 8
int -> tid: Probability = 0.00, Count = 3
int -> gridDim: Probability = 0.00, Count = 1
int -> 0: Probability = 0.00, Count = 4
int -> m: Probability = 0.00, Count = 3
int -> r_sum: Probability = 0.00, Count = 1
int -> counts: Probability = 0.00, Count = 1
int -> if: Probability = 0.00, Count = 4
int -> trans_pos: Probability = 0.00, Count = 1
int -> void: Probability = 0.00, Count = 2
int -> perimeterRes: Probability = 0.00, Count = 1
int -> &: Probability = 0.00, Count = 1
int -> d_in: Probability = 0.00, Count = 1
int -> N: Probability = 0.00, Count = 1
int -> col: Probability = 0.00, Count = 2
int -> std: Probability = 0.00, Count = 1
int -> size_t: Probability = 0.00, Count = 1
int -> start: Probability = 0.00, Count = 1
int -> 1: Probability = 0.00, Count = 3
int -> indices: Probability = 0.00, Count = 2
int -> depth_scale: Probability = 0.00, Count = 1
int -> k: Probability = 0.00, Count = 3
int -> d_ind: Probability = 0.00, Count = 1
int -> mxm_1d: Probability = 0.00, Count = 1
int -> INCX: Probability = 0.00, Count = 1
int -> ny: Probability = 0.00, Count = 1
int -> Col: Probability = 0.00, Count = 1
int -> Row: Probability = 0.00, Count = 1
int -> c1: Probability = 0.00, Count = 2
int -> r1: Probability = 0.00, Count = 1
int -> r: Probability = 0.00, Count = 1
int -> n: Probability = 0.00, Count = 2
int -> LW: Probability = 0.00, Count = 1
int -> column: Probability = 0.00, Count = 1
int -> offset: Probability = 0.00, Count = 1
int -> neighbors: Probability = 0.00, Count = 1
int -> l: Probability = 0.00, Count = 1
int -> row: Probability = 0.00, Count = 1
int -> -: Probability = 0.00, Count = 2
int -> RES: Probability = 0.00, Count = 1
int -> IJ: Probability = 0.00, Count = 2
int -> mask_size: Probability = 0.00, Count = 1
int -> array_size: Probability = 0.00, Count = 2
int -> ELEMENT_INDEX: Probability = 0.00, Count = 1
int -> frontJump: Probability = 0.00, Count = 1
int -> batchOutJump: Probability = 0.00, Count = 1
int -> outputlength: Probability = 0.00, Count = 2
int -> imageW: Probability = 0.00, Count = 1
int -> imageH: Probability = 0.00, Count = 1
int -> colsA: Probability = 0.00, Count = 1
int -> b: Probability = 0.00, Count = 1
int -> long: Probability = 0.00, Count = 1
int -> rows: Probability = 0.00, Count = 1
int -> dim: Probability = 0.00, Count = 1
int -> 3: Probability = 0.00, Count = 1
int -> before_nms_boxes: Probability = 0.00, Count = 1
int -> for: Probability = 0.00, Count = 3
int -> dims: Probability = 0.00, Count = 2
int -> j: Probability = 0.00, Count = 1
int -> ptr_src_0: Probability = 0.00, Count = 1
int -> currentFrame: Probability = 0.00, Count = 1
int -> by: Probability = 0.00, Count = 1
int -> bands: Probability = 0.00, Count = 1
int -> s: Probability = 0.00, Count = 1
int -> devideNum: Probability = 0.00, Count = 1
int -> u: Probability = 0.00, Count = 1
int -> uLength: Probability = 0.00, Count = 1
int -> si: Probability = 0.00, Count = 1
int -> d_KinectDisparityPitch: Probability = 0.00, Count = 1
int -> sumQ: Probability = 0.00, Count = 1
int -> dx: Probability = 0.00, Count = 1
int -> minc: Probability = 0.00, Count = 1
int -> minw: Probability = 0.00, Count = 2
int -> minh: Probability = 0.00, Count = 1
int -> out: Probability = 0.00, Count = 1
int -> W: Probability = 0.00, Count = 1
int -> scale: Probability = 0.00, Count = 1
int -> stride: Probability = 0.00, Count = 1
int -> batch: Probability = 0.00, Count = 2
int -> data_im: Probability = 0.00, Count = 1
int -> height: Probability = 0.00, Count = 2
int -> totalScoreNum: Probability = 0.00, Count = 1
int -> classIndex: Probability = 0.00, Count = 1
int -> classNum: Probability = 0.00, Count = 1
int -> pic: Probability = 0.00, Count = 1
int -> 100000: Probability = 0.00, Count = 1
int -> 2: Probability = 0.00, Count = 1
int -> ksize: Probability = 0.00, Count = 2
int -> data_col: Probability = 0.00, Count = 1
int -> gpu_img_out_b: Probability = 0.00, Count = 2
int -> 402: Probability = 0.00, Count = 1
int -> rt2: Probability = 0.00, Count = 1
int -> mult: Probability = 0.00, Count = 1
int -> h1: Probability = 0.00, Count = 1
int -> sample: Probability = 0.00, Count = 1
int -> batchSize: Probability = 0.00, Count = 1
int -> >: Probability = 0.00, Count = 1
int -> temp_diff: Probability = 0.00, Count = 1
int -> width: Probability = 0.00, Count = 1
int -> /: Probability = 0.00, Count = 1
100 -> ;: Probability = 0.11, Count = 1
100 -> int: Probability = 0.22, Count = 2
100 -> width: Probability = 0.33, Count = 3
100 -> *: Probability = 0.22, Count = 2
100 -> y: Probability = 0.11, Count = 1
( -> (: Probability = 0.33, Count = 202
( -> blockIdx: Probability = 0.03, Count = 21
( -> arrayCount: Probability = 0.00, Count = 1
( -> idx: Probability = 0.01, Count = 7
( -> [: Probability = 0.02, Count = 11
( -> ): Probability = 0.03, Count = 18
( -> i: Probability = 0.03, Count = 16
( -> .: Probability = 0.05, Count = 32
( -> int: Probability = 0.04, Count = 24
( -> +: Probability = 0.02, Count = 10
( -> u: Probability = 0.00, Count = 3
( -> {: Probability = 0.02, Count = 15
( -> x: Probability = 0.02, Count = 15
( -> blockDim: Probability = 0.02, Count = 11
( -> ,: Probability = 0.01, Count = 5
( -> index: Probability = 0.02, Count = 13
( -> *: Probability = 0.04, Count = 22
( -> gid: Probability = 0.00, Count = 2
( -> dmul_Scalar_matrix: Probability = 0.00, Count = 1
( -> N: Probability = 0.01, Count = 4
( -> __global__: Probability = 0.00, Count = 1
( -> dsubtract_matrix: Probability = 0.00, Count = 1
( -> threadIdx: Probability = 0.01, Count = 7
( -> y: Probability = 0.01, Count = 6
( -> =: Probability = 0.03, Count = 21
( -> tid: Probability = 0.01, Count = 7
( -> id: Probability = 0.01, Count = 4
( -> un_idx: Probability = 0.00, Count = 1
( -> column: Probability = 0.00, Count = 2
( -> thread_index: Probability = 0.00, Count = 2
( -> ;: Probability = 0.03, Count = 18
( -> if: Probability = 0.01, Count = 6
( -> score_thr: Probability = 0.00, Count = 1
( -> >: Probability = 0.01, Count = 4
( -> ]: Probability = 0.01, Count = 5
( -> output: Probability = 0.00, Count = 2
( -> filter: Probability = 0.00, Count = 1
( -> j: Probability = 0.01, Count = 4
( -> &: Probability = 0.00, Count = 1
( -> <: Probability = 0.01, Count = 5
( -> n: Probability = 0.00, Count = 1
( -> stride: Probability = 0.00, Count = 1
( -> Ysize: Probability = 0.00, Count = 1
( -> dec_index: Probability = 0.00, Count = 1
( -> areaRes: Probability = 0.00, Count = 1
( -> col: Probability = 0.00, Count = 1
( -> const: Probability = 0.00, Count = 2
( -> long: Probability = 0.00, Count = 2
( -> keyCharPtr: Probability = 0.00, Count = 1
( -> b: Probability = 0.00, Count = 3
( -> globalCalculateKernel: Probability = 0.00, Count = 1
( -> row: Probability = 0.00, Count = 2
( -> meanImage: Probability = 0.00, Count = 1
( -> maxhd: Probability = 0.00, Count = 3
( -> float: Probability = 0.01, Count = 8
( -> d_in: Probability = 0.00, Count = 2
( -> for: Probability = 0.01, Count = 5
( -> d_label: Probability = 0.00, Count = 1
( -> ind_out: Probability = 0.00, Count = 1
( -> Row: Probability = 0.00, Count = 2
( -> 0: Probability = 0.00, Count = 3
( -> IJ: Probability = 0.00, Count = 1
( -> unsigned: Probability = 0.01, Count = 5
( -> columns: Probability = 0.00, Count = 1
( -> my_pixel: Probability = 0.00, Count = 1
( -> nx: Probability = 0.00, Count = 1
( -> return: Probability = 0.00, Count = 2
( -> gridDim: Probability = 0.00, Count = 3
( -> End: Probability = 0.00, Count = 1
( -> pb: Probability = 0.00, Count = 1
( -> indexOutBatch: Probability = 0.00, Count = 1
( -> in_index: Probability = 0.00, Count = 1
( -> colsB: Probability = 0.00, Count = 1
( -> tIndx: Probability = 0.00, Count = 1
( -> bIndx: Probability = 0.00, Count = 1
( -> spatial: Probability = 0.00, Count = 1
( -> cols: Probability = 0.00, Count = 2
( -> size2d: Probability = 0.00, Count = 1
( -> z: Probability = 0.00, Count = 1
( -> char: Probability = 0.01, Count = 4
( -> eachElement: Probability = 0.00, Count = 1
( -> height_blk: Probability = 0.00, Count = 1
( -> d_KinectDisparityPitch: Probability = 0.00, Count = 1
( -> 1: Probability = 0.00, Count = 1
( -> 100000: Probability = 0.00, Count = 1
( -> -: Probability = 0.00, Count = 1
( -> anchorW: Probability = 0.00, Count = 1
( -> height: Probability = 0.00, Count = 1
data -> [: Probability = 0.17, Count = 1
data -> data: Probability = 0.33, Count = 2
data -> val: Probability = 0.17, Count = 1
data -> }: Probability = 0.17, Count = 1
data -> stride: Probability = 0.17, Count = 1
for -> if: Probability = 0.02, Count = 6
for -> +: Probability = 0.05, Count = 16
for -> int: Probability = 0.15, Count = 45
for -> .: Probability = 0.07, Count = 22
for -> x: Probability = 0.06, Count = 17
for -> N: Probability = 0.01, Count = 2
for -> unsigned: Probability = 0.01, Count = 3
for -> for: Probability = 0.01, Count = 3
for -> [: Probability = 0.03, Count = 9
for -> tid: Probability = 0.00, Count = 1
for -> t_id: Probability = 0.00, Count = 1
for -> (: Probability = 0.03, Count = 9
for -> ): Probability = 0.03, Count = 8
for -> float: Probability = 0.01, Count = 3
for -> nblocks: Probability = 0.00, Count = 1
for -> {: Probability = 0.02, Count = 7
for -> blockIdx: Probability = 0.02, Count = 6
for -> threadIdx: Probability = 0.03, Count = 8
for -> scalar: Probability = 0.00, Count = 1
for -> blockDim: Probability = 0.03, Count = 9
for -> ,: Probability = 0.03, Count = 9
for -> i: Probability = 0.02, Count = 5
for -> Y: Probability = 0.00, Count = 1
for -> 0: Probability = 0.01, Count = 3
for -> *: Probability = 0.04, Count = 11
for -> inner_reps: Probability = 0.00, Count = 1
for -> =: Probability = 0.06, Count = 17
for -> idx: Probability = 0.01, Count = 2
for -> 2: Probability = 0.00, Count = 1
for -> y: Probability = 0.03, Count = 8
for -> count: Probability = 0.00, Count = 1
for -> |: Probability = 0.00, Count = 1
for -> &: Probability = 0.01, Count = 2
for -> const: Probability = 0.02, Count = 5
for -> alpha: Probability = 0.00, Count = 1
for -> I: Probability = 0.00, Count = 1
for -> long: Probability = 0.01, Count = 2
for -> size: Probability = 0.00, Count = 1
for -> c: Probability = 0.00, Count = 1
for -> b: Probability = 0.00, Count = 1
for -> maxval: Probability = 0.00, Count = 1
for -> ;: Probability = 0.05, Count = 14
for -> <: Probability = 0.01, Count = 3
for -> col: Probability = 0.00, Count = 1
for -> row: Probability = 0.01, Count = 2
for -> j: Probability = 0.00, Count = 1
for -> ]: Probability = 0.00, Count = 1
for -> k: Probability = 0.01, Count = 2
for -> a: Probability = 0.00, Count = 1
for -> Row: Probability = 0.00, Count = 1
for -> c2: Probability = 0.00, Count = 1
for -> z: Probability = 0.01, Count = 2
for -> depth: Probability = 0.01, Count = 2
for -> column: Probability = 0.00, Count = 1
for -> f: Probability = 0.00, Count = 1
for -> result: Probability = 0.00, Count = 1
for -> n: Probability = 0.01, Count = 2
for -> gid: Probability = 0.00, Count = 1
for -> cols: Probability = 0.00, Count = 1
for -> src: Probability = 0.00, Count = 1
for -> dims: Probability = 0.00, Count = 1
for -> uLength: Probability = 0.00, Count = 1
for -> gridDim: Probability = 0.00, Count = 1
for -> >: Probability = 0.00, Count = 1
for -> return: Probability = 0.00, Count = 1
for -> P: Probability = 0.00, Count = 1
for -> index: Probability = 0.01, Count = 2
for -> }: Probability = 0.01, Count = 2
for -> fbase: Probability = 0.00, Count = 1
; -> }: Probability = 0.01, Count = 8
; -> ): Probability = 0.03, Count = 30
; -> (: Probability = 0.04, Count = 36
; -> if: Probability = 0.02, Count = 18
; -> x: Probability = 0.08, Count = 74
; -> ]: Probability = 0.02, Count = 19
; -> +: Probability = 0.05, Count = 50
; -> *: Probability = 0.06, Count = 54
; -> i: Probability = 0.03, Count = 26
; -> y: Probability = 0.03, Count = 28
; -> <: Probability = 0.01, Count = 13
; -> [: Probability = 0.02, Count = 21
; -> n: Probability = 0.01, Count = 5
; -> N: Probability = 0.00, Count = 2
; -> array: Probability = 0.00, Count = 1
; -> {: Probability = 0.01, Count = 13
; -> .: Probability = 0.09, Count = 84
; -> blockDim: Probability = 0.02, Count = 22
; -> input: Probability = 0.00, Count = 1
; -> =: Probability = 0.07, Count = 62
; -> tid: Probability = 0.00, Count = 4
; -> blockIdx: Probability = 0.03, Count = 27
; -> c: Probability = 0.00, Count = 2
; -> threadIdx: Probability = 0.02, Count = 18
; -> dim: Probability = 0.00, Count = 1
; -> u: Probability = 0.00, Count = 2
; -> ;: Probability = 0.07, Count = 62
; -> gridDim: Probability = 0.00, Count = 2
; -> maxThreads: Probability = 0.00, Count = 1
; -> ,: Probability = 0.01, Count = 12
; -> b: Probability = 0.00, Count = 3
; -> a: Probability = 0.00, Count = 1
; -> int: Probability = 0.03, Count = 29
; -> double: Probability = 0.00, Count = 3
; -> idx: Probability = 0.01, Count = 7
; -> size: Probability = 0.00, Count = 2
; -> >: Probability = 0.01, Count = 5
; -> return: Probability = 0.01, Count = 10
; -> while: Probability = 0.00, Count = 1
; -> dev_gradient: Probability = 0.00, Count = 1
; -> lid: Probability = 0.00, Count = 2
; -> tx: Probability = 0.00, Count = 1
; -> prA: Probability = 0.00, Count = 1
; -> un_idx: Probability = 0.00, Count = 1
; -> column: Probability = 0.00, Count = 1
; -> sum: Probability = 0.00, Count = 2
; -> 4: Probability = 0.00, Count = 1
; -> 0: Probability = 0.01, Count = 13
; -> else: Probability = 0.00, Count = 2
; -> 2: Probability = 0.00, Count = 1
; -> const: Probability = 0.01, Count = 5
; -> 1: Probability = 0.00, Count = 2
; -> k_x: Probability = 0.00, Count = 1
; -> temp: Probability = 0.00, Count = 4
; -> r_sum: Probability = 0.00, Count = 1
; -> 10: Probability = 0.00, Count = 1
; -> 3: Probability = 0.00, Count = 2
; -> index: Probability = 0.01, Count = 7
; -> alphas: Probability = 0.00, Count = 1
; -> cluster: Probability = 0.00, Count = 1
; -> /: Probability = 0.00, Count = 2
; -> m: Probability = 0.00, Count = 3
; -> abs: Probability = 0.00, Count = 1
; -> pred: Probability = 0.00, Count = 1
; -> j: Probability = 0.00, Count = 2
; -> idy: Probability = 0.00, Count = 1
; -> unsigned: Probability = 0.01, Count = 8
; -> dec_size: Probability = 0.00, Count = 1
; -> dec_index: Probability = 0.00, Count = 1
; -> d_in: Probability = 0.00, Count = 1
; -> width: Probability = 0.00, Count = 3
; -> k: Probability = 0.01, Count = 6
; -> long: Probability = 0.01, Count = 6
; -> char: Probability = 0.00, Count = 1
; -> input_length: Probability = 0.00, Count = 1
; -> possible_plaintext_str_cuda: Probability = 0.00, Count = 1
; -> id: Probability = 0.00, Count = 1
; -> col: Probability = 0.00, Count = 1
; -> g: Probability = 0.00, Count = 1
; -> pixelNum: Probability = 0.00, Count = 1
; -> :: Probability = 0.00, Count = 2
; -> for: Probability = 0.01, Count = 6
; -> images: Probability = 0.00, Count = 1
; -> maxhd: Probability = 0.00, Count = 1
; -> ?: Probability = 0.00, Count = 1
; -> indptr: Probability = 0.00, Count = 1
; -> ind_out: Probability = 0.00, Count = 2
; -> float: Probability = 0.00, Count = 3
; -> mxm_1d: Probability = 0.00, Count = 1
; -> A: Probability = 0.00, Count = 2
; -> reduction: Probability = 0.00, Count = 1
; -> r: Probability = 0.00, Count = 1
; -> z: Probability = 0.00, Count = 2
; -> -: Probability = 0.00, Count = 4
; -> grayImage: Probability = 0.00, Count = 1
; -> image: Probability = 0.00, Count = 2
; -> my_pixel: Probability = 0.00, Count = 1
; -> &: Probability = 0.00, Count = 2
; -> mean: Probability = 0.00, Count = 1
; -> left_rows: Probability = 0.00, Count = 1
; -> left: Probability = 0.00, Count = 1
; -> row: Probability = 0.00, Count = 4
; -> result: Probability = 0.00, Count = 1
; -> IJ: Probability = 0.00, Count = 2
; -> psi: Probability = 0.00, Count = 1
; -> outputlength: Probability = 0.00, Count = 1
; -> frontPrune: Probability = 0.00, Count = 1
; -> variance: Probability = 0.00, Count = 1
; -> filters: Probability = 0.00, Count = 1
; -> batch: Probability = 0.00, Count = 2
; -> size2d: Probability = 0.00, Count = 1
; -> rows: Probability = 0.00, Count = 1
; -> cols: Probability = 0.00, Count = 1
; -> ptr_src_0: Probability = 0.00, Count = 1
; -> B: Probability = 0.00, Count = 1
; -> K: Probability = 0.00, Count = 2
; -> pixel: Probability = 0.00, Count = 1
; -> median: Probability = 0.00, Count = 1
; -> newvalue: Probability = 0.00, Count = 1
; -> stride: Probability = 0.00, Count = 1
; -> aux: Probability = 0.00, Count = 1
; -> s: Probability = 0.00, Count = 1
; -> uLength: Probability = 0.00, Count = 1
; -> f1: Probability = 0.00, Count = 2
; -> C: Probability = 0.00, Count = 1
; -> q_q: Probability = 0.00, Count = 1
; -> data_im: Probability = 0.00, Count = 1
; -> ksize: Probability = 0.00, Count = 1
; -> width_col: Probability = 0.00, Count = 1
; -> frames: Probability = 0.00, Count = 1
; -> xMid: Probability = 0.00, Count = 1
; -> firstIndexToGrab: Probability = 0.00, Count = 1
; -> xp: Probability = 0.00, Count = 1
; -> xq: Probability = 0.00, Count = 1
; -> rt: Probability = 0.00, Count = 1
; -> gpu_img_out_r: Probability = 0.00, Count = 1
; -> bt2: Probability = 0.00, Count = 1
; -> rt2: Probability = 0.00, Count = 1
; -> gpu_img_out_b: Probability = 0.00, Count = 1
; -> dims: Probability = 0.00, Count = 1
; -> batchSize: Probability = 0.00, Count = 2
; -> wsize: Probability = 0.00, Count = 1
[ -> blockIdx: Probability = 0.00, Count = 1
[ -> x: Probability = 0.04, Count = 15
[ -> tid: Probability = 0.02, Count = 6
[ -> *: Probability = 0.07, Count = 23
[ -> blockDim: Probability = 0.01, Count = 2
[ -> idx: Probability = 0.01, Count = 5
[ -> i: Probability = 0.04, Count = 13
[ -> (: Probability = 0.03, Count = 10
[ -> [: Probability = 0.09, Count = 32
[ -> .: Probability = 0.03, Count = 10
[ -> array: Probability = 0.01, Count = 2
[ -> =: Probability = 0.06, Count = 19
[ -> c: Probability = 0.01, Count = 4
[ -> ;: Probability = 0.07, Count = 23
[ -> <: Probability = 0.02, Count = 8
[ -> index: Probability = 0.01, Count = 3
[ -> if: Probability = 0.01, Count = 5
[ -> +: Probability = 0.04, Count = 14
[ -> ,: Probability = 0.00, Count = 1
[ -> {: Probability = 0.02, Count = 6
[ -> a: Probability = 0.01, Count = 4
[ -> N: Probability = 0.01, Count = 2
[ -> B: Probability = 0.01, Count = 2
[ -> C: Probability = 0.01, Count = 2
[ -> b: Probability = 0.01, Count = 2
[ -> myId: Probability = 0.00, Count = 1
[ -> ]: Probability = 0.04, Count = 14
[ -> size: Probability = 0.00, Count = 1
[ -> return: Probability = 0.00, Count = 1
[ -> n: Probability = 0.00, Count = 1
[ -> m: Probability = 0.00, Count = 1
[ -> gridDim: Probability = 0.01, Count = 3
[ -> lid: Probability = 0.00, Count = 1
[ -> ): Probability = 0.01, Count = 4
[ -> odd_inc: Probability = 0.00, Count = 1
[ -> prA: Probability = 0.00, Count = 1
[ -> tact: Probability = 0.00, Count = 1
[ -> &: Probability = 0.00, Count = 1
[ -> column: Probability = 0.00, Count = 1
[ -> for: Probability = 0.00, Count = 1
[ -> num_threads: Probability = 0.01, Count = 2
[ -> 0: Probability = 0.01, Count = 4
[ -> g_in: Probability = 0.00, Count = 1
[ -> inner_reps: Probability = 0.00, Count = 1
[ -> id: Probability = 0.01, Count = 3
[ -> j: Probability = 0.01, Count = 3
[ -> }: Probability = 0.01, Count = 3
[ -> thread_id: Probability = 0.00, Count = 1
[ -> y: Probability = 0.01, Count = 2
[ -> dims: Probability = 0.00, Count = 1
[ -> tempval: Probability = 0.00, Count = 1
[ -> device_output: Probability = 0.00, Count = 1
[ -> int: Probability = 0.02, Count = 8
[ -> ns: Probability = 0.00, Count = 1
[ -> sxz: Probability = 0.00, Count = 1
[ -> 1: Probability = 0.01, Count = 3
[ -> diff: Probability = 0.00, Count = 1
[ -> :: Probability = 0.00, Count = 1
[ -> height: Probability = 0.00, Count = 1
[ -> Zsize: Probability = 0.00, Count = 1
[ -> pcountinner: Probability = 0.00, Count = 1
[ -> curr_decision: Probability = 0.00, Count = 1
[ -> temp: Probability = 0.01, Count = 2
[ -> width: Probability = 0.00, Count = 1
[ -> col: Probability = 0.01, Count = 2
[ -> float: Probability = 0.01, Count = 2
[ -> result: Probability = 0.00, Count = 1
[ -> corrSum: Probability = 0.00, Count = 1
[ -> k: Probability = 0.01, Count = 4
[ -> val: Probability = 0.00, Count = 1
[ -> input_length: Probability = 0.00, Count = 1
[ -> 3: Probability = 0.00, Count = 1
[ -> row: Probability = 0.00, Count = 1
[ -> tx: Probability = 0.01, Count = 2
[ -> >: Probability = 0.00, Count = 1
[ -> maxhd: Probability = 0.00, Count = 1
[ -> totalPixels: Probability = 0.00, Count = 1
[ -> p: Probability = 0.00, Count = 1
[ -> double: Probability = 0.00, Count = 1
[ -> nx: Probability = 0.01, Count = 2
[ -> offset: Probability = 0.01, Count = 3
[ -> my_pixel: Probability = 0.00, Count = 1
[ -> ny: Probability = 0.00, Count = 1
[ -> x0: Probability = 0.01, Count = 2
[ -> dt: Probability = 0.00, Count = 1
[ -> mean: Probability = 0.00, Count = 1
[ -> weights: Probability = 0.00, Count = 1
[ -> IJ: Probability = 0.01, Count = 3
[ -> -: Probability = 0.00, Count = 1
[ -> NJ: Probability = 0.00, Count = 1
[ -> RES: Probability = 0.00, Count = 1
[ -> threadIdx: Probability = 0.00, Count = 1
[ -> tc: Probability = 0.00, Count = 1
[ -> stepSize: Probability = 0.00, Count = 1
[ -> cols: Probability = 0.00, Count = 1
[ -> unsigned: Probability = 0.01, Count = 4
[ -> src: Probability = 0.00, Count = 1
[ -> groups: Probability = 0.00, Count = 1
[ -> /: Probability = 0.00, Count = 1
[ -> anchor: Probability = 0.00, Count = 1
{ -> data: Probability = 0.00, Count = 1
{ -> {: Probability = 0.15, Count = 72
{ -> =: Probability = 0.07, Count = 33
{ -> threadIdx: Probability = 0.01, Count = 5
{ -> ,: Probability = 0.03, Count = 14
{ -> if: Probability = 0.02, Count = 9
{ -> *: Probability = 0.03, Count = 15
{ -> int: Probability = 0.05, Count = 25
{ -> (: Probability = 0.03, Count = 14
{ -> x: Probability = 0.05, Count = 25
{ -> arrayA: Probability = 0.00, Count = 1
{ -> ): Probability = 0.04, Count = 17
{ -> blockIdx: Probability = 0.01, Count = 7
{ -> .: Probability = 0.06, Count = 27
{ -> tid: Probability = 0.00, Count = 1
{ -> blockDim: Probability = 0.02, Count = 11
{ -> ;: Probability = 0.05, Count = 24
{ -> return: Probability = 0.00, Count = 2
{ -> j: Probability = 0.01, Count = 3
{ -> n: Probability = 0.01, Count = 4
{ -> N: Probability = 0.00, Count = 1
{ -> i: Probability = 0.03, Count = 12
{ -> vec_out: Probability = 0.00, Count = 1
{ -> y: Probability = 0.02, Count = 10
{ -> +: Probability = 0.03, Count = 14
{ -> idx: Probability = 0.00, Count = 1
{ -> double: Probability = 0.00, Count = 1
{ -> }: Probability = 0.01, Count = 7
{ -> float: Probability = 0.01, Count = 5
{ -> k: Probability = 0.00, Count = 2
{ -> row: Probability = 0.00, Count = 2
{ -> ]: Probability = 0.02, Count = 11
{ -> id: Probability = 0.00, Count = 1
{ -> 0f: Probability = 0.00, Count = 1
{ -> <: Probability = 0.02, Count = 9
{ -> for: Probability = 0.00, Count = 1
{ -> k_x: Probability = 0.00, Count = 1
{ -> sum: Probability = 0.00, Count = 1
{ -> device_output: Probability = 0.00, Count = 1
{ -> cluster: Probability = 0.00, Count = 1
{ -> |: Probability = 0.00, Count = 1
{ -> [: Probability = 0.01, Count = 5
{ -> score: Probability = 0.00, Count = 1
{ -> ny: Probability = 0.00, Count = 1
{ -> nviews: Probability = 0.00, Count = 1
{ -> width: Probability = 0.00, Count = 1
{ -> mat_out: Probability = 0.00, Count = 1
{ -> idy: Probability = 0.00, Count = 1
{ -> unsigned: Probability = 0.00, Count = 2
{ -> Xsize: Probability = 0.00, Count = 1
{ -> 2: Probability = 0.00, Count = 1
{ -> memWidth: Probability = 0.00, Count = 1
{ -> areaRes: Probability = 0.00, Count = 1
{ -> 0: Probability = 0.01, Count = 4
{ -> pcount: Probability = 0.00, Count = 1
{ -> oe_flag: Probability = 0.00, Count = 1
{ -> dia: Probability = 0.00, Count = 1
{ -> b: Probability = 0.01, Count = 3
{ -> r: Probability = 0.00, Count = 1
{ -> std: Probability = 0.00, Count = 1
{ -> :: Probability = 0.00, Count = 1
{ -> pixelNum: Probability = 0.00, Count = 1
{ -> 1: Probability = 0.00, Count = 1
{ -> >: Probability = 0.01, Count = 3
{ -> indptr: Probability = 0.00, Count = 1
{ -> height: Probability = 0.00, Count = 2
{ -> d_ind_sub: Probability = 0.00, Count = 1
{ -> s: Probability = 0.00, Count = 1
{ -> Col: Probability = 0.00, Count = 1
{ -> c2: Probability = 0.00, Count = 1
{ -> temp: Probability = 0.00, Count = 1
{ -> nx: Probability = 0.00, Count = 1
{ -> mean: Probability = 0.00, Count = 1
{ -> out: Probability = 0.00, Count = 1
{ -> __restrict__: Probability = 0.00, Count = 1
{ -> right_columns: Probability = 0.00, Count = 1
{ -> right: Probability = 0.00, Count = 1
{ -> indexInBatch: Probability = 0.00, Count = 1
{ -> w: Probability = 0.00, Count = 1
{ -> cols: Probability = 0.00, Count = 1
{ -> z: Probability = 0.00, Count = 2
{ -> long: Probability = 0.00, Count = 1
{ -> &: Probability = 0.00, Count = 1
{ -> dims: Probability = 0.00, Count = 2
{ -> logf: Probability = 0.00, Count = 1
{ -> gridDim: Probability = 0.00, Count = 1
{ -> size_t: Probability = 0.00, Count = 1
{ -> dpsi: Probability = 0.00, Count = 1
{ -> tc: Probability = 0.00, Count = 1
{ -> pad: Probability = 0.00, Count = 1
{ -> const: Probability = 0.00, Count = 1
{ -> stride: Probability = 0.00, Count = 1
{ -> char: Probability = 0.00, Count = 1
{ -> 0x01: Probability = 0.00, Count = 1
{ -> zq: Probability = 0.00, Count = 1
{ -> rt: Probability = 0.00, Count = 1
{ -> anchorW: Probability = 0.00, Count = 1
{ -> index: Probability = 0.00, Count = 2
+ -> =: Probability = 0.07, Count = 54
+ -> ): Probability = 0.04, Count = 27
+ -> +: Probability = 0.08, Count = 63
+ -> x: Probability = 0.07, Count = 54
+ -> *: Probability = 0.04, Count = 31
+ -> .: Probability = 0.08, Count = 57
+ -> (: Probability = 0.04, Count = 30
+ -> if: Probability = 0.01, Count = 9
+ -> N: Probability = 0.01, Count = 7
+ -> data: Probability = 0.00, Count = 1
+ -> val: Probability = 0.00, Count = 1
+ -> threadIdx: Probability = 0.02, Count = 16
+ -> }: Probability = 0.01, Count = 5
+ -> ;: Probability = 0.07, Count = 53
+ -> {: Probability = 0.03, Count = 19
+ -> [: Probability = 0.03, Count = 22
+ -> maxThreads: Probability = 0.00, Count = 1
+ -> c: Probability = 0.00, Count = 2
+ -> idx: Probability = 0.00, Count = 2
+ -> blockIdx: Probability = 0.02, Count = 13
+ -> for: Probability = 0.01, Count = 6
+ -> vec_out: Probability = 0.00, Count = 1
+ -> ,: Probability = 0.01, Count = 5
+ -> <: Probability = 0.01, Count = 11
+ -> blockDim: Probability = 0.02, Count = 17
+ -> ]: Probability = 0.02, Count = 18
+ -> i: Probability = 0.03, Count = 19
+ -> value: Probability = 0.00, Count = 1
+ -> >: Probability = 0.01, Count = 5
+ -> size: Probability = 0.01, Count = 7
+ -> val2: Probability = 0.00, Count = 1
+ -> output: Probability = 0.00, Count = 1
+ -> X: Probability = 0.00, Count = 1
+ -> gridDim: Probability = 0.01, Count = 4
+ -> reductionSize: Probability = 0.00, Count = 1
+ -> row: Probability = 0.01, Count = 4
+ -> num_nodes: Probability = 0.00, Count = 1
+ -> 1: Probability = 0.01, Count = 6
+ -> d_acts: Probability = 0.00, Count = 1
+ -> int: Probability = 0.02, Count = 17
+ -> twod1: Probability = 0.00, Count = 2
+ -> j: Probability = 0.01, Count = 6
+ -> x_outer_prod: Probability = 0.00, Count = 1
+ -> y: Probability = 0.01, Count = 10
+ -> float: Probability = 0.01, Count = 5
+ -> temp: Probability = 0.00, Count = 2
+ -> device_input: Probability = 0.00, Count = 1
+ -> means: Probability = 0.00, Count = 1
+ -> else: Probability = 0.00, Count = 1
+ -> count: Probability = 0.00, Count = 1
+ -> /: Probability = 0.00, Count = 2
+ -> delta: Probability = 0.00, Count = 1
+ -> num_threads: Probability = 0.00, Count = 1
+ -> FFT: Probability = 0.00, Count = 1
+ -> nxprj2: Probability = 0.00, Count = 1
+ -> d_output: Probability = 0.00, Count = 1
+ -> |: Probability = 0.00, Count = 1
+ -> idy: Probability = 0.00, Count = 2
+ -> pos: Probability = 0.00, Count = 1
+ -> I: Probability = 0.00, Count = 1
+ -> tid: Probability = 0.00, Count = 3
+ -> 2: Probability = 0.00, Count = 2
+ -> devMat: Probability = 0.00, Count = 1
+ -> devMatX: Probability = 0.00, Count = 1
+ -> -: Probability = 0.01, Count = 8
+ -> Xsize: Probability = 0.00, Count = 1
+ -> d_in: Probability = 0.00, Count = 2
+ -> col: Probability = 0.01, Count = 5
+ -> 0: Probability = 0.02, Count = 13
+ -> long: Probability = 0.00, Count = 2
+ -> b: Probability = 0.00, Count = 1
+ -> sum: Probability = 0.01, Count = 4
+ -> jj: Probability = 0.00, Count = 1
+ -> m: Probability = 0.00, Count = 2
+ -> k: Probability = 0.01, Count = 6
+ -> n: Probability = 0.00, Count = 2
+ -> ny: Probability = 0.00, Count = 1
+ -> nx: Probability = 0.00, Count = 1
+ -> c2: Probability = 0.00, Count = 2
+ -> size_block: Probability = 0.00, Count = 2
+ -> channel: Probability = 0.00, Count = 2
+ -> my_pixel: Probability = 0.00, Count = 1
+ -> mean: Probability = 0.00, Count = 1
+ -> l: Probability = 0.00, Count = 1
+ -> cell: Probability = 0.00, Count = 1
+ -> result: Probability = 0.00, Count = 1
+ -> right_columns: Probability = 0.00, Count = 1
+ -> column: Probability = 0.00, Count = 2
+ -> IJ: Probability = 0.00, Count = 1
+ -> RES: Probability = 0.00, Count = 1
+ -> NJ: Probability = 0.00, Count = 1
+ -> NI: Probability = 0.00, Count = 1
+ -> out: Probability = 0.00, Count = 1
+ -> return: Probability = 0.00, Count = 3
+ -> id: Probability = 0.00, Count = 1
+ -> bIndx: Probability = 0.00, Count = 1
+ -> cols: Probability = 0.00, Count = 2
+ -> z: Probability = 0.01, Count = 4
+ -> size2d: Probability = 0.00, Count = 1
+ -> ptr_stc_1: Probability = 0.00, Count = 1
+ -> R: Probability = 0.00, Count = 1
+ -> width: Probability = 0.00, Count = 1
+ -> batchSize: Probability = 0.00, Count = 1
+ -> K: Probability = 0.00, Count = 1
+ -> host_inputArray2: Probability = 0.00, Count = 1
+ -> #: Probability = 0.00, Count = 1
+ -> numPerbatch: Probability = 0.00, Count = 1
+ -> height: Probability = 0.00, Count = 1
+ -> spatial: Probability = 0.00, Count = 1
+ -> index: Probability = 0.00, Count = 1
+ -> h: Probability = 0.00, Count = 1
+ -> unsigned: Probability = 0.00, Count = 1
+ -> width_col: Probability = 0.00, Count = 1
+ -> const: Probability = 0.00, Count = 1
+ -> dims: Probability = 0.00, Count = 2
+ -> char: Probability = 0.00, Count = 1
+ -> bit2: Probability = 0.00, Count = 1
+ -> yq: Probability = 0.00, Count = 1
+ -> gpu_img_in_y: Probability = 0.00, Count = 1
+ -> step: Probability = 0.00, Count = 1
] -> +: Probability = 0.05, Count = 15
] -> arrayCount: Probability = 0.00, Count = 1
] -> if: Probability = 0.02, Count = 5
] -> tasks: Probability = 0.00, Count = 1
] -> mat: Probability = 0.00, Count = 1
] -> [: Probability = 0.06, Count = 18
] -> ]: Probability = 0.10, Count = 29
] -> =: Probability = 0.07, Count = 22
] -> .: Probability = 0.04, Count = 11
] -> i: Probability = 0.04, Count = 11
] -> ;: Probability = 0.07, Count = 21
] -> ): Probability = 0.06, Count = 18
] -> idx: Probability = 0.01, Count = 3
] -> N: Probability = 0.01, Count = 2
] -> -: Probability = 0.01, Count = 3
] -> x: Probability = 0.02, Count = 6
] -> size: Probability = 0.00, Count = 1
] -> B: Probability = 0.00, Count = 1
] -> val1: Probability = 0.00, Count = 1
] -> (: Probability = 0.04, Count = 11
] -> <: Probability = 0.01, Count = 3
] -> myId: Probability = 0.00, Count = 1
] -> gridDim: Probability = 0.01, Count = 2
] -> tid: Probability = 0.01, Count = 3
] -> }: Probability = 0.03, Count = 8
] -> *: Probability = 0.03, Count = 9
] -> k: Probability = 0.00, Count = 1
] -> m: Probability = 0.00, Count = 1
] -> id: Probability = 0.00, Count = 1
] -> 0: Probability = 0.01, Count = 3
] -> numBlock: Probability = 0.00, Count = 1
] -> blockDim: Probability = 0.01, Count = 4
] -> y: Probability = 0.01, Count = 4
] -> blockIdx: Probability = 0.00, Count = 1
] -> length: Probability = 0.00, Count = 1
] -> vec: Probability = 0.00, Count = 1
] -> 1024: Probability = 0.00, Count = 1
] -> c: Probability = 0.01, Count = 3
] -> cluster: Probability = 0.00, Count = 1
] -> ,: Probability = 0.01, Count = 3
] -> 1: Probability = 0.01, Count = 3
] -> thread_index: Probability = 0.00, Count = 1
] -> int: Probability = 0.01, Count = 2
] -> j: Probability = 0.01, Count = 2
] -> height: Probability = 0.00, Count = 1
] -> stride: Probability = 0.00, Count = 1
] -> {: Probability = 0.01, Count = 4
] -> pcountinner: Probability = 0.00, Count = 1
] -> bit_decisions: Probability = 0.00, Count = 1
] -> devMatX: Probability = 0.00, Count = 1
] -> d_in: Probability = 0.00, Count = 1
] -> d_ch_flag: Probability = 0.00, Count = 1
] -> p: Probability = 0.01, Count = 2
] -> row: Probability = 0.01, Count = 2
] -> b: Probability = 0.00, Count = 1
] -> col: Probability = 0.01, Count = 3
] -> cos: Probability = 0.01, Count = 2
] -> a: Probability = 0.00, Count = 1
] -> pixelNum: Probability = 0.00, Count = 1
] -> maxvd: Probability = 0.00, Count = 1
] -> tx: Probability = 0.02, Count = 5
] -> matrix: Probability = 0.00, Count = 1
] -> float: Probability = 0.00, Count = 1
] -> double: Probability = 0.00, Count = 1
] -> n: Probability = 0.00, Count = 1
] -> INCX: Probability = 0.00, Count = 1
] -> C: Probability = 0.00, Count = 1
] -> pos: Probability = 0.01, Count = 2
] -> for: Probability = 0.01, Count = 3
] -> >: Probability = 0.01, Count = 2
] -> colsA: Probability = 0.00, Count = 1
] -> colsB: Probability = 0.00, Count = 1
] -> threadIdx: Probability = 0.01, Count = 2
] -> grad_x: Probability = 0.00, Count = 1
] -> cols: Probability = 0.00, Count = 1
] -> long: Probability = 0.00, Count = 1
] -> host_inputArray3: Probability = 0.00, Count = 1
] -> return: Probability = 0.00, Count = 1
] -> %: Probability = 0.00, Count = 1
] -> 2: Probability = 0.00, Count = 1
= -> .: Probability = 0.09, Count = 58
= -> 100: Probability = 0.00, Count = 1
= -> x: Probability = 0.07, Count = 47
= -> {: Probability = 0.03, Count = 20
= -> int: Probability = 0.04, Count = 24
= -> i: Probability = 0.02, Count = 16
= -> ,: Probability = 0.00, Count = 3
= -> ): Probability = 0.05, Count = 32
= -> idx: Probability = 0.00, Count = 3
= -> blockDim: Probability = 0.03, Count = 22
= -> ;: Probability = 0.06, Count = 40
= -> =: Probability = 0.08, Count = 55
= -> output: Probability = 0.00, Count = 1
= -> tid: Probability = 0.01, Count = 4
= -> threadIdx: Probability = 0.02, Count = 16
= -> *: Probability = 0.04, Count = 30
= -> blockIdx: Probability = 0.03, Count = 21
= -> ]: Probability = 0.03, Count = 21
= -> }: Probability = 0.01, Count = 8
= -> j: Probability = 0.01, Count = 7
= -> +: Probability = 0.04, Count = 24
= -> vec_out: Probability = 0.00, Count = 1
= -> dim: Probability = 0.00, Count = 1
= -> nblocks: Probability = 0.00, Count = 1
= -> if: Probability = 0.01, Count = 7
= -> dmul_Scalar_matrix: Probability = 0.00, Count = 1
= -> [: Probability = 0.02, Count = 12
= -> y: Probability = 0.02, Count = 14
= -> (: Probability = 0.04, Count = 25
= -> n: Probability = 0.01, Count = 6
= -> INCY: Probability = 0.00, Count = 2
= -> c: Probability = 0.01, Count = 4
= -> reduction: Probability = 0.00, Count = 2
= -> gridDim: Probability = 0.00, Count = 1
= -> row: Probability = 0.01, Count = 4
= -> g_data: Probability = 0.00, Count = 1
= -> id: Probability = 0.00, Count = 3
= -> prA: Probability = 0.00, Count = 1
= -> >: Probability = 0.01, Count = 5
= -> -: Probability = 0.01, Count = 7
= -> 3000: Probability = 0.00, Count = 1
= -> inner_reps: Probability = 0.00, Count = 1
= -> <: Probability = 0.01, Count = 10
= -> 1: Probability = 0.01, Count = 6
= -> return: Probability = 0.01, Count = 7
= -> height: Probability = 0.00, Count = 2
= -> szbeg: Probability = 0.00, Count = 1
= -> score_factors: Probability = 0.00, Count = 1
= -> else: Probability = 0.00, Count = 1
= -> ?: Probability = 0.00, Count = 1
= -> error: Probability = 0.00, Count = 1
= -> delta: Probability = 0.00, Count = 1
= -> &: Probability = 0.00, Count = 3
= -> unsigned: Probability = 0.01, Count = 4
= -> 3: Probability = 0.00, Count = 1
= -> 4: Probability = 0.00, Count = 1
= -> p: Probability = 0.00, Count = 3
= -> k: Probability = 0.00, Count = 2
= -> char: Probability = 0.00, Count = 1
= -> sin: Probability = 0.00, Count = 1
= -> cos: Probability = 0.00, Count = 1
= -> input: Probability = 0.00, Count = 1
= -> images: Probability = 0.00, Count = 1
= -> tx: Probability = 0.00, Count = 1
= -> vector: Probability = 0.00, Count = 1
= -> jj: Probability = 0.00, Count = 1
= -> ind_in: Probability = 0.00, Count = 2
= -> m: Probability = 0.00, Count = 1
= -> mxm_1d: Probability = 0.00, Count = 1
= -> double: Probability = 0.00, Count = 1
= -> for: Probability = 0.00, Count = 3
= -> temp: Probability = 0.00, Count = 1
= -> 0: Probability = 0.01, Count = 6
= -> width: Probability = 0.00, Count = 3
= -> pixels_per_image: Probability = 0.00, Count = 1
= -> out: Probability = 0.00, Count = 1
= -> IJ: Probability = 0.00, Count = 2
= -> End: Probability = 0.00, Count = 1
= -> /: Probability = 0.00, Count = 2
= -> psi: Probability = 0.00, Count = 1
= -> pb: Probability = 0.00, Count = 1
= -> outputlength: Probability = 0.00, Count = 2
= -> batch: Probability = 0.00, Count = 1
= -> out_index: Probability = 0.00, Count = 1
= -> bIndx: Probability = 0.00, Count = 1
= -> long: Probability = 0.00, Count = 3
= -> grad_x: Probability = 0.00, Count = 1
= -> cols: Probability = 0.00, Count = 2
= -> depth: Probability = 0.00, Count = 1
= -> size2d: Probability = 0.00, Count = 1
= -> z: Probability = 0.00, Count = 3
= -> image: Probability = 0.00, Count = 1
= -> alpha: Probability = 0.00, Count = 1
= -> f: Probability = 0.00, Count = 1
= -> float: Probability = 0.00, Count = 3
= -> d_indptr: Probability = 0.00, Count = 1
= -> pixel: Probability = 0.00, Count = 1
= -> batchSize: Probability = 0.00, Count = 2
= -> priorNum: Probability = 0.00, Count = 1
= -> uLength: Probability = 0.00, Count = 2
= -> spatial: Probability = 0.00, Count = 1
= -> dpsi: Probability = 0.00, Count = 2
= -> tc: Probability = 0.00, Count = 1
= -> uSum: Probability = 0.00, Count = 1
= -> index: Probability = 0.00, Count = 1
= -> Delta: Probability = 0.00, Count = 2
= -> 00304f: Probability = 0.00, Count = 1
= -> 100000: Probability = 0.00, Count = 1
= -> channel: Probability = 0.00, Count = 1
= -> step: Probability = 0.00, Count = 1
0 -> .: Probability = 0.12, Count = 46
0 -> <: Probability = 0.02, Count = 8
0 -> *: Probability = 0.04, Count = 16
0 -> idx: Probability = 0.00, Count = 1
0 -> x: Probability = 0.11, Count = 43
0 -> y: Probability = 0.03, Count = 10
0 -> int: Probability = 0.03, Count = 13
0 -> blockIdx: Probability = 0.02, Count = 9
0 -> i: Probability = 0.02, Count = 7
0 -> ]: Probability = 0.03, Count = 13
0 -> {: Probability = 0.03, Count = 10
0 -> b: Probability = 0.01, Count = 2
0 -> +: Probability = 0.03, Count = 13
0 -> =: Probability = 0.07, Count = 26
0 -> (: Probability = 0.04, Count = 14
0 -> threadIdx: Probability = 0.03, Count = 12
0 -> ;: Probability = 0.07, Count = 28
0 -> c: Probability = 0.01, Count = 2
0 -> ,: Probability = 0.01, Count = 2
0 -> z: Probability = 0.00, Count = 1
0 -> }: Probability = 0.00, Count = 1
0 -> float: Probability = 0.01, Count = 2
0 -> if: Probability = 0.01, Count = 5
0 -> tx: Probability = 0.00, Count = 1
0 -> 0: Probability = 0.02, Count = 7
0 -> -: Probability = 0.01, Count = 3
0 -> 1: Probability = 0.01, Count = 2
0 -> blockDim: Probability = 0.03, Count = 11
0 -> aR1: Probability = 0.00, Count = 1
0 -> ): Probability = 0.03, Count = 13
0 -> for: Probability = 0.02, Count = 7
0 -> L_x: Probability = 0.00, Count = 1
0 -> r_sum: Probability = 0.00, Count = 1
0 -> [: Probability = 0.01, Count = 5
0 -> mat: Probability = 0.00, Count = 1
0 -> cluster: Probability = 0.00, Count = 1
0 -> jsx: Probability = 0.00, Count = 1
0 -> unsigned: Probability = 0.01, Count = 2
0 -> &: Probability = 0.01, Count = 4
0 -> return: Probability = 0.01, Count = 3
0 -> images: Probability = 0.01, Count = 2
0 -> :: Probability = 0.00, Count = 1
0 -> row: Probability = 0.01, Count = 3
0 -> j: Probability = 0.01, Count = 3
0 -> m: Probability = 0.01, Count = 2
0 -> k: Probability = 0.00, Count = 1
0 -> c1: Probability = 0.00, Count = 1
0 -> width: Probability = 0.00, Count = 1
0 -> mean: Probability = 0.00, Count = 1
0 -> size: Probability = 0.00, Count = 1
0 -> right_columns: Probability = 0.00, Count = 1
0 -> occNo: Probability = 0.00, Count = 1
0 -> gridDim: Probability = 0.00, Count = 1
0 -> long: Probability = 0.01, Count = 2
0 -> grad_x: Probability = 0.00, Count = 1
0 -> d_indptr: Probability = 0.00, Count = 1
0 -> numPerbatch: Probability = 0.00, Count = 1
0 -> element_c: Probability = 0.00, Count = 1
0 -> sampleIndex: Probability = 0.00, Count = 1
0 -> const: Probability = 0.00, Count = 1
0 -> bit0: Probability = 0.00, Count = 1
* -> *: Probability = 0.45, Count = 349
* -> ): Probability = 0.02, Count = 17
* -> =: Probability = 0.03, Count = 27
* -> {: Probability = 0.01, Count = 11
* -> <: Probability = 0.01, Count = 8
* -> (: Probability = 0.01, Count = 11
* -> a: Probability = 0.00, Count = 3
* -> c: Probability = 0.00, Count = 3
* -> x: Probability = 0.02, Count = 14
* -> +: Probability = 0.03, Count = 20
* -> y: Probability = 0.01, Count = 9
* -> .: Probability = 0.02, Count = 19
* -> double: Probability = 0.01, Count = 8
* -> result: Probability = 0.00, Count = 1
* -> val2: Probability = 0.00, Count = 1
* -> int: Probability = 0.04, Count = 31
* -> ,: Probability = 0.03, Count = 22
* -> [: Probability = 0.01, Count = 8
* -> ]: Probability = 0.01, Count = 8
* -> addKernel: Probability = 0.00, Count = 1
* -> z: Probability = 0.01, Count = 5
* -> >: Probability = 0.00, Count = 3
* -> }: Probability = 0.01, Count = 5
* -> N: Probability = 0.00, Count = 3
* -> X: Probability = 0.00, Count = 2
* -> blockIdx: Probability = 0.01, Count = 6
* -> float: Probability = 0.03, Count = 22
* -> threadIdx: Probability = 0.00, Count = 3
* -> db: Probability = 0.00, Count = 1
* -> |: Probability = 0.00, Count = 1
* -> ;: Probability = 0.02, Count = 14
* -> data_size: Probability = 0.00, Count = 1
* -> i: Probability = 0.01, Count = 11
* -> return: Probability = 0.00, Count = 2
* -> d_output: Probability = 0.00, Count = 1
* -> -: Probability = 0.00, Count = 1
* -> devMat: Probability = 0.00, Count = 2
* -> circularity: Probability = 0.00, Count = 1
* -> 3: Probability = 0.01, Count = 5
* -> areaRes: Probability = 0.00, Count = 1
* -> 2: Probability = 0.00, Count = 1
* -> Xsize: Probability = 0.00, Count = 1
* -> size: Probability = 0.00, Count = 1
* -> key: Probability = 0.00, Count = 1
* -> b: Probability = 0.00, Count = 3
* -> j: Probability = 0.01, Count = 4
* -> cos: Probability = 0.00, Count = 1
* -> col: Probability = 0.00, Count = 1
* -> input: Probability = 0.00, Count = 1
* -> k: Probability = 0.01, Count = 4
* -> d_label_sub: Probability = 0.00, Count = 1
* -> d_ind: Probability = 0.00, Count = 1
* -> d_ind_sub: Probability = 0.00, Count = 1
* -> 0: Probability = 0.01, Count = 4
* -> const: Probability = 0.01, Count = 4
* -> s: Probability = 0.00, Count = 1
* -> row: Probability = 0.00, Count = 3
* -> A: Probability = 0.00, Count = 1
* -> B: Probability = 0.00, Count = 2
* -> C: Probability = 0.00, Count = 1
* -> idy: Probability = 0.00, Count = 1
* -> r: Probability = 0.00, Count = 2
* -> size_block: Probability = 0.00, Count = 1
* -> LW: Probability = 0.00, Count = 1
* -> colorImage: Probability = 0.00, Count = 3
* -> x0: Probability = 0.00, Count = 1
* -> x1: Probability = 0.00, Count = 1
* -> f: Probability = 0.00, Count = 1
* -> shared_dimensions: Probability = 0.00, Count = 1
* -> right_columns: Probability = 0.00, Count = 1
* -> U: Probability = 0.00, Count = 1
* -> RES: Probability = 0.00, Count = 1
* -> output: Probability = 0.00, Count = 1
* -> mask: Probability = 0.00, Count = 1
* -> __shared__: Probability = 0.00, Count = 2
* -> psi: Probability = 0.00, Count = 1
* -> frontJump: Probability = 0.00, Count = 1
* -> h: Probability = 0.00, Count = 1
* -> rowsA: Probability = 0.00, Count = 2
* -> blockDim: Probability = 0.01, Count = 6
* -> depth: Probability = 0.00, Count = 1
* -> grad_x: Probability = 0.00, Count = 1
* -> unsigned: Probability = 0.00, Count = 2
* -> grayimg: Probability = 0.00, Count = 1
* -> 307: Probability = 0.00, Count = 1
* -> char: Probability = 0.00, Count = 2
* -> 604: Probability = 0.00, Count = 1
* -> d_out_grad: Probability = 0.00, Count = 1
* -> d_indptr: Probability = 0.00, Count = 1
* -> batch: Probability = 0.00, Count = 1
* -> image_size: Probability = 0.00, Count = 1
* -> devideNum: Probability = 0.00, Count = 1
* -> for: Probability = 0.00, Count = 1
* -> sr: Probability = 0.00, Count = 2
* -> sampleIndex: Probability = 0.00, Count = 1
* -> n: Probability = 0.00, Count = 3
* -> f2: Probability = 0.00, Count = 1
* -> q: Probability = 0.00, Count = 1
* -> if: Probability = 0.00, Count = 1
* -> dcopy: Probability = 0.00, Count = 1
* -> si: Probability = 0.00, Count = 1
* -> stride: Probability = 0.00, Count = 2
* -> 055846456f: Probability = 0.00, Count = 1
* -> bit0: Probability = 0.00, Count = 1
* -> Match: Probability = 0.00, Count = 1
* -> q_points: Probability = 0.00, Count = 1
* -> index: Probability = 0.01, Count = 5
* -> pad: Probability = 0.00, Count = 1
* -> gpu_img_in_v: Probability = 0.00, Count = 1
* -> tid: Probability = 0.00, Count = 1
* -> w1: Probability = 0.00, Count = 1
* -> step: Probability = 0.00, Count = 1
* -> width: Probability = 0.00, Count = 1
* -> height: Probability = 0.00, Count = 1
* -> channel: Probability = 0.00, Count = 3
* -> filters_diff: Probability = 0.00, Count = 1
* -> base: Probability = 0.00, Count = 1
* -> fbase: Probability = 0.00, Count = 1
old_arr -> [: Probability = 0.50, Count = 1
old_arr -> old_arr: Probability = 0.50, Count = 1
new_arr -> blockDim: Probability = 0.25, Count = 1
new_arr -> tid: Probability = 0.25, Count = 1
new_arr -> x: Probability = 0.25, Count = 1
new_arr -> new_arr: Probability = 0.25, Count = 1
double -> double: Probability = 0.57, Count = 49
double -> n: Probability = 0.01, Count = 1
double -> ,: Probability = 0.08, Count = 7
double -> (: Probability = 0.02, Count = 2
double -> mat: Probability = 0.02, Count = 2
double -> const: Probability = 0.06, Count = 5
double -> vec: Probability = 0.01, Count = 1
double -> ): Probability = 0.01, Count = 1
double -> ]: Probability = 0.01, Count = 1
double -> perimeterRes: Probability = 0.01, Count = 1
double -> m: Probability = 0.02, Count = 2
double -> *: Probability = 0.06, Count = 5
double -> x: Probability = 0.01, Count = 1
double -> {: Probability = 0.01, Count = 1
double -> float: Probability = 0.02, Count = 2
double -> i: Probability = 0.01, Count = 1
double -> pixel: Probability = 0.01, Count = 1
double -> [: Probability = 0.01, Count = 1
double -> extern: Probability = 0.01, Count = 1
double -> 2: Probability = 0.01, Count = 1
tid -> .: Probability = 0.09, Count = 7
tid -> *: Probability = 0.07, Count = 6
tid -> [: Probability = 0.02, Count = 2
tid -> ;: Probability = 0.06, Count = 5
tid -> (: Probability = 0.02, Count = 2
tid -> =: Probability = 0.06, Count = 5
tid -> threadIdx: Probability = 0.06, Count = 5
tid -> blockDim: Probability = 0.06, Count = 5
tid -> blockIdx: Probability = 0.04, Count = 3
tid -> x: Probability = 0.05, Count = 4
tid -> tid: Probability = 0.15, Count = 12
tid -> >: Probability = 0.04, Count = 3
tid -> int: Probability = 0.02, Count = 2
tid -> for: Probability = 0.01, Count = 1
tid -> const: Probability = 0.02, Count = 2
tid -> ,: Probability = 0.04, Count = 3
tid -> {: Probability = 0.02, Count = 2
tid -> float: Probability = 0.01, Count = 1
tid -> +: Probability = 0.04, Count = 3
tid -> ]: Probability = 0.02, Count = 2
tid -> ): Probability = 0.01, Count = 1
tid -> while: Probability = 0.01, Count = 1
tid -> dims: Probability = 0.01, Count = 1
tid -> }: Probability = 0.02, Count = 2
tid -> 4: Probability = 0.01, Count = 1
get_ev -> get_ev: Probability = 1.00, Count = 1
size -> int: Probability = 0.09, Count = 7
size -> idx: Probability = 0.03, Count = 2
size -> output: Probability = 0.01, Count = 1
size -> ;: Probability = 0.06, Count = 5
size -> x: Probability = 0.06, Count = 5
size -> size: Probability = 0.10, Count = 8
size -> =: Probability = 0.03, Count = 2
size -> ): Probability = 0.04, Count = 3
size -> a: Probability = 0.03, Count = 2
size -> .: Probability = 0.04, Count = 3
size -> ,: Probability = 0.05, Count = 4
size -> while: Probability = 0.01, Count = 1
size -> N: Probability = 0.01, Count = 1
size -> [: Probability = 0.04, Count = 3
size -> tact: Probability = 0.01, Count = 1
size -> vector: Probability = 0.01, Count = 1
size -> transposed: Probability = 0.01, Count = 1
size -> const: Probability = 0.01, Count = 1
size -> ]: Probability = 0.03, Count = 2
size -> threadIdx: Probability = 0.05, Count = 4
size -> O: Probability = 0.01, Count = 1
size -> blockDim: Probability = 0.03, Count = 2
size -> long: Probability = 0.01, Count = 1
size -> return: Probability = 0.01, Count = 1
size -> (: Probability = 0.03, Count = 2
size -> A: Probability = 0.01, Count = 1
size -> B: Probability = 0.01, Count = 1
size -> {: Probability = 0.03, Count = 2
size -> j: Probability = 0.01, Count = 1
size -> start: Probability = 0.01, Count = 1
size -> tx: Probability = 0.01, Count = 1
size -> >: Probability = 0.01, Count = 1
size -> *: Probability = 0.01, Count = 1
size -> for: Probability = 0.01, Count = 1
size -> <: Probability = 0.01, Count = 1
size -> weights: Probability = 0.01, Count = 1
size -> }: Probability = 0.01, Count = 1
size -> blockIdx: Probability = 0.01, Count = 1
arrayCount -> x: Probability = 0.50, Count = 2
arrayCount -> arrayCount: Probability = 0.25, Count = 1
arrayCount -> idx: Probability = 0.25, Count = 1
square -> square: Probability = 1.00, Count = 1
array -> array: Probability = 0.45, Count = 5
array -> (: Probability = 0.09, Count = 1
array -> .: Probability = 0.09, Count = 1
array -> ;: Probability = 0.18, Count = 2
array -> =: Probability = 0.09, Count = 1
array -> x: Probability = 0.09, Count = 1
i -> y: Probability = 0.01, Count = 6
i -> ]: Probability = 0.04, Count = 19
i -> i: Probability = 0.07, Count = 36
i -> ): Probability = 0.05, Count = 24
i -> <: Probability = 0.02, Count = 9
i -> blockIdx: Probability = 0.03, Count = 17
i -> blockDim: Probability = 0.02, Count = 12
i -> x: Probability = 0.07, Count = 34
i -> arrayA: Probability = 0.00, Count = 1
i -> arrayB: Probability = 0.00, Count = 1
i -> (: Probability = 0.04, Count = 19
i -> .: Probability = 0.06, Count = 31
i -> {: Probability = 0.02, Count = 8
i -> *: Probability = 0.04, Count = 22
i -> [: Probability = 0.03, Count = 14
i -> +: Probability = 0.04, Count = 20
i -> threadIdx: Probability = 0.02, Count = 12
i -> ;: Probability = 0.06, Count = 31
i -> a: Probability = 0.00, Count = 1
i -> =: Probability = 0.06, Count = 30
i -> gid: Probability = 0.00, Count = 1
i -> buf: Probability = 0.00, Count = 1
i -> index: Probability = 0.01, Count = 5
i -> C: Probability = 0.00, Count = 1
i -> int: Probability = 0.06, Count = 29
i -> INCY: Probability = 0.00, Count = 1
i -> n: Probability = 0.00, Count = 2
i -> lr: Probability = 0.00, Count = 1
i -> dev_parameter: Probability = 0.00, Count = 1
i -> lid: Probability = 0.00, Count = 2
i -> unsigned: Probability = 0.00, Count = 1
i -> N: Probability = 0.01, Count = 4
i -> ,: Probability = 0.01, Count = 7
i -> INCX: Probability = 0.00, Count = 1
i -> if: Probability = 0.01, Count = 3
i -> column: Probability = 0.00, Count = 1
i -> gridDim: Probability = 0.01, Count = 3
i -> aRS: Probability = 0.00, Count = 1
i -> }: Probability = 0.01, Count = 4
i -> j: Probability = 0.01, Count = 3
i -> block_id: Probability = 0.00, Count = 2
i -> 1: Probability = 0.00, Count = 1
i -> -: Probability = 0.01, Count = 3
i -> error: Probability = 0.00, Count = 1
i -> data_size: Probability = 0.00, Count = 2
i -> filter: Probability = 0.00, Count = 1
i -> for: Probability = 0.02, Count = 8
i -> compCount: Probability = 0.00, Count = 2
i -> areaRes: Probability = 0.00, Count = 2
i -> 3: Probability = 0.00, Count = 1
i -> idx: Probability = 0.00, Count = 1
i -> d_ch_flag: Probability = 0.00, Count = 1
i -> k: Probability = 0.01, Count = 4
i -> sin: Probability = 0.00, Count = 1
i -> totalPixels: Probability = 0.00, Count = 2
i -> indptr: Probability = 0.00, Count = 1
i -> 0: Probability = 0.01, Count = 3
i -> m: Probability = 0.00, Count = 1
i -> clamp_max: Probability = 0.00, Count = 1
i -> nx: Probability = 0.00, Count = 2
i -> temp: Probability = 0.00, Count = 1
i -> pos: Probability = 0.00, Count = 1
i -> neighbors: Probability = 0.00, Count = 1
i -> float: Probability = 0.00, Count = 1
i -> return: Probability = 0.00, Count = 2
i -> size: Probability = 0.00, Count = 2
i -> /: Probability = 0.00, Count = 1
i -> mean: Probability = 0.00, Count = 1
i -> >: Probability = 0.01, Count = 4
i -> out: Probability = 0.00, Count = 1
i -> indexInBatch: Probability = 0.00, Count = 1
i -> stride: Probability = 0.00, Count = 1
i -> id: Probability = 0.00, Count = 1
i -> spatial: Probability = 0.00, Count = 1
i -> batchSize: Probability = 0.00, Count = 1
i -> ptr_stc_1: Probability = 0.00, Count = 1
i -> bx: Probability = 0.00, Count = 1
i -> width_N: Probability = 0.00, Count = 1
i -> group_offset: Probability = 0.00, Count = 1
i -> b: Probability = 0.00, Count = 1
i -> f2: Probability = 0.00, Count = 1
i -> f1: Probability = 0.00, Count = 1
i -> max_size: Probability = 0.00, Count = 1
i -> in: Probability = 0.00, Count = 1
i -> anchor: Probability = 0.00, Count = 1
i -> dims: Probability = 0.00, Count = 1
add -> add: Probability = 0.20, Count = 1
add -> addKernel: Probability = 0.20, Count = 1
add -> {: Probability = 0.20, Count = 1
add -> ,: Probability = 0.40, Count = 2
n -> [: Probability = 0.07, Count = 6
n -> if: Probability = 0.02, Count = 2
n -> n: Probability = 0.22, Count = 20
n -> =: Probability = 0.04, Count = 4
n -> maxThreads: Probability = 0.01, Count = 1
n -> {: Probability = 0.09, Count = 8
n -> i: Probability = 0.02, Count = 2
n -> x: Probability = 0.05, Count = 5
n -> .: Probability = 0.03, Count = 3
n -> blockDim: Probability = 0.02, Count = 2
n -> int: Probability = 0.04, Count = 4
n -> ;: Probability = 0.05, Count = 5
n -> (: Probability = 0.05, Count = 5
n -> mat: Probability = 0.01, Count = 1
n -> threadIdx: Probability = 0.02, Count = 2
n -> +: Probability = 0.02, Count = 2
n -> blockIdx: Probability = 0.02, Count = 2
n -> 3: Probability = 0.01, Count = 1
n -> index: Probability = 0.01, Count = 1
n -> y: Probability = 0.01, Count = 1
n -> diff: Probability = 0.01, Count = 1
n -> *: Probability = 0.03, Count = 3
n -> p: Probability = 0.01, Count = 1
n -> <: Probability = 0.02, Count = 2
n -> c: Probability = 0.01, Count = 1
n -> stride: Probability = 0.01, Count = 1
n -> ]: Probability = 0.01, Count = 1
n -> -: Probability = 0.01, Count = 1
n -> stepSize: Probability = 0.01, Count = 1
n -> frontJump: Probability = 0.01, Count = 1
n -> m: Probability = 0.01, Count = 1
n -> top_data: Probability = 0.01, Count = 1
x -> x: Probability = 0.16, Count = 14
x -> [: Probability = 0.05, Count = 4
x -> ,: Probability = 0.05, Count = 4
x -> (: Probability = 0.06, Count = 5
x -> 100: Probability = 0.01, Count = 1
x -> size: Probability = 0.01, Count = 1
x -> c: Probability = 0.01, Count = 1
x -> threadIdx: Probability = 0.02, Count = 2
x -> ;: Probability = 0.03, Count = 3
x -> index: Probability = 0.01, Count = 1
x -> =: Probability = 0.06, Count = 5
x -> myId: Probability = 0.02, Count = 2
x -> ): Probability = 0.03, Count = 3
x -> if: Probability = 0.03, Count = 3
x -> blockDim: Probability = 0.03, Count = 3
x -> .: Probability = 0.06, Count = 5
x -> >: Probability = 0.02, Count = 2
x -> height: Probability = 0.01, Count = 1
x -> blockIdx: Probability = 0.02, Count = 2
x -> int: Probability = 0.02, Count = 2
x -> |: Probability = 0.01, Count = 1
x -> +: Probability = 0.02, Count = 2
x -> *: Probability = 0.01, Count = 1
x -> char: Probability = 0.01, Count = 1
x -> depth_scale: Probability = 0.01, Count = 1
x -> grid_width: Probability = 0.01, Count = 1
x -> y: Probability = 0.08, Count = 7
x -> z: Probability = 0.01, Count = 1
x -> 1: Probability = 0.01, Count = 1
x -> cols: Probability = 0.01, Count = 1
x -> pixel: Probability = 0.01, Count = 1
x -> unsigned: Probability = 0.02, Count = 2
x -> long: Probability = 0.05, Count = 4
float -> y: Probability = 0.01, Count = 2
float -> ,: Probability = 0.07, Count = 30
float -> float: Probability = 0.54, Count = 215
float -> ]: Probability = 0.00, Count = 1
float -> *: Probability = 0.05, Count = 19
float -> ): Probability = 0.03, Count = 12
float -> }: Probability = 0.00, Count = 1
float -> +: Probability = 0.01, Count = 4
float -> int: Probability = 0.05, Count = 21
float -> .: Probability = 0.03, Count = 10
float -> blockIdx: Probability = 0.01, Count = 5
float -> =: Probability = 0.02, Count = 8
float -> const: Probability = 0.02, Count = 8
float -> k_x: Probability = 0.00, Count = 1
float -> {: Probability = 0.02, Count = 8
float -> maxval: Probability = 0.00, Count = 1
float -> (: Probability = 0.01, Count = 4
float -> 0: Probability = 0.00, Count = 1
float -> width: Probability = 0.01, Count = 2
float -> &: Probability = 0.00, Count = 1
float -> x: Probability = 0.01, Count = 4
float -> n_out: Probability = 0.00, Count = 1
float -> ;: Probability = 0.02, Count = 9
float -> i: Probability = 0.01, Count = 2
float -> unsigned: Probability = 0.01, Count = 2
float -> nnx: Probability = 0.00, Count = 1
float -> sp: Probability = 0.00, Count = 1
float -> buffer: Probability = 0.00, Count = 1
float -> colsA: Probability = 0.00, Count = 1
float -> batch: Probability = 0.00, Count = 1
float -> mean: Probability = 0.00, Count = 1
float -> |: Probability = 0.00, Count = 1
float -> >: Probability = 0.00, Count = 1
float -> dims: Probability = 0.00, Count = 1
float -> eachElement: Probability = 0.00, Count = 1
float -> alpha: Probability = 0.00, Count = 1
float -> [: Probability = 0.00, Count = 1
float -> ty: Probability = 0.00, Count = 1
float -> batch_offset: Probability = 0.00, Count = 1
float -> index: Probability = 0.00, Count = 1
float -> distMat: Probability = 0.00, Count = 1
float -> blockDim: Probability = 0.00, Count = 1
float -> out: Probability = 0.00, Count = 1
float -> void: Probability = 0.00, Count = 1
float -> gridDim: Probability = 0.00, Count = 1
float -> -: Probability = 0.01, Count = 2
float -> for: Probability = 0.00, Count = 1
float -> W: Probability = 0.00, Count = 1
float -> size_t: Probability = 0.00, Count = 1
float -> outputIndex: Probability = 0.00, Count = 1
float -> ksize: Probability = 0.00, Count = 1
float -> wsize: Probability = 0.00, Count = 1
y -> ): Probability = 0.02, Count = 1
y -> [: Probability = 0.05, Count = 3
y -> threadIdx: Probability = 0.02, Count = 1
y -> n: Probability = 0.02, Count = 1
y -> ,: Probability = 0.03, Count = 2
y -> i: Probability = 0.02, Count = 1
y -> ;: Probability = 0.05, Count = 3
y -> y: Probability = 0.12, Count = 7
y -> int: Probability = 0.03, Count = 2
y -> =: Probability = 0.05, Count = 3
y -> *: Probability = 0.07, Count = 4
y -> .: Probability = 0.08, Count = 5
y -> +: Probability = 0.03, Count = 2
y -> width: Probability = 0.02, Count = 1
y -> >: Probability = 0.05, Count = 3
y -> blockDim: Probability = 0.03, Count = 2
y -> float: Probability = 0.02, Count = 1
y -> idx_y: Probability = 0.02, Count = 1
y -> blockIdx: Probability = 0.02, Count = 1
y -> z: Probability = 0.08, Count = 5
y -> |: Probability = 0.02, Count = 1
y -> 0: Probability = 0.02, Count = 1
y -> return: Probability = 0.02, Count = 1
y -> R: Probability = 0.02, Count = 1
y -> height: Probability = 0.02, Count = 1
y -> B: Probability = 0.02, Count = 1
y -> G: Probability = 0.02, Count = 1
y -> x: Probability = 0.02, Count = 1
y -> &: Probability = 0.02, Count = 1
y -> long: Probability = 0.02, Count = 1
} -> [: Probability = 0.06, Count = 9
} -> ;: Probability = 0.08, Count = 11
} -> if: Probability = 0.01, Count = 1
} -> ): Probability = 0.01, Count = 2
} -> blockDim: Probability = 0.03, Count = 4
} -> =: Probability = 0.03, Count = 4
} -> i: Probability = 0.05, Count = 8
} -> +: Probability = 0.10, Count = 15
} -> ]: Probability = 0.08, Count = 11
} -> u: Probability = 0.01, Count = 1
} -> *: Probability = 0.05, Count = 8
} -> idx: Probability = 0.01, Count = 1
} -> .: Probability = 0.03, Count = 5
} -> x: Probability = 0.03, Count = 5
} -> b: Probability = 0.01, Count = 2
} -> tid: Probability = 0.01, Count = 1
} -> (: Probability = 0.04, Count = 6
} -> INCX: Probability = 0.01, Count = 1
} -> cols: Probability = 0.01, Count = 1
} -> col: Probability = 0.02, Count = 3
} -> }: Probability = 0.08, Count = 12
} -> id: Probability = 0.01, Count = 2
} -> int: Probability = 0.01, Count = 1
} -> g_out: Probability = 0.01, Count = 1
} -> {: Probability = 0.01, Count = 2
} -> scale: Probability = 0.01, Count = 1
} -> j: Probability = 0.01, Count = 2
} -> 1: Probability = 0.02, Count = 3
} -> score: Probability = 0.01, Count = 1
} -> y: Probability = 0.02, Count = 3
} -> ?: Probability = 0.01, Count = 1
} -> dstData: Probability = 0.01, Count = 1
} -> return: Probability = 0.01, Count = 1
} -> stride: Probability = 0.01, Count = 1
} -> d_in: Probability = 0.01, Count = 1
} -> p: Probability = 0.01, Count = 1
} -> N: Probability = 0.01, Count = 1
} -> pixelNum: Probability = 0.01, Count = 1
} -> images: Probability = 0.01, Count = 1
} -> maxhd: Probability = 0.01, Count = 1
} -> :: Probability = 0.01, Count = 1
} -> <: Probability = 0.01, Count = 1
} -> 0: Probability = 0.01, Count = 2
} -> double: Probability = 0.01, Count = 1
} -> dev_c: Probability = 0.01, Count = 1
} -> size: Probability = 0.01, Count = 1
} -> f: Probability = 0.01, Count = 1
} -> float: Probability = 0.01, Count = 1
scale_host -> scale_dev: Probability = 1.00, Count = 1
N -> int: Probability = 0.05, Count = 4
N -> ): Probability = 0.04, Count = 3
N -> .: Probability = 0.12, Count = 9
N -> val: Probability = 0.01, Count = 1
N -> N: Probability = 0.24, Count = 19
N -> *: Probability = 0.05, Count = 4
N -> x: Probability = 0.04, Count = 3
N -> {: Probability = 0.04, Count = 3
N -> ,: Probability = 0.03, Count = 2
N -> n: Probability = 0.03, Count = 2
N -> threadIdx: Probability = 0.05, Count = 4
N -> lid: Probability = 0.01, Count = 1
N -> gridDim: Probability = 0.01, Count = 1
N -> dia: Probability = 0.01, Count = 1
N -> }: Probability = 0.01, Count = 1
N -> [: Probability = 0.03, Count = 2
N -> ]: Probability = 0.03, Count = 2
N -> blockIdx: Probability = 0.01, Count = 1
N -> I: Probability = 0.01, Count = 1
N -> <: Probability = 0.03, Count = 2
N -> if: Probability = 0.01, Count = 1
N -> ;: Probability = 0.01, Count = 1
N -> col: Probability = 0.01, Count = 1
N -> sum: Probability = 0.01, Count = 1
N -> y: Probability = 0.01, Count = 1
N -> i: Probability = 0.01, Count = 1
N -> 0: Probability = 0.01, Count = 1
N -> +: Probability = 0.01, Count = 1
N -> Nd: Probability = 0.01, Count = 1
N -> C: Probability = 0.01, Count = 1
N -> (: Probability = 0.03, Count = 2
scale -> scale: Probability = 0.18, Count = 2
scale -> <: Probability = 0.09, Count = 1
scale -> ]: Probability = 0.09, Count = 1
scale -> int: Probability = 0.27, Count = 3
scale -> x: Probability = 0.09, Count = 1
scale -> (: Probability = 0.09, Count = 1
scale -> .: Probability = 0.09, Count = 1
scale -> size_t: Probability = 0.09, Count = 1
return -> {: Probability = 0.25, Count = 1
return -> 1: Probability = 0.25, Count = 1
return -> =: Probability = 0.25, Count = 1
return -> ): Probability = 0.25, Count = 1
allAddInplace_cpu -> allAddInplaceKernel: Probability = 1.00, Count = 1
arr -> arr: Probability = 1.00, Count = 1
alpha -> alpha: Probability = 0.40, Count = 4
alpha -> *: Probability = 0.10, Count = 1
alpha -> y: Probability = 0.10, Count = 1
alpha -> ): Probability = 0.10, Count = 1
alpha -> float: Probability = 0.10, Count = 1
alpha -> ,: Probability = 0.10, Count = 1
alpha -> int: Probability = 0.10, Count = 1
index -> =: Probability = 0.05, Count = 3
index -> *: Probability = 0.09, Count = 6
index -> blockDim: Probability = 0.11, Count = 7
index -> blockIdx: Probability = 0.05, Count = 3
index -> {: Probability = 0.03, Count = 2
index -> threadIdx: Probability = 0.03, Count = 2
index -> 1: Probability = 0.02, Count = 1
index -> x: Probability = 0.12, Count = 8
index -> int: Probability = 0.05, Count = 3
index -> j: Probability = 0.02, Count = 1
index -> alphas: Probability = 0.02, Count = 1
index -> i: Probability = 0.02, Count = 1
index -> .: Probability = 0.02, Count = 1
index -> ;: Probability = 0.06, Count = 4
index -> double: Probability = 0.02, Count = 1
index -> if: Probability = 0.03, Count = 2
index -> +: Probability = 0.02, Count = 1
index -> for: Probability = 0.02, Count = 1
index -> ,: Probability = 0.02, Count = 1
index -> return: Probability = 0.02, Count = 1
index -> img_size: Probability = 0.02, Count = 1
index -> index: Probability = 0.06, Count = 4
index -> (: Probability = 0.03, Count = 2
index -> /: Probability = 0.02, Count = 1
index -> >: Probability = 0.02, Count = 1
index -> ): Probability = 0.02, Count = 1
index -> width: Probability = 0.02, Count = 1
index -> step: Probability = 0.02, Count = 1
index -> n: Probability = 0.02, Count = 1
index -> wsize: Probability = 0.02, Count = 1
memsetCpuInt -> memsetCudaInt: Probability = 1.00, Count = 1
val -> val: Probability = 0.20, Count = 1
val -> data: Probability = 0.20, Count = 1
val -> N: Probability = 0.20, Count = 1
val -> index: Probability = 0.20, Count = 1
val -> if: Probability = 0.20, Count = 1
initialArray0_cpu -> initialArray0: Probability = 1.00, Count = 1
f3 -> f3: Probability = 0.50, Count = 1
f3 -> ;: Probability = 0.50, Count = 1
tasks -> tasks: Probability = 0.50, Count = 1
tasks -> blockDim: Probability = 0.50, Count = 1
add_vector_cpu -> VectorAdd: Probability = 1.00, Count = 1
a -> arrayA: Probability = 0.02, Count = 1
a -> {: Probability = 0.02, Count = 1
a -> ]: Probability = 0.02, Count = 1
a -> a: Probability = 0.20, Count = 10
a -> c: Probability = 0.06, Count = 3
a -> idx: Probability = 0.04, Count = 2
a -> =: Probability = 0.04, Count = 2
a -> ): Probability = 0.04, Count = 2
a -> }: Probability = 0.04, Count = 2
a -> .: Probability = 0.02, Count = 1
a -> *: Probability = 0.14, Count = 7
a -> y: Probability = 0.04, Count = 2
a -> ;: Probability = 0.06, Count = 3
a -> ,: Probability = 0.02, Count = 1
a -> n: Probability = 0.04, Count = 2
a -> +: Probability = 0.06, Count = 3
a -> a_in: Probability = 0.04, Count = 2
a -> mxm_1d: Probability = 0.02, Count = 1
a -> x: Probability = 0.02, Count = 1
a -> blockIdx: Probability = 0.02, Count = 1
a -> m: Probability = 0.02, Count = 1
a -> 0: Probability = 0.02, Count = 1
a -> return: Probability = 0.02, Count = 1
b -> arrayB: Probability = 0.02, Count = 1
b -> t_id: Probability = 0.02, Count = 1
b -> b: Probability = 0.19, Count = 9
b -> a: Probability = 0.04, Count = 2
b -> =: Probability = 0.04, Count = 2
b -> +: Probability = 0.08, Count = 4
b -> .: Probability = 0.04, Count = 2
b -> x: Probability = 0.08, Count = 4
b -> blockDim: Probability = 0.04, Count = 2
b -> *: Probability = 0.10, Count = 5
b -> [: Probability = 0.06, Count = 3
b -> row: Probability = 0.02, Count = 1
b -> g: Probability = 0.02, Count = 1
b -> b_in: Probability = 0.02, Count = 1
b -> m: Probability = 0.02, Count = 1
b -> for: Probability = 0.02, Count = 1
b -> out_index: Probability = 0.02, Count = 1
b -> ;: Probability = 0.02, Count = 1
b -> float: Probability = 0.02, Count = 1
b -> >: Probability = 0.02, Count = 1
b -> (: Probability = 0.02, Count = 1
b -> if: Probability = 0.02, Count = 1
b -> ): Probability = 0.02, Count = 1
b -> gridDim: Probability = 0.02, Count = 1
c -> float: Probability = 0.02, Count = 1
c -> ,: Probability = 0.03, Count = 2
c -> c: Probability = 0.14, Count = 9
c -> ]: Probability = 0.02, Count = 1
c -> ): Probability = 0.06, Count = 4
c -> (: Probability = 0.03, Count = 2
c -> b: Probability = 0.03, Count = 2
c -> blockDim: Probability = 0.02, Count = 1
c -> threadIdx: Probability = 0.03, Count = 2
c -> *: Probability = 0.08, Count = 5
c -> if: Probability = 0.03, Count = 2
c -> <: Probability = 0.03, Count = 2
c -> .: Probability = 0.05, Count = 3
c -> [: Probability = 0.05, Count = 3
c -> y: Probability = 0.02, Count = 1
c -> j: Probability = 0.05, Count = 3
c -> int: Probability = 0.06, Count = 4
c -> +: Probability = 0.03, Count = 2
c -> result: Probability = 0.02, Count = 1
c -> width: Probability = 0.02, Count = 1
c -> ;: Probability = 0.05, Count = 3
c -> c_in: Probability = 0.02, Count = 1
c -> m: Probability = 0.02, Count = 1
c -> {: Probability = 0.02, Count = 1
c -> h: Probability = 0.03, Count = 2
c -> out_index: Probability = 0.02, Count = 1
c -> w: Probability = 0.02, Count = 1
c -> real: Probability = 0.02, Count = 1
c -> =: Probability = 0.02, Count = 1
c -> const: Probability = 0.02, Count = 1
if -> return: Probability = 0.07, Count = 2
if -> }: Probability = 0.07, Count = 2
if -> .: Probability = 0.03, Count = 1
if -> (: Probability = 0.07, Count = 2
if -> ;: Probability = 0.10, Count = 3
if -> *: Probability = 0.07, Count = 2
if -> 1: Probability = 0.03, Count = 1
if -> ]: Probability = 0.03, Count = 1
if -> tid: Probability = 0.03, Count = 1
if -> int: Probability = 0.07, Count = 2
if -> ): Probability = 0.07, Count = 2
if -> if: Probability = 0.07, Count = 2
if -> col: Probability = 0.03, Count = 1
if -> maxhd: Probability = 0.03, Count = 1
if -> =: Probability = 0.03, Count = 1
if -> N: Probability = 0.03, Count = 1
if -> for: Probability = 0.03, Count = 1
if -> depth: Probability = 0.03, Count = 1
if -> unsigned: Probability = 0.03, Count = 1
if -> u: Probability = 0.03, Count = 1
test_cpu -> test: Probability = 1.00, Count = 1
input -> input: Probability = 0.69, Count = 9
input -> =: Probability = 0.08, Count = 1
input -> *: Probability = 0.08, Count = 1
input -> int: Probability = 0.08, Count = 1
input -> [: Probability = 0.08, Count = 1
dims -> tid: Probability = 0.04, Count = 1
dims -> dims: Probability = 0.15, Count = 4
dims -> int: Probability = 0.08, Count = 2
dims -> ;: Probability = 0.15, Count = 4
dims -> x: Probability = 0.04, Count = 1
dims -> *: Probability = 0.04, Count = 1
dims -> -: Probability = 0.04, Count = 1
dims -> ,: Probability = 0.04, Count = 1
dims -> .: Probability = 0.04, Count = 1
dims -> numPerbatch: Probability = 0.04, Count = 1
dims -> =: Probability = 0.08, Count = 2
dims -> (: Probability = 0.04, Count = 1
dims -> const: Probability = 0.04, Count = 1
dims -> blockDim: Probability = 0.04, Count = 1
dims -> 4: Probability = 0.04, Count = 1
dims -> batchSize: Probability = 0.04, Count = 1
dims -> {: Probability = 0.04, Count = 1
dims -> blockIdx: Probability = 0.04, Count = 1
const -> {: Probability = 0.02, Count = 3
const -> offsets: Probability = 0.01, Count = 1
const -> ncols: Probability = 0.01, Count = 1
const -> int: Probability = 0.09, Count = 14
const -> const: Probability = 0.44, Count = 72
const -> __global__: Probability = 0.01, Count = 1
const -> ): Probability = 0.01, Count = 2
const -> ;: Probability = 0.01, Count = 1
const -> b: Probability = 0.01, Count = 2
const -> =: Probability = 0.02, Count = 3
const -> *: Probability = 0.02, Count = 3
const -> float: Probability = 0.03, Count = 5
const -> ,: Probability = 0.10, Count = 17
const -> /: Probability = 0.01, Count = 1
const -> width: Probability = 0.01, Count = 1
const -> compCount: Probability = 0.01, Count = 1
const -> circ: Probability = 0.01, Count = 1
const -> x: Probability = 0.03, Count = 5
const -> unsigned: Probability = 0.01, Count = 2
const -> double: Probability = 0.02, Count = 4
const -> size_block: Probability = 0.01, Count = 1
const -> [: Probability = 0.02, Count = 3
const -> buf: Probability = 0.01, Count = 1
const -> ns: Probability = 0.01, Count = 1
const -> blockIdx: Probability = 0.01, Count = 1
const -> +: Probability = 0.01, Count = 1
const -> y: Probability = 0.01, Count = 1
const -> 3: Probability = 0.01, Count = 2
const -> .: Probability = 0.02, Count = 3
const -> 1e: Probability = 0.01, Count = 1
const -> }: Probability = 0.01, Count = 1
const -> (: Probability = 0.01, Count = 1
const -> frames: Probability = 0.01, Count = 1
const -> index: Probability = 0.01, Count = 2
const -> blockDim: Probability = 0.01, Count = 1
const -> threadIdx: Probability = 0.01, Count = 1
ncols -> offsets: Probability = 0.10, Count = 1
ncols -> ,: Probability = 0.20, Count = 2
ncols -> =: Probability = 0.10, Count = 1
ncols -> int: Probability = 0.10, Count = 1
ncols -> x: Probability = 0.10, Count = 1
ncols -> tid: Probability = 0.20, Count = 2
ncols -> ): Probability = 0.10, Count = 1
ncols -> .: Probability = 0.10, Count = 1
nrows -> int: Probability = 0.17, Count = 1
nrows -> ,: Probability = 0.17, Count = 1
nrows -> <: Probability = 0.17, Count = 1
nrows -> .: Probability = 0.17, Count = 1
nrows -> {: Probability = 0.17, Count = 1
nrows -> =: Probability = 0.17, Count = 1
offsets -> =: Probability = 0.12, Count = 1
offsets -> ,: Probability = 0.12, Count = 1
offsets -> .: Probability = 0.25, Count = 2
offsets -> tid: Probability = 0.25, Count = 2
offsets -> x: Probability = 0.12, Count = 1
offsets -> ): Probability = 0.12, Count = 1
set_sorting_offset -> set_sorting_offset: Probability = 1.00, Count = 1
dot_cpu -> dotKernel: Probability = 0.50, Count = 1
dot_cpu -> dot_kernel: Probability = 0.50, Count = 1
t_id -> blockIdx: Probability = 0.11, Count = 1
t_id -> threadIdx: Probability = 0.11, Count = 1
t_id -> =: Probability = 0.11, Count = 1
t_id -> ]: Probability = 0.33, Count = 3
t_id -> c: Probability = 0.11, Count = 1
t_id -> ;: Probability = 0.11, Count = 1
t_id -> t_id: Probability = 0.11, Count = 1
matDiagAddInplace_cpu -> matDiagAddInplaceKernel: Probability = 1.00, Count = 1
mat -> mat: Probability = 0.25, Count = 4
mat -> if: Probability = 0.06, Count = 1
mat -> ,: Probability = 0.06, Count = 1
mat -> int: Probability = 0.19, Count = 3
mat -> =: Probability = 0.06, Count = 1
mat -> *: Probability = 0.06, Count = 1
mat -> +: Probability = 0.06, Count = 1
mat -> n: Probability = 0.06, Count = 1
mat -> j: Probability = 0.06, Count = 1
mat -> [: Probability = 0.06, Count = 1
mat -> ]: Probability = 0.06, Count = 1
dim -> threadIdx: Probability = 0.14, Count = 1
dim -> dim: Probability = 0.43, Count = 3
dim -> <: Probability = 0.14, Count = 1
dim -> .: Probability = 0.14, Count = 1
dim -> *: Probability = 0.14, Count = 1
u -> (: Probability = 0.12, Count = 2
u -> u: Probability = 0.25, Count = 4
u -> L: Probability = 0.06, Count = 1
u -> *: Probability = 0.06, Count = 1
u -> cols: Probability = 0.06, Count = 1
u -> ,: Probability = 0.06, Count = 1
u -> int: Probability = 0.06, Count = 1
u -> blockIdx: Probability = 0.06, Count = 1
u -> uLength: Probability = 0.06, Count = 1
u -> ;: Probability = 0.06, Count = 1
u -> >: Probability = 0.06, Count = 1
u -> +: Probability = 0.06, Count = 1
L -> L: Probability = 0.25, Count = 2
L -> u: Probability = 0.12, Count = 1
L -> +: Probability = 0.12, Count = 1
L -> ;: Probability = 0.12, Count = 1
L -> si: Probability = 0.12, Count = 1
L -> float: Probability = 0.12, Count = 1
L -> x: Probability = 0.12, Count = 1
cpuAddCorrAndCorrection -> cudaAddCorrAndCorrection: Probability = 1.00, Count = 1
r -> >: Probability = 0.08, Count = 1
r -> r: Probability = 0.15, Count = 2
r -> int: Probability = 0.15, Count = 2
r -> +: Probability = 0.08, Count = 1
r -> temp: Probability = 0.08, Count = 1
r -> =: Probability = 0.08, Count = 1
r -> x: Probability = 0.08, Count = 1
r -> <: Probability = 0.08, Count = 1
r -> ,: Probability = 0.08, Count = 1
r -> j: Probability = 0.08, Count = 1
r -> {: Probability = 0.08, Count = 1
- -> -: Probability = 0.11, Count = 8
- -> vec_out: Probability = 0.01, Count = 1
- -> [: Probability = 0.04, Count = 3
- -> ): Probability = 0.05, Count = 4
- -> <: Probability = 0.01, Count = 1
- -> {: Probability = 0.03, Count = 2
- -> ;: Probability = 0.05, Count = 4
- -> =: Probability = 0.08, Count = 6
- -> ]: Probability = 0.03, Count = 2
- -> N: Probability = 0.01, Count = 1
- -> output: Probability = 0.01, Count = 1
- -> truth: Probability = 0.01, Count = 1
- -> >: Probability = 0.05, Count = 4
- -> *: Probability = 0.08, Count = 6
- -> 2: Probability = 0.01, Count = 1
- -> p: Probability = 0.03, Count = 2
- -> int: Probability = 0.07, Count = 5
- -> size: Probability = 0.01, Count = 1
- -> indptr: Probability = 0.01, Count = 1
- -> +: Probability = 0.04, Count = 3
- -> x0: Probability = 0.03, Count = 2
- -> (: Probability = 0.04, Count = 3
- -> RES: Probability = 0.01, Count = 1
- -> U: Probability = 0.01, Count = 1
- -> i: Probability = 0.01, Count = 1
- -> NI: Probability = 0.01, Count = 1
- -> src: Probability = 0.01, Count = 1
- -> x: Probability = 0.01, Count = 1
- -> blockIdx: Probability = 0.01, Count = 1
- -> y: Probability = 0.01, Count = 1
- -> const: Probability = 0.01, Count = 1
- -> .: Probability = 0.01, Count = 1
- -> blockDim: Probability = 0.01, Count = 1
- -> 0: Probability = 0.01, Count = 1
INCX -> INCX: Probability = 0.27, Count = 3
INCX -> threadIdx: Probability = 0.09, Count = 1
INCX -> *: Probability = 0.18, Count = 2
INCX -> [: Probability = 0.09, Count = 1
INCX -> OFFX: Probability = 0.09, Count = 1
INCX -> float: Probability = 0.09, Count = 1
INCX -> batch: Probability = 0.09, Count = 1
INCX -> index: Probability = 0.09, Count = 1
X -> X: Probability = 0.24, Count = 4
X -> {: Probability = 0.12, Count = 2
X -> ALPHA: Probability = 0.06, Count = 1
X -> blockDim: Probability = 0.06, Count = 1
X -> .: Probability = 0.06, Count = 1
X -> x: Probability = 0.06, Count = 1
X -> a: Probability = 0.06, Count = 1
X -> [: Probability = 0.06, Count = 1
X -> N: Probability = 0.06, Count = 1
X -> ,: Probability = 0.06, Count = 1
X -> ;: Probability = 0.06, Count = 1
X -> scale: Probability = 0.06, Count = 1
X -> float: Probability = 0.06, Count = 1
fill_cpu -> fill_kernel: Probability = 1.00, Count = 1
ALPHA -> X: Probability = 0.20, Count = 1
ALPHA -> ALPHA: Probability = 0.60, Count = 3
ALPHA -> if: Probability = 0.20, Count = 1
scal_cpu -> scal_kernel: Probability = 1.00, Count = 1
PSIfill_cpu -> PSIfill: Probability = 1.00, Count = 1
conv_length -> conv_length: Probability = 0.50, Count = 1
conv_length -> %: Probability = 0.50, Count = 1
% -> i: Probability = 0.09, Count = 1
% -> *: Probability = 0.18, Count = 2
% -> [: Probability = 0.09, Count = 1
% -> id: Probability = 0.09, Count = 1
% -> .: Probability = 0.09, Count = 1
% -> =: Probability = 0.09, Count = 1
% -> out: Probability = 0.09, Count = 1
% -> indexOutBatch: Probability = 0.09, Count = 1
% -> ;: Probability = 0.09, Count = 1
% -> int: Probability = 0.09, Count = 1
k -> x: Probability = 0.09, Count = 7
k -> a: Probability = 0.04, Count = 3
k -> .: Probability = 0.09, Count = 7
k -> {: Probability = 0.01, Count = 1
k -> *: Probability = 0.05, Count = 4
k -> int: Probability = 0.08, Count = 6
k -> threadIdx: Probability = 0.01, Count = 1
k -> blockDim: Probability = 0.04, Count = 3
k -> k: Probability = 0.06, Count = 5
k -> ;: Probability = 0.09, Count = 7
k -> width: Probability = 0.01, Count = 1
k -> ]: Probability = 0.03, Count = 2
k -> col: Probability = 0.01, Count = 1
k -> row: Probability = 0.01, Count = 1
k -> =: Probability = 0.06, Count = 5
k -> i: Probability = 0.01, Count = 1
k -> size: Probability = 0.01, Count = 1
k -> <: Probability = 0.03, Count = 2
k -> j: Probability = 0.01, Count = 1
k -> B: Probability = 0.01, Count = 1
k -> +: Probability = 0.08, Count = 6
k -> 0: Probability = 0.01, Count = 1
k -> nx: Probability = 0.01, Count = 1
k -> (: Probability = 0.05, Count = 4
k -> size_block: Probability = 0.01, Count = 1
k -> out_index: Probability = 0.01, Count = 1
k -> bIndx: Probability = 0.01, Count = 1
k -> bIndy: Probability = 0.01, Count = 1
k -> N: Probability = 0.01, Count = 1
host_add -> gpu_add: Probability = 1.00, Count = 2
mul_Scalar_matrix -> mul_Scalar_matrix: Probability = 1.00, Count = 1
value -> value: Probability = 0.11, Count = 1
value -> a: Probability = 0.11, Count = 1
value -> ;: Probability = 0.11, Count = 1
value -> [: Probability = 0.11, Count = 1
value -> double: Probability = 0.11, Count = 1
value -> N: Probability = 0.11, Count = 1
value -> size: Probability = 0.11, Count = 1
value -> ,: Probability = 0.22, Count = 2
initWith_cpu -> initWith: Probability = 0.50, Count = 1
initWith_cpu -> __global__: Probability = 0.50, Count = 1
num -> =: Probability = 0.12, Count = 1
num -> num: Probability = 0.25, Count = 2
num -> ;: Probability = 0.25, Count = 2
num -> blockIdx: Probability = 0.12, Count = 1
num -> >: Probability = 0.12, Count = 1
num -> (: Probability = 0.12, Count = 1
zeroIndices_cpu -> zeroIndices: Probability = 1.00, Count = 1
vec_out -> vec_out: Probability = 0.33, Count = 1
vec_out -> [: Probability = 0.67, Count = 2
long -> long: Probability = 0.45, Count = 24
long -> k: Probability = 0.02, Count = 1
long -> i: Probability = 0.02, Count = 1
long -> size: Probability = 0.02, Count = 1
long -> {: Probability = 0.04, Count = 2
long -> =: Probability = 0.02, Count = 1
long -> x: Probability = 0.02, Count = 1
long -> ;: Probability = 0.04, Count = 2
long -> int: Probability = 0.04, Count = 2
long -> ,: Probability = 0.06, Count = 3
long -> float: Probability = 0.02, Count = 1
long -> y: Probability = 0.04, Count = 2
long -> z: Probability = 0.08, Count = 4
long -> grad_x: Probability = 0.02, Count = 1
long -> >: Probability = 0.02, Count = 1
long -> .: Probability = 0.04, Count = 2
long -> blockDim: Probability = 0.02, Count = 1
long -> pixel: Probability = 0.02, Count = 1
long -> norm_val: Probability = 0.04, Count = 2
saxpy_serial -> saxpy_gpu: Probability = 1.00, Count = 1
canData -> x: Probability = 0.50, Count = 1
canData -> canData: Probability = 0.50, Count = 1
getCanBusData -> getCanBusData: Probability = 1.00, Count = 1
1 -> for: Probability = 0.01, Count = 1
1 -> x: Probability = 0.05, Count = 4
1 -> =: Probability = 0.07, Count = 5
1 -> *: Probability = 0.01, Count = 1
1 -> .: Probability = 0.05, Count = 4
1 -> Tau: Probability = 0.01, Count = 1
1 -> }: Probability = 0.04, Count = 3
1 -> (: Probability = 0.05, Count = 4
1 -> ;: Probability = 0.04, Count = 3
1 -> i: Probability = 0.01, Count = 1
1 -> ): Probability = 0.01, Count = 1
1 -> 0: Probability = 0.03, Count = 2
1 -> ]: Probability = 0.04, Count = 3
1 -> [: Probability = 0.08, Count = 6
1 -> mx: Probability = 0.01, Count = 1
1 -> <: Probability = 0.03, Count = 2
1 -> >: Probability = 0.03, Count = 2
1 -> tid: Probability = 0.03, Count = 2
1 -> int: Probability = 0.05, Count = 4
1 -> 1: Probability = 0.09, Count = 7
1 -> d_in: Probability = 0.03, Count = 2
1 -> +: Probability = 0.01, Count = 1
1 -> start: Probability = 0.01, Count = 1
1 -> jj: Probability = 0.01, Count = 1
1 -> blockIdx: Probability = 0.01, Count = 1
1 -> blockDim: Probability = 0.01, Count = 1
1 -> y: Probability = 0.01, Count = 1
1 -> &: Probability = 0.01, Count = 1
1 -> ,: Probability = 0.03, Count = 2
1 -> |: Probability = 0.01, Count = 1
1 -> unsigned: Probability = 0.01, Count = 1
1 -> z: Probability = 0.01, Count = 1
1 -> __syncthreads: Probability = 0.01, Count = 1
1 -> const: Probability = 0.01, Count = 1
1 -> id: Probability = 0.01, Count = 1
1 -> step: Probability = 0.01, Count = 1
sum_array_cpu -> sum_array_1Dgrid_1Dblock: Probability = 1.00, Count = 1
matColMeanDiv_cpu -> matColMeanDiv: Probability = 1.00, Count = 1
buf -> buf: Probability = 0.67, Count = 2
buf -> tmp: Probability = 0.33, Count = 1
tmp -> x: Probability = 0.25, Count = 1
tmp -> {: Probability = 0.25, Count = 1
tmp -> &: Probability = 0.25, Count = 1
tmp -> =: Probability = 0.25, Count = 1
m -> m: Probability = 0.30, Count = 7
m -> {: Probability = 0.09, Count = 2
m -> int: Probability = 0.09, Count = 2
m -> x: Probability = 0.04, Count = 1
m -> =: Probability = 0.09, Count = 2
m -> &: Probability = 0.04, Count = 1
m -> a: Probability = 0.09, Count = 2
m -> k: Probability = 0.04, Count = 1
m -> y: Probability = 0.04, Count = 1
m -> +: Probability = 0.04, Count = 1
m -> blockIdx: Probability = 0.04, Count = 1
m -> p: Probability = 0.04, Count = 1
m -> h: Probability = 0.04, Count = 1
dmul_Scalar_matrix -> int: Probability = 0.33, Count = 1
dmul_Scalar_matrix -> ,: Probability = 0.33, Count = 1
dmul_Scalar_matrix -> void: Probability = 0.33, Count = 1
B -> =: Probability = 0.05, Count = 1
B -> B: Probability = 0.24, Count = 5
B -> +: Probability = 0.10, Count = 2
B -> {: Probability = 0.05, Count = 1
B -> blockDim: Probability = 0.05, Count = 1
B -> float: Probability = 0.05, Count = 1
B -> .: Probability = 0.05, Count = 1
B -> *: Probability = 0.10, Count = 2
B -> ,: Probability = 0.10, Count = 2
B -> ;: Probability = 0.05, Count = 1
B -> j: Probability = 0.05, Count = 1
B -> x: Probability = 0.05, Count = 1
B -> Bd: Probability = 0.05, Count = 1
B -> ]: Probability = 0.05, Count = 1
/ -> =: Probability = 0.05, Count = 2
/ -> x: Probability = 0.15, Count = 6
/ -> ]: Probability = 0.03, Count = 1
/ -> u_d: Probability = 0.03, Count = 1
/ -> if: Probability = 0.03, Count = 1
/ -> ): Probability = 0.07, Count = 3
/ -> .: Probability = 0.05, Count = 2
/ -> ;: Probability = 0.03, Count = 1
/ -> 0: Probability = 0.05, Count = 2
/ -> (: Probability = 0.07, Count = 3
/ -> size: Probability = 0.03, Count = 1
/ -> int: Probability = 0.05, Count = 2
/ -> *: Probability = 0.05, Count = 2
/ -> ELEMENT_INDEX: Probability = 0.03, Count = 1
/ -> blockIdx: Probability = 0.05, Count = 2
/ -> i: Probability = 0.03, Count = 1
/ -> const: Probability = 0.03, Count = 1
/ -> height_col: Probability = 0.03, Count = 1
/ -> blockDim: Probability = 0.05, Count = 2
/ -> +: Probability = 0.03, Count = 1
/ -> id: Probability = 0.03, Count = 1
/ -> >: Probability = 0.03, Count = 1
/ -> /: Probability = 0.03, Count = 1
/ -> step: Probability = 0.03, Count = 1
countRangesGlobal -> countRangesGlobal: Probability = 1.00, Count = 1
A -> A: Probability = 0.26, Count = 6
A -> (: Probability = 0.04, Count = 1
A -> size: Probability = 0.04, Count = 1
A -> C: Probability = 0.09, Count = 2
A -> x: Probability = 0.04, Count = 1
A -> {: Probability = 0.04, Count = 1
A -> *: Probability = 0.09, Count = 2
A -> blockDim: Probability = 0.04, Count = 1
A -> .: Probability = 0.04, Count = 1
A -> ,: Probability = 0.04, Count = 1
A -> 0: Probability = 0.04, Count = 1
A -> <: Probability = 0.04, Count = 1
A -> [: Probability = 0.04, Count = 1
A -> reduction: Probability = 0.04, Count = 1
A -> Ad: Probability = 0.04, Count = 1
A -> +: Probability = 0.04, Count = 1
dsubtract_matrix -> int: Probability = 1.00, Count = 1
add_arrays -> add_arrays: Probability = 0.50, Count = 1
add_arrays -> x: Probability = 0.50, Count = 1
z -> i: Probability = 0.07, Count = 1
z -> z: Probability = 0.27, Count = 4
z -> if: Probability = 0.07, Count = 1
z -> *: Probability = 0.07, Count = 1
z -> size2d: Probability = 0.07, Count = 1
z -> blockDim: Probability = 0.07, Count = 1
z -> .: Probability = 0.13, Count = 2
z -> y: Probability = 0.07, Count = 1
z -> +: Probability = 0.07, Count = 1
z -> ;: Probability = 0.07, Count = 1
z -> long: Probability = 0.07, Count = 1
sum_arrays_cpu -> sum_arrays_gpu: Probability = 1.00, Count = 1
iKernel_cpu -> iKernel: Probability = 1.00, Count = 1
C -> i: Probability = 0.10, Count = 2
C -> C: Probability = 0.20, Count = 4
C -> 0: Probability = 0.05, Count = 1
C -> .: Probability = 0.05, Count = 1
C -> *: Probability = 0.10, Count = 2
C -> long: Probability = 0.05, Count = 1
C -> blockDim: Probability = 0.05, Count = 1
C -> ,: Probability = 0.10, Count = 2
C -> =: Probability = 0.05, Count = 1
C -> dev_c: Probability = 0.10, Count = 2
C -> int: Probability = 0.05, Count = 1
C -> Cd: Probability = 0.05, Count = 1
C -> K: Probability = 0.05, Count = 1
multiplyIntValues -> intMultiply: Probability = 1.00, Count = 1
unsigned -> size: Probability = 0.01, Count = 1
unsigned -> int: Probability = 0.07, Count = 6
unsigned -> x: Probability = 0.02, Count = 2
unsigned -> unsigned: Probability = 0.48, Count = 40
unsigned -> {: Probability = 0.01, Count = 1
unsigned -> ]: Probability = 0.01, Count = 1
unsigned -> }: Probability = 0.01, Count = 1
unsigned -> blockIdx: Probability = 0.01, Count = 1
unsigned -> [: Probability = 0.01, Count = 1
unsigned -> key: Probability = 0.01, Count = 1
unsigned -> ,: Probability = 0.04, Count = 3
unsigned -> *: Probability = 0.01, Count = 1
unsigned -> const: Probability = 0.01, Count = 1
unsigned -> .: Probability = 0.01, Count = 1
unsigned -> (: Probability = 0.01, Count = 1
unsigned -> float: Probability = 0.01, Count = 1
unsigned -> char: Probability = 0.04, Count = 3
unsigned -> long: Probability = 0.01, Count = 1
unsigned -> blockDim: Probability = 0.01, Count = 1
unsigned -> grad_x: Probability = 0.01, Count = 1
unsigned -> <: Probability = 0.01, Count = 1
unsigned -> +: Probability = 0.02, Count = 2
unsigned -> 3: Probability = 0.01, Count = 1
unsigned -> currentFrame: Probability = 0.01, Count = 1
unsigned -> g: Probability = 0.01, Count = 1
unsigned -> img_size: Probability = 0.01, Count = 1
unsigned -> index: Probability = 0.02, Count = 2
unsigned -> 0x01: Probability = 0.01, Count = 1
unsigned -> n: Probability = 0.01, Count = 1
unsigned -> gpu_img_in_v: Probability = 0.01, Count = 1
unsigned -> gpu_img_out_r: Probability = 0.02, Count = 2
vector -> ,: Probability = 0.17, Count = 1
vector -> .: Probability = 0.17, Count = 1
vector -> vector: Probability = 0.33, Count = 2
vector -> +: Probability = 0.17, Count = 1
vector -> sum: Probability = 0.17, Count = 1
destination -> ;: Probability = 0.50, Count = 1
destination -> val1: Probability = 0.50, Count = 1
end -> result: Probability = 0.20, Count = 1
end -> {: Probability = 0.20, Count = 1
end -> *: Probability = 0.20, Count = 1
end -> blockIdx: Probability = 0.20, Count = 1
end -> [: Probability = 0.20, Count = 1
doubleArrayScalarDivide_cpu -> doubleArrayScalarDivideKernel: Probability = 0.50, Count = 1
doubleArrayScalarDivide_cpu -> __global__: Probability = 0.50, Count = 1
d_in -> d_in: Probability = 0.21, Count = 3
d_in -> ): Probability = 0.14, Count = 2
d_in -> x: Probability = 0.07, Count = 1
d_in -> gid: Probability = 0.07, Count = 1
d_in -> (: Probability = 0.07, Count = 1
d_in -> tid: Probability = 0.07, Count = 1
d_in -> <: Probability = 0.14, Count = 2
d_in -> 0f: Probability = 0.07, Count = 1
d_in -> pitch: Probability = 0.07, Count = 1
d_in -> d_disparity: Probability = 0.07, Count = 1
d_out -> d_out: Probability = 0.50, Count = 4
d_out -> x: Probability = 0.12, Count = 1
d_out -> blockDim: Probability = 0.12, Count = 1
d_out -> ;: Probability = 0.12, Count = 1
d_out -> else: Probability = 0.12, Count = 1
scalar -> ;: Probability = 0.50, Count = 1
scalar -> ): Probability = 0.50, Count = 1
length -> int: Probability = 0.20, Count = 1
length -> length: Probability = 0.60, Count = 3
length -> .: Probability = 0.20, Count = 1
WIDTH -> ;: Probability = 0.50, Count = 1
WIDTH -> x: Probability = 0.50, Count = 1
activate_array_leaky_cpu -> activate_array_leaky_kernel: Probability = 1.00, Count = 1
10 -> =: Probability = 1.00, Count = 1
: -> index: Probability = 0.12, Count = 1
: -> diff: Probability = 0.12, Count = 1
: -> ;: Probability = 0.25, Count = 2
: -> *: Probability = 0.12, Count = 1
: -> [: Probability = 0.12, Count = 1
: -> =: Probability = 0.12, Count = 1
: -> +: Probability = 0.12, Count = 1
? -> ;: Probability = 0.10, Count = 1
? -> if: Probability = 0.10, Count = 1
? -> =: Probability = 0.20, Count = 2
? -> (: Probability = 0.20, Count = 2
? -> 0: Probability = 0.10, Count = 1
? -> <: Probability = 0.10, Count = 1
? -> {: Probability = 0.10, Count = 1
? -> i: Probability = 0.10, Count = 1
myId -> myId: Probability = 0.22, Count = 2
myId -> +: Probability = 0.11, Count = 1
myId -> x: Probability = 0.11, Count = 1
myId -> *: Probability = 0.22, Count = 2
myId -> ]: Probability = 0.11, Count = 1
myId -> ): Probability = 0.11, Count = 1
myId -> =: Probability = 0.11, Count = 1
logistic_cpu -> logistic: Probability = 1.00, Count = 1
add_kernel -> .: Probability = 0.50, Count = 1
add_kernel -> add_kernel: Probability = 0.50, Count = 1
inputleft -> inputleft: Probability = 0.50, Count = 1
inputleft -> ]: Probability = 0.50, Count = 1
inputright -> inputright: Probability = 1.00, Count = 1
output -> ]: Probability = 0.08, Count = 1
output -> x: Probability = 0.08, Count = 1
output -> output: Probability = 0.58, Count = 7
output -> [: Probability = 0.08, Count = 1
output -> ,: Probability = 0.08, Count = 1
output -> (: Probability = 0.08, Count = 1
count -> ): Probability = 0.33, Count = 1
count -> ,: Probability = 0.33, Count = 1
count -> mx: Probability = 0.33, Count = 1
INCY -> int: Probability = 0.17, Count = 1
INCY -> float: Probability = 0.17, Count = 1
INCY -> blockIdx: Probability = 0.17, Count = 1
INCY -> .: Probability = 0.17, Count = 1
INCY -> <: Probability = 0.17, Count = 1
INCY -> *: Probability = 0.17, Count = 1
Y -> .: Probability = 0.12, Count = 2
Y -> *: Probability = 0.06, Count = 1
Y -> ): Probability = 0.06, Count = 1
Y -> INCX: Probability = 0.06, Count = 1
Y -> a: Probability = 0.06, Count = 1
Y -> b: Probability = 0.06, Count = 1
Y -> (: Probability = 0.12, Count = 2
Y -> float: Probability = 0.06, Count = 1
Y -> index: Probability = 0.06, Count = 1
Y -> ,: Probability = 0.12, Count = 2
Y -> ;: Probability = 0.06, Count = 1
Y -> n: Probability = 0.06, Count = 1
Y -> q: Probability = 0.06, Count = 1
Y -> {: Probability = 0.06, Count = 1
mul_cpu -> mul_kernel: Probability = 1.00, Count = 1
devSteer -> .: Probability = 0.14, Count = 1
devSteer -> x: Probability = 0.14, Count = 1
devSteer -> ]: Probability = 0.14, Count = 1
devSteer -> blockDim: Probability = 0.14, Count = 1
devSteer -> size: Probability = 0.14, Count = 1
devSteer -> devSteer: Probability = 0.14, Count = 1
devSteer -> =: Probability = 0.14, Count = 1
pathPlan -> pathPlan: Probability = 1.00, Count = 1
devSpeed -> =: Probability = 0.33, Count = 1
devSpeed -> *: Probability = 0.33, Count = 1
devSpeed -> size: Probability = 0.33, Count = 1
mult_add_into_cpu -> mult_add_into_kernel: Probability = 1.00, Count = 1
Z -> c: Probability = 0.50, Count = 1
Z -> i: Probability = 0.50, Count = 1
InitReduction -> InitReduction: Probability = 1.00, Count = 1
flags -> flags: Probability = 1.00, Count = 1
reduction -> reduction: Probability = 0.50, Count = 1
reduction -> {: Probability = 0.50, Count = 1
voxelCount -> voxelCount: Probability = 0.50, Count = 1
voxelCount -> =: Probability = 0.50, Count = 1
reductionSize -> reductionSize: Probability = 0.50, Count = 1
reductionSize -> if: Probability = 0.50, Count = 1
parameter -> threadIdx: Probability = 0.20, Count = 1
parameter -> ): Probability = 0.20, Count = 1
parameter -> N: Probability = 0.20, Count = 1
parameter -> dev_parameter: Probability = 0.20, Count = 1
parameter -> <: Probability = 0.20, Count = 1
Function_update_sgd_cpu -> Kernel_Function_update_sgd: Probability = 1.00, Count = 1
gradient -> dev_gradient: Probability = 0.50, Count = 1
gradient -> .: Probability = 0.50, Count = 1
lr -> dev_parameter: Probability = 0.25, Count = 1
lr -> {: Probability = 0.25, Count = 1
lr -> threadIdx: Probability = 0.25, Count = 1
lr -> lr: Probability = 0.25, Count = 1
u_d -> ;: Probability = 0.50, Count = 1
u_d -> u_d: Probability = 0.50, Count = 1
operacionCPU -> operacionKernelGPU: Probability = 0.50, Count = 1
operacionCPU -> x: Probability = 0.50, Count = 1
u_m -> u_m: Probability = 0.50, Count = 1
u_m -> ): Probability = 0.50, Count = 1
lu -> lu: Probability = 1.00, Count = 1
while -> x: Probability = 1.00, Count = 1
squareSerial -> squareKernel: Probability = 1.00, Count = 1
pow -> blockDim: Probability = 0.33, Count = 1
pow -> ;: Probability = 0.33, Count = 1
pow -> filters: Probability = 0.33, Count = 1
2 -> d_out: Probability = 0.05, Count = 1
2 -> (: Probability = 0.14, Count = 3
2 -> ): Probability = 0.10, Count = 2
2 -> =: Probability = 0.10, Count = 2
2 -> +: Probability = 0.05, Count = 1
2 -> 2: Probability = 0.05, Count = 1
2 -> ]: Probability = 0.05, Count = 1
2 -> j: Probability = 0.05, Count = 1
2 -> x: Probability = 0.05, Count = 1
2 -> tc: Probability = 0.05, Count = 1
2 -> stride: Probability = 0.05, Count = 1
2 -> {: Probability = 0.05, Count = 1
2 -> ksize: Probability = 0.05, Count = 1
2 -> ;: Probability = 0.05, Count = 1
2 -> const: Probability = 0.05, Count = 1
2 -> -: Probability = 0.05, Count = 1
2 -> i: Probability = 0.05, Count = 1
doubleArrayVectorAdd_cpu -> doubleArrayVectorAddKernel: Probability = 1.00, Count = 1
d_in_a -> d_in_a: Probability = 1.00, Count = 1
d_in_b -> d_in_b: Probability = 1.00, Count = 1
row -> int: Probability = 0.09, Count = 4
row -> +: Probability = 0.06, Count = 3
row -> ,: Probability = 0.04, Count = 2
row -> *: Probability = 0.04, Count = 2
row -> y: Probability = 0.06, Count = 3
row -> sum: Probability = 0.02, Count = 1
row -> ): Probability = 0.04, Count = 2
row -> blockDim: Probability = 0.02, Count = 1
row -> imageNum: Probability = 0.02, Count = 1
row -> ]: Probability = 0.04, Count = 2
row -> [: Probability = 0.02, Count = 1
row -> meanImage: Probability = 0.02, Count = 1
row -> row: Probability = 0.06, Count = 3
row -> blockIdx: Probability = 0.04, Count = 2
row -> .: Probability = 0.13, Count = 6
row -> if: Probability = 0.04, Count = 2
row -> <: Probability = 0.04, Count = 2
row -> =: Probability = 0.04, Count = 2
row -> column: Probability = 0.02, Count = 1
row -> {: Probability = 0.02, Count = 1
row -> left: Probability = 0.02, Count = 1
row -> K: Probability = 0.02, Count = 1
row -> x: Probability = 0.02, Count = 1
row -> ;: Probability = 0.02, Count = 1
row -> 1: Probability = 0.02, Count = 1
col -> const: Probability = 0.05, Count = 1
col -> =: Probability = 0.05, Count = 1
col -> ,: Probability = 0.05, Count = 1
col -> threadIdx: Probability = 0.05, Count = 1
col -> int: Probability = 0.09, Count = 2
col -> .: Probability = 0.14, Count = 3
col -> }: Probability = 0.05, Count = 1
col -> *: Probability = 0.09, Count = 2
col -> ;: Probability = 0.09, Count = 2
col -> sum: Probability = 0.05, Count = 1
col -> row: Probability = 0.05, Count = 1
col -> +: Probability = 0.05, Count = 1
col -> 0: Probability = 0.05, Count = 1
col -> pixelNum: Probability = 0.05, Count = 1
col -> images: Probability = 0.05, Count = 1
col -> Col: Probability = 0.05, Count = 1
col -> width: Probability = 0.05, Count = 1
rows -> .: Probability = 0.17, Count = 3
rows -> rows: Probability = 0.28, Count = 5
rows -> idx: Probability = 0.06, Count = 1
rows -> ,: Probability = 0.06, Count = 1
rows -> pos: Probability = 0.06, Count = 1
rows -> y: Probability = 0.06, Count = 1
rows -> blockIdx: Probability = 0.11, Count = 2
rows -> long: Probability = 0.06, Count = 1
rows -> x: Probability = 0.06, Count = 1
rows -> unsigned: Probability = 0.06, Count = 1
rows -> =: Probability = 0.06, Count = 1
cols -> cols: Probability = 0.20, Count = 4
cols -> ): Probability = 0.05, Count = 1
cols -> pos: Probability = 0.05, Count = 1
cols -> long: Probability = 0.10, Count = 2
cols -> blockIdx: Probability = 0.05, Count = 1
cols -> .: Probability = 0.05, Count = 1
cols -> =: Probability = 0.15, Count = 3
cols -> depth: Probability = 0.05, Count = 1
cols -> return: Probability = 0.10, Count = 2
cols -> unsigned: Probability = 0.10, Count = 2
cols -> >: Probability = 0.05, Count = 1
cols -> ;: Probability = 0.05, Count = 1
fill_matrix -> fill_matrix: Probability = 1.00, Count = 1
evenoddincrement_cpu -> evenoddincrement: Probability = 0.50, Count = 1
evenoddincrement_cpu -> __global__: Probability = 0.50, Count = 1
tx -> ;: Probability = 0.12, Count = 2
tx -> .: Probability = 0.19, Count = 3
tx -> ]: Probability = 0.19, Count = 3
tx -> tx: Probability = 0.19, Count = 3
tx -> [: Probability = 0.12, Count = 2
tx -> 0: Probability = 0.06, Count = 1
tx -> +: Probability = 0.06, Count = 1
tx -> {: Probability = 0.06, Count = 1
even_inc -> even_inc: Probability = 1.00, Count = 1
g_data -> g_data: Probability = 0.50, Count = 1
g_data -> =: Probability = 0.50, Count = 1
odd_inc -> odd_inc: Probability = 1.00, Count = 1
copy_cpu -> copy_kernel: Probability = 1.00, Count = 1
id -> ]: Probability = 0.02, Count = 1
id -> id: Probability = 0.24, Count = 10
id -> prA: Probability = 0.05, Count = 2
id -> unsigned: Probability = 0.02, Count = 1
id -> >: Probability = 0.02, Count = 1
id -> if: Probability = 0.02, Count = 1
id -> ;: Probability = 0.05, Count = 2
id -> +: Probability = 0.05, Count = 2
id -> (: Probability = 0.10, Count = 4
id -> height: Probability = 0.02, Count = 1
id -> jsz: Probability = 0.02, Count = 1
id -> ): Probability = 0.05, Count = 2
id -> =: Probability = 0.02, Count = 1
id -> *: Probability = 0.02, Count = 1
id -> <: Probability = 0.02, Count = 1
id -> }: Probability = 0.02, Count = 1
id -> int: Probability = 0.02, Count = 1
id -> .: Probability = 0.05, Count = 2
id -> char: Probability = 0.02, Count = 1
id -> x: Probability = 0.10, Count = 4
id -> ,: Probability = 0.02, Count = 1
base -> base: Probability = 0.29, Count = 2
base -> ]: Probability = 0.14, Count = 1
base -> {: Probability = 0.14, Count = 1
base -> ): Probability = 0.14, Count = 1
base -> /: Probability = 0.14, Count = 1
base -> step: Probability = 0.14, Count = 1
clearLabel -> clearLabel: Probability = 1.00, Count = 1
prA -> prA: Probability = 0.25, Count = 1
prA -> =: Probability = 0.25, Count = 1
prA -> base: Probability = 0.25, Count = 1
prA -> <: Probability = 0.25, Count = 1
prB -> prB: Probability = 1.00, Count = 2
. -> .: Probability = 0.08, Count = 3
. -> __syncthreads: Probability = 0.03, Count = 1
. -> ): Probability = 0.05, Count = 2
. -> [: Probability = 0.11, Count = 4
. -> i: Probability = 0.03, Count = 1
. -> int: Probability = 0.03, Count = 1
. -> =: Probability = 0.05, Count = 2
. -> ;: Probability = 0.05, Count = 2
. -> *: Probability = 0.05, Count = 2
. -> <: Probability = 0.03, Count = 1
. -> ny: Probability = 0.03, Count = 1
. -> 0: Probability = 0.03, Count = 1
. -> 21: Probability = 0.03, Count = 1
. -> 07: Probability = 0.03, Count = 1
. -> 71: Probability = 0.03, Count = 1
. -> pos: Probability = 0.03, Count = 1
. -> float: Probability = 0.05, Count = 2
. -> x: Probability = 0.03, Count = 1
. -> k: Probability = 0.03, Count = 1
. -> -: Probability = 0.03, Count = 1
. -> eachElement: Probability = 0.03, Count = 1
. -> width: Probability = 0.03, Count = 1
. -> (: Probability = 0.03, Count = 1
. -> yMid: Probability = 0.03, Count = 1
. -> {: Probability = 0.03, Count = 1
. -> return: Probability = 0.03, Count = 1
. -> ]: Probability = 0.03, Count = 1
num_nodes -> =: Probability = 0.50, Count = 1
num_nodes -> num_nodes: Probability = 0.50, Count = 1
85 -> 85: Probability = 1.00, Count = 1
N_mobil -> N_mobil: Probability = 0.75, Count = 3
N_mobil -> x: Probability = 0.25, Count = 1
delay_kernel_cpu -> delay_kernel: Probability = 1.00, Count = 1
dia -> dia: Probability = 0.67, Count = 2
dia -> .: Probability = 0.33, Count = 1
> -> -: Probability = 0.05, Count = 1
> -> id: Probability = 0.05, Count = 1
> -> blockIdx: Probability = 0.05, Count = 1
> -> ): Probability = 0.05, Count = 1
> -> =: Probability = 0.05, Count = 1
> -> i: Probability = 0.05, Count = 1
> -> index: Probability = 0.05, Count = 1
> -> +: Probability = 0.05, Count = 1
> -> ;: Probability = 0.09, Count = 2
> -> pcountinner: Probability = 0.05, Count = 1
> -> pn: Probability = 0.05, Count = 1
> -> [: Probability = 0.05, Count = 1
> -> ]: Probability = 0.18, Count = 4
> -> 0: Probability = 0.05, Count = 1
> -> indexOutBatch: Probability = 0.05, Count = 1
> -> >: Probability = 0.05, Count = 1
> -> return: Probability = 0.05, Count = 1
> -> row: Probability = 0.05, Count = 1
Tau -> ): Probability = 0.50, Count = 1
Tau -> Tau: Probability = 0.50, Count = 1
resetHeap_cpu -> resetHeapKernel: Probability = 1.00, Count = 1
numBlock -> index: Probability = 0.33, Count = 1
numBlock -> numBlock: Probability = 0.33, Count = 1
numBlock -> x: Probability = 0.33, Count = 1
heapPtr -> heapPtr: Probability = 1.00, Count = 1
heap -> heap: Probability = 1.00, Count = 1
pow_cpu -> pow_kernel: Probability = 1.00, Count = 1
un_idx -> +: Probability = 0.20, Count = 1
un_idx -> ;: Probability = 0.40, Count = 2
un_idx -> .: Probability = 0.20, Count = 1
un_idx -> ]: Probability = 0.20, Count = 1
0f -> +: Probability = 0.11, Count = 1
0f -> d_acts: Probability = 0.11, Count = 1
0f -> (: Probability = 0.11, Count = 1
0f -> ;: Probability = 0.11, Count = 1
0f -> un_idx: Probability = 0.11, Count = 1
0f -> *: Probability = 0.11, Count = 1
0f -> =: Probability = 0.11, Count = 1
0f -> zp: Probability = 0.11, Count = 1
0f -> x: Probability = 0.11, Count = 1
kComputeActs -> kComputeActs: Probability = 1.00, Count = 1
d_nets -> d_nets: Probability = 1.00, Count = 1
d_acts -> =: Probability = 0.50, Count = 1
d_acts -> d_acts: Probability = 0.50, Count = 1
tact -> ): Probability = 0.50, Count = 1
tact -> ]: Probability = 0.50, Count = 1
expf -> [: Probability = 1.00, Count = 1
j -> *: Probability = 0.09, Count = 12
j -> (: Probability = 0.04, Count = 5
j -> size: Probability = 0.01, Count = 1
j -> blockIdx: Probability = 0.01, Count = 2
j -> vec: Probability = 0.01, Count = 1
j -> ]: Probability = 0.04, Count = 6
j -> ;: Probability = 0.07, Count = 9
j -> <: Probability = 0.03, Count = 4
j -> ): Probability = 0.04, Count = 5
j -> mat: Probability = 0.01, Count = 1
j -> +: Probability = 0.09, Count = 13
j -> threadIdx: Probability = 0.01, Count = 2
j -> idx: Probability = 0.01, Count = 2
j -> .: Probability = 0.07, Count = 9
j -> =: Probability = 0.07, Count = 10
j -> x: Probability = 0.04, Count = 5
j -> oe_flag: Probability = 0.01, Count = 1
j -> if: Probability = 0.04, Count = 6
j -> temp: Probability = 0.01, Count = 1
j -> p: Probability = 0.01, Count = 2
j -> }: Probability = 0.01, Count = 2
j -> k: Probability = 0.06, Count = 8
j -> b: Probability = 0.01, Count = 1
j -> for: Probability = 0.04, Count = 6
j -> j: Probability = 0.01, Count = 2
j -> 0: Probability = 0.01, Count = 2
j -> sum: Probability = 0.01, Count = 2
j -> i: Probability = 0.02, Count = 3
j -> int: Probability = 0.02, Count = 3
j -> double: Probability = 0.01, Count = 1
j -> |: Probability = 0.01, Count = 1
j -> y: Probability = 0.02, Count = 3
j -> x1: Probability = 0.01, Count = 1
j -> 1: Probability = 0.01, Count = 1
j -> blockDim: Probability = 0.01, Count = 2
j -> n: Probability = 0.01, Count = 1
j -> ,: Probability = 0.01, Count = 2
transposed -> &: Probability = 0.50, Count = 1
transposed -> transposed: Probability = 0.50, Count = 1
transpositionCPU -> transposeNaive: Probability = 1.00, Count = 1
outArray -> int: Probability = 0.50, Count = 1
outArray -> outArray: Probability = 0.50, Count = 1
compute_array_square -> compute_array_square: Probability = 1.00, Count = 1
testInt1_cpu -> testInt1: Probability = 1.00, Count = 1
4 -> ): Probability = 0.09, Count = 1
4 -> >: Probability = 0.09, Count = 1
4 -> ;: Probability = 0.09, Count = 1
4 -> [: Probability = 0.09, Count = 1
4 -> 4: Probability = 0.18, Count = 2
4 -> (: Probability = 0.09, Count = 1
4 -> *: Probability = 0.09, Count = 1
4 -> 2: Probability = 0.09, Count = 1
4 -> tid: Probability = 0.09, Count = 1
4 -> +: Probability = 0.09, Count = 1
3000 -> +: Probability = 1.00, Count = 1
sum -> +: Probability = 0.05, Count = 1
sum -> ;: Probability = 0.05, Count = 1
sum -> >: Probability = 0.05, Count = 1
sum -> return: Probability = 0.05, Count = 1
sum -> row: Probability = 0.05, Count = 1
sum -> N: Probability = 0.10, Count = 2
sum -> col: Probability = 0.05, Count = 1
sum -> =: Probability = 0.14, Count = 3
sum -> [: Probability = 0.10, Count = 2
sum -> .: Probability = 0.10, Count = 2
sum -> }: Probability = 0.05, Count = 1
sum -> for: Probability = 0.05, Count = 1
sum -> k: Probability = 0.05, Count = 1
sum -> 0: Probability = 0.05, Count = 1
sum -> %: Probability = 0.05, Count = 1
sum -> sum: Probability = 0.05, Count = 1
g_out -> i: Probability = 0.25, Count = 1
g_out -> g_out: Probability = 0.25, Count = 1
g_out -> =: Probability = 0.25, Count = 1
g_out -> }: Probability = 0.25, Count = 1
inner_reps -> {: Probability = 0.20, Count = 1
inner_reps -> idx: Probability = 0.20, Count = 1
inner_reps -> x: Probability = 0.20, Count = 1
inner_reps -> if: Probability = 0.20, Count = 1
inner_reps -> ): Probability = 0.20, Count = 1
incKernel -> incKernel: Probability = 1.00, Count = 1
g_in -> g_in: Probability = 0.50, Count = 1
g_in -> <: Probability = 0.50, Count = 1
probability -> float: Probability = 0.67, Count = 2
probability -> =: Probability = 0.33, Count = 1
rand -> int: Probability = 0.25, Count = 1
rand -> .: Probability = 0.25, Count = 1
rand -> (: Probability = 0.25, Count = 1
rand -> x: Probability = 0.25, Count = 1
forward_dropout_layer -> forward_dropout_layer: Probability = 1.00, Count = 1
inputs -> *: Probability = 0.50, Count = 1
inputs -> int: Probability = 0.50, Count = 1
batch -> *: Probability = 0.18, Count = 3
batch -> i: Probability = 0.06, Count = 1
batch -> outputlength: Probability = 0.06, Count = 1
batch -> int: Probability = 0.12, Count = 2
batch -> n: Probability = 0.06, Count = 1
batch -> ;: Probability = 0.06, Count = 1
batch -> float: Probability = 0.06, Count = 1
batch -> x: Probability = 0.06, Count = 1
batch -> .: Probability = 0.06, Count = 1
batch -> sample: Probability = 0.06, Count = 1
batch -> c: Probability = 0.06, Count = 1
batch -> threadIdx: Probability = 0.06, Count = 1
batch -> size: Probability = 0.12, Count = 2
boundaryCorrectIndexes_cpu -> boundaryCorrectIndexesKernel: Probability = 1.00, Count = 1
else -> d_out: Probability = 0.33, Count = 1
else -> ;: Probability = 0.33, Count = 1
else -> }: Probability = 0.33, Count = 1
upsweep_scan -> upsweep_scan: Probability = 1.00, Count = 1
twod1 -> <: Probability = 0.33, Count = 1
twod1 -> twod1: Probability = 0.33, Count = 1
twod1 -> 1: Probability = 0.33, Count = 1
twod -> twod: Probability = 1.00, Count = 2
char -> char: Probability = 0.38, Count = 20
char -> .: Probability = 0.04, Count = 2
char -> ,: Probability = 0.08, Count = 4
char -> possible_plaintext_str_cuda: Probability = 0.02, Count = 1
char -> keyChar: Probability = 0.02, Count = 1
char -> ): Probability = 0.06, Count = 3
char -> float: Probability = 0.02, Count = 1
char -> grayValue: Probability = 0.02, Count = 1
char -> ]: Probability = 0.02, Count = 1
char -> {: Probability = 0.02, Count = 1
char -> ;: Probability = 0.04, Count = 2
char -> indexInBatch: Probability = 0.02, Count = 1
char -> *: Probability = 0.06, Count = 3
char -> +: Probability = 0.02, Count = 1
char -> 1: Probability = 0.02, Count = 1
char -> height: Probability = 0.02, Count = 1
char -> 0: Probability = 0.04, Count = 2
char -> unsigned: Probability = 0.04, Count = 2
char -> =: Probability = 0.04, Count = 2
char -> threadIdx: Probability = 0.02, Count = 1
char -> [: Probability = 0.02, Count = 1
aImg2 -> aR2: Probability = 0.50, Count = 1
aImg2 -> ,: Probability = 0.50, Count = 1
width -> ;: Probability = 0.04, Count = 2
width -> width: Probability = 0.20, Count = 11
width -> +: Probability = 0.05, Count = 3
width -> |: Probability = 0.02, Count = 1
width -> [: Probability = 0.02, Count = 1
width -> const: Probability = 0.09, Count = 5
width -> temp: Probability = 0.02, Count = 1
width -> =: Probability = 0.04, Count = 2
width -> y: Probability = 0.02, Count = 1
width -> {: Probability = 0.04, Count = 2
width -> ): Probability = 0.02, Count = 1
width -> *: Probability = 0.05, Count = 3
width -> .: Probability = 0.04, Count = 2
width -> blockIdx: Probability = 0.04, Count = 2
width -> z: Probability = 0.02, Count = 1
width -> pos: Probability = 0.02, Count = 1
width -> image: Probability = 0.05, Count = 3
width -> if: Probability = 0.04, Count = 2
width -> ,: Probability = 0.05, Count = 3
width -> x: Probability = 0.04, Count = 2
width -> 00304f: Probability = 0.02, Count = 1
width -> height: Probability = 0.02, Count = 1
width -> <: Probability = 0.02, Count = 1
width -> row: Probability = 0.02, Count = 1
width -> base: Probability = 0.02, Count = 1
width -> n: Probability = 0.02, Count = 1
width -> wsize: Probability = 0.02, Count = 1
height -> .: Probability = 0.10, Count = 4
height -> ): Probability = 0.02, Count = 1
height -> height: Probability = 0.20, Count = 8
height -> x: Probability = 0.02, Count = 1
height -> d_input: Probability = 0.02, Count = 1
height -> ;: Probability = 0.07, Count = 3
height -> |: Probability = 0.02, Count = 1
height -> int: Probability = 0.10, Count = 4
height -> y: Probability = 0.02, Count = 1
height -> d_KinectDisparityPitch: Probability = 0.02, Count = 1
height -> =: Probability = 0.02, Count = 1
height -> {: Probability = 0.05, Count = 2
height -> width: Probability = 0.02, Count = 1
height -> const: Probability = 0.02, Count = 1
height -> pad: Probability = 0.02, Count = 1
height -> ,: Probability = 0.07, Count = 3
height -> *: Probability = 0.05, Count = 2
height -> threadIdx: Probability = 0.02, Count = 1
height -> +: Probability = 0.02, Count = 1
height -> if: Probability = 0.02, Count = 1
height -> wsize: Probability = 0.02, Count = 1
height -> row: Probability = 0.02, Count = 1
aRS -> aRS: Probability = 1.00, Count = 1
Blend_CPU -> Blending_Kernel: Probability = 1.00, Count = 1
aImg1 -> aR1: Probability = 1.00, Count = 1
5 -> ;: Probability = 1.00, Count = 1
matVecRowSubInplace_cpu -> matVecRowSubInplaceKernel: Probability = 0.50, Count = 1
matVecRowSubInplace_cpu -> *: Probability = 0.50, Count = 1
vec -> double: Probability = 0.12, Count = 1
vec -> x: Probability = 0.12, Count = 1
vec -> index: Probability = 0.12, Count = 1
vec -> ]: Probability = 0.12, Count = 1
vec -> ;: Probability = 0.12, Count = 1
vec -> vec: Probability = 0.38, Count = 3
matVecColAddInplace_cpu -> matVecColAddInplaceKernel: Probability = 1.00, Count = 1
MMDOuterProdComputeWithSum -> MMDOuterProdComputeWithSum: Probability = 1.00, Count = 1
x_average -> x_average: Probability = 0.25, Count = 1
x_average -> size_x: Probability = 0.25, Count = 1
x_average -> gridDim: Probability = 0.25, Count = 1
x_average -> =: Probability = 0.25, Count = 1
size_x -> .: Probability = 0.33, Count = 1
size_x -> ;: Probability = 0.33, Count = 1
size_x -> size_x: Probability = 0.33, Count = 1
x_outer_prod -> x_outer_prod: Probability = 0.50, Count = 1
x_outer_prod -> +: Probability = 0.50, Count = 1
vecY -> x: Probability = 0.33, Count = 2
vecY -> y: Probability = 0.17, Count = 1
vecY -> vecY: Probability = 0.17, Count = 1
vecY -> =: Probability = 0.17, Count = 1
vecY -> blockDim: Probability = 0.17, Count = 1
saxpy_cpu -> saxpy_gpu: Probability = 1.00, Count = 1
vecX -> threadIdx: Probability = 0.50, Count = 1
vecX -> vecX: Probability = 0.50, Count = 1
score_thr -> *: Probability = 0.50, Count = 1
score_thr -> valid_mask: Probability = 0.50, Count = 1
set_valid_mask_cpu -> set_valid_mask: Probability = 0.17, Count = 1
set_valid_mask_cpu -> 1: Probability = 0.17, Count = 1
set_valid_mask_cpu -> *: Probability = 0.33, Count = 2
set_valid_mask_cpu -> tid: Probability = 0.17, Count = 1
set_valid_mask_cpu -> __global__: Probability = 0.17, Count = 1
valid_mask -> }: Probability = 0.25, Count = 1
valid_mask -> =: Probability = 0.25, Count = 1
valid_mask -> return: Probability = 0.25, Count = 1
valid_mask -> ]: Probability = 0.25, Count = 1
score -> score: Probability = 0.40, Count = 2
score -> 1: Probability = 0.20, Count = 1
score -> score_thr: Probability = 0.20, Count = 1
score -> }: Probability = 0.20, Count = 1
copy_swap -> copy_swap: Probability = 1.00, Count = 1
f_in -> f_in: Probability = 0.33, Count = 1
f_in -> float: Probability = 0.33, Count = 1
f_in -> f: Probability = 0.33, Count = 1
L_x -> L_x: Probability = 0.25, Count = 1
L_x -> .: Probability = 0.75, Count = 3
k_x -> ;: Probability = 0.20, Count = 2
k_x -> =: Probability = 0.20, Count = 2
k_x -> .: Probability = 0.10, Count = 1
k_x -> *: Probability = 0.10, Count = 1
k_x -> +: Probability = 0.20, Count = 2
k_x -> (: Probability = 0.10, Count = 1
k_x -> int: Probability = 0.10, Count = 1
f_target -> f_target: Probability = 1.00, Count = 1
tempval -> ;: Probability = 0.50, Count = 1
tempval -> >: Probability = 0.50, Count = 1
f -> {: Probability = 0.06, Count = 1
f -> ;: Probability = 0.17, Count = 3
f -> =: Probability = 0.06, Count = 1
f -> size: Probability = 0.06, Count = 1
f -> threadIdx: Probability = 0.06, Count = 1
f -> /: Probability = 0.06, Count = 1
f -> i: Probability = 0.06, Count = 1
f -> <: Probability = 0.11, Count = 2
f -> .: Probability = 0.06, Count = 1
f -> [: Probability = 0.06, Count = 1
f -> pa: Probability = 0.06, Count = 1
f -> }: Probability = 0.06, Count = 1
f -> x: Probability = 0.06, Count = 1
f -> element_c: Probability = 0.06, Count = 1
f -> N: Probability = 0.06, Count = 1
sum_backward -> Kernel_Sum_backward_opt2: Probability = 0.17, Count = 1
sum_backward -> int: Probability = 0.17, Count = 1
sum_backward -> j: Probability = 0.17, Count = 1
sum_backward -> *: Probability = 0.17, Count = 1
sum_backward -> __global__: Probability = 0.17, Count = 1
sum_backward -> ;: Probability = 0.17, Count = 1
db -> db: Probability = 0.50, Count = 1
db -> [: Probability = 0.50, Count = 1
dout -> ]: Probability = 0.50, Count = 1
dout -> sum: Probability = 0.50, Count = 1
device_output -> [: Probability = 0.33, Count = 1
device_output -> ;: Probability = 0.33, Count = 1
device_output -> device_output: Probability = 0.33, Count = 1
& -> =: Probability = 0.20, Count = 2
& -> 4: Probability = 0.10, Count = 1
& -> key: Probability = 0.10, Count = 1
& -> ;: Probability = 0.10, Count = 1
& -> in: Probability = 0.10, Count = 1
& -> &: Probability = 0.40, Count = 4
is_repeat -> is_repeat: Probability = 1.00, Count = 1
device_input -> device_input: Probability = 0.67, Count = 2
device_input -> ): Probability = 0.33, Count = 1
kmeans_average -> kmeans_average: Probability = 1.00, Count = 1
means -> means: Probability = 1.00, Count = 1
bid -> =: Probability = 0.20, Count = 1
bid -> blockDim: Probability = 0.20, Count = 1
bid -> ;: Probability = 0.20, Count = 1
bid -> threadIdx: Probability = 0.20, Count = 1
bid -> x: Probability = 0.20, Count = 1
counts -> counts: Probability = 1.00, Count = 1
BID -> .: Probability = 0.33, Count = 1
BID -> if: Probability = 0.33, Count = 1
BID -> =: Probability = 0.33, Count = 1
DIM -> [: Probability = 1.00, Count = 1
3 -> i: Probability = 0.12, Count = 1
3 -> *: Probability = 0.12, Count = 1
3 -> +: Probability = 0.25, Count = 2
3 -> ]: Probability = 0.12, Count = 1
3 -> width: Probability = 0.38, Count = 3
matPerRowDivInplace_cpu -> matPerRowDivInplaceKernel: Probability = 1.00, Count = 1
alphas -> alphas: Probability = 1.00, Count = 1
sx -> sx: Probability = 0.50, Count = 1
sx -> ,: Probability = 0.50, Count = 1
compute_new_means -> compute_new_means: Probability = 1.00, Count = 1
mx -> mx: Probability = 1.00, Count = 1
cluster -> my: Probability = 0.25, Count = 1
cluster -> =: Probability = 0.25, Count = 1
cluster -> ]: Probability = 0.25, Count = 1
cluster -> [: Probability = 0.25, Count = 1
max -> cluster: Probability = 1.00, Count = 1
sy -> sy: Probability = 1.00, Count = 1
my -> my: Probability = 1.00, Count = 1
copy_array_d2d -> copy_array_d2d: Probability = 0.25, Count = 1
copy_array_d2d -> n: Probability = 0.25, Count = 1
copy_array_d2d -> __global__: Probability = 0.25, Count = 1
copy_array_d2d -> .: Probability = 0.25, Count = 1
dst -> dst: Probability = 1.00, Count = 1
src -> src: Probability = 0.11, Count = 2
src -> ptr_src_0: Probability = 0.05, Count = 1
src -> int: Probability = 0.21, Count = 4
src -> =: Probability = 0.16, Count = 3
src -> .: Probability = 0.05, Count = 1
src -> ]: Probability = 0.05, Count = 1
src -> ,: Probability = 0.05, Count = 1
src -> d_indptr: Probability = 0.05, Count = 1
src -> j: Probability = 0.05, Count = 1
src -> x: Probability = 0.11, Count = 2
src -> *: Probability = 0.05, Count = 1
src -> ptr_stc_1: Probability = 0.05, Count = 1
labelList -> >: Probability = 0.50, Count = 1
labelList -> labelList: Probability = 0.50, Count = 1
InitCCL -> InitCCL: Probability = 1.00, Count = 1
reference -> reference: Probability = 0.50, Count = 1
reference -> ;: Probability = 0.50, Count = 1
nnz -> sxz: Probability = 0.12, Count = 1
nnz -> sxbeg: Probability = 0.12, Count = 1
nnz -> ,: Probability = 0.12, Count = 1
nnz -> nnz: Probability = 0.12, Count = 1
nnz -> *: Probability = 0.12, Count = 1
nnz -> int: Probability = 0.12, Count = 1
nnz -> i2: Probability = 0.12, Count = 1
nnz -> =: Probability = 0.12, Count = 1
sxz -> sxbeg: Probability = 0.17, Count = 1
sxz -> x: Probability = 0.17, Count = 1
sxz -> sxz: Probability = 0.33, Count = 2
sxz -> if: Probability = 0.17, Count = 1
sxz -> id: Probability = 0.17, Count = 1
jsx -> jsx: Probability = 0.50, Count = 1
jsx -> npml: Probability = 0.50, Count = 1
npml -> npml: Probability = 0.17, Count = 1
npml -> ;: Probability = 0.17, Count = 1
npml -> .: Probability = 0.17, Count = 1
npml -> threadIdx: Probability = 0.17, Count = 1
npml -> i1: Probability = 0.17, Count = 1
npml -> int: Probability = 0.17, Count = 1
szbeg -> szbeg: Probability = 1.00, Count = 1
jsz -> jsz: Probability = 1.00, Count = 1
ns -> ns: Probability = 0.33, Count = 1
ns -> id: Probability = 0.33, Count = 1
ns -> *: Probability = 0.33, Count = 1
cpu_set_sg -> cuda_set_sg: Probability = 1.00, Count = 1
sxbeg -> sxbeg: Probability = 0.50, Count = 1
sxbeg -> id: Probability = 0.50, Count = 1
addMatrix -> addMatrixGPU: Probability = 0.33, Count = 1
addMatrix -> int: Probability = 0.33, Count = 1
addMatrix -> __global__: Probability = 0.33, Count = 1
score_factors -> score_factors: Probability = 1.00, Count = 1
resizedClsScore_cpu -> resizedClsScore: Probability = 1.00, Count = 1
diff -> [: Probability = 0.33, Count = 1
diff -> {: Probability = 0.33, Count = 1
diff -> ]: Probability = 0.33, Count = 1
error -> error: Probability = 0.25, Count = 1
error -> [: Probability = 0.25, Count = 1
error -> *: Probability = 0.25, Count = 1
error -> group_offset: Probability = 0.25, Count = 1
delta -> delta: Probability = 0.25, Count = 1
delta -> (: Probability = 0.25, Count = 1
delta -> int: Probability = 0.25, Count = 1
delta -> -: Probability = 0.25, Count = 1
l1_cpu -> l1_kernel: Probability = 1.00, Count = 1
truth -> truth: Probability = 0.25, Count = 1
truth -> n: Probability = 0.25, Count = 1
truth -> .: Probability = 0.25, Count = 1
truth -> ,: Probability = 0.25, Count = 1
pred -> pred: Probability = 0.25, Count = 1
pred -> [: Probability = 0.25, Count = 1
pred -> n: Probability = 0.25, Count = 1
pred -> (: Probability = 0.25, Count = 1
fabs -> [: Probability = 0.33, Count = 1
fabs -> i: Probability = 0.33, Count = 1
fabs -> return: Probability = 0.33, Count = 1
AddMatrixOnCPU -> AddMatrixOnGPU: Probability = 1.00, Count = 1
cnt -> j: Probability = 1.00, Count = 1
ny -> *: Probability = 0.20, Count = 1
ny -> .: Probability = 0.20, Count = 1
ny -> ): Probability = 0.20, Count = 1
ny -> blockIdx: Probability = 0.20, Count = 1
ny -> int: Probability = 0.20, Count = 1
nx -> nx: Probability = 0.18, Count = 2
nx -> ]: Probability = 0.27, Count = 3
nx -> ,: Probability = 0.18, Count = 2
nx -> k: Probability = 0.09, Count = 1
nx -> ;: Probability = 0.09, Count = 1
nx -> ny: Probability = 0.09, Count = 1
nx -> x: Probability = 0.09, Count = 1
srcData -> *: Probability = 0.29, Count = 2
srcData -> int: Probability = 0.14, Count = 1
srcData -> if: Probability = 0.14, Count = 1
srcData -> srcData: Probability = 0.29, Count = 2
srcData -> x: Probability = 0.14, Count = 1
LreluForward -> LreluForward: Probability = 1.00, Count = 1
data_size -> data_size: Probability = 0.12, Count = 1
data_size -> .: Probability = 0.25, Count = 2
data_size -> i: Probability = 0.12, Count = 1
data_size -> int: Probability = 0.12, Count = 1
data_size -> x: Probability = 0.25, Count = 2
data_size -> {: Probability = 0.12, Count = 1
dstData -> thread_index: Probability = 0.50, Count = 1
dstData -> dstData: Probability = 0.50, Count = 1
nxprj2 -> *: Probability = 0.50, Count = 1
nxprj2 -> nviews: Probability = 0.50, Count = 1
FFT -> *: Probability = 1.00, Count = 2
filter -> nxprj2: Probability = 0.33, Count = 1
filter -> scale: Probability = 0.33, Count = 1
filter -> .: Probability = 0.33, Count = 1
nviews -> scale: Probability = 1.00, Count = 2
filterFFT_cpu -> filterFFT: Probability = 1.00, Count = 1
convertFloatToRGBA_cpu -> convertFloatToRGBA_kernel: Probability = 1.00, Count = 1
out_image -> out_image: Probability = 1.00, Count = 1
in_image -> height: Probability = 1.00, Count = 1
convertEdgeMaskToFloatCpu -> convertEdgeMaskToFloatDevice: Probability = 1.00, Count = 1
d_output -> d_output: Probability = 0.50, Count = 1
d_output -> y: Probability = 0.50, Count = 1
min -> ;: Probability = 1.00, Count = 1
d_input -> =: Probability = 0.33, Count = 1
d_input -> (: Probability = 0.33, Count = 1
d_input -> d_input: Probability = 0.33, Count = 1
pos -> pos: Probability = 0.10, Count = 1
pos -> ]: Probability = 0.10, Count = 1
pos -> idx: Probability = 0.10, Count = 1
pos -> i: Probability = 0.10, Count = 1
pos -> -: Probability = 0.10, Count = 1
pos -> *: Probability = 0.10, Count = 1
pos -> +: Probability = 0.10, Count = 1
pos -> [: Probability = 0.20, Count = 2
pos -> j: Probability = 0.10, Count = 1
idy -> rows: Probability = 0.10, Count = 1
idy -> trans_pos: Probability = 0.10, Count = 1
idy -> mat_in: Probability = 0.10, Count = 1
idy -> idx: Probability = 0.10, Count = 1
idy -> x: Probability = 0.10, Count = 1
idy -> int: Probability = 0.10, Count = 1
idy -> ;: Probability = 0.10, Count = 1
idy -> .: Probability = 0.10, Count = 1
idy -> =: Probability = 0.10, Count = 1
idy -> [: Probability = 0.10, Count = 1
gpu_matrix_transpose -> gpu_matrix_transpose: Probability = 1.00, Count = 1
mat_in -> mat_in: Probability = 1.00, Count = 1
mat_out -> mat_out: Probability = 1.00, Count = 1
LreluBackward -> LreluBackward: Probability = 1.00, Count = 1
srcDiff -> srcDiff: Probability = 1.00, Count = 1
dstDiff -> dstDiff: Probability = 0.50, Count = 1
dstDiff -> int: Probability = 0.50, Count = 1
stride -> int: Probability = 0.04, Count = 1
stride -> ;: Probability = 0.08, Count = 2
stride -> .: Probability = 0.16, Count = 4
stride -> idx: Probability = 0.04, Count = 1
stride -> minh: Probability = 0.04, Count = 1
stride -> {: Probability = 0.04, Count = 1
stride -> out: Probability = 0.04, Count = 1
stride -> x: Probability = 0.04, Count = 1
stride -> ksize: Probability = 0.04, Count = 1
stride -> ,: Probability = 0.16, Count = 4
stride -> *: Probability = 0.08, Count = 2
stride -> (: Probability = 0.04, Count = 1
stride -> const: Probability = 0.08, Count = 2
stride -> threadIdx: Probability = 0.04, Count = 1
stride -> i: Probability = 0.04, Count = 1
stride -> ): Probability = 0.04, Count = 1
cpuReduce -> gpuReduceRecursive: Probability = 0.50, Count = 1
cpuReduce -> ;: Probability = 0.50, Count = 1
pn -> pn: Probability = 0.33, Count = 1
pn -> =: Probability = 0.33, Count = 1
pn -> .: Probability = 0.33, Count = 1
p -> p: Probability = 0.11, Count = 2
p -> pcountinner: Probability = 0.06, Count = 1
p -> d_in: Probability = 0.11, Count = 2
p -> int: Probability = 0.11, Count = 2
p -> 1: Probability = 0.11, Count = 2
p -> {: Probability = 0.06, Count = 1
p -> [: Probability = 0.06, Count = 1
p -> +: Probability = 0.06, Count = 1
p -> indices: Probability = 0.06, Count = 1
p -> ,: Probability = 0.06, Count = 1
p -> =: Probability = 0.11, Count = 2
p -> *: Probability = 0.06, Count = 1
p -> ;: Probability = 0.06, Count = 1
pcountinner -> ;: Probability = 0.25, Count = 1
pcountinner -> {: Probability = 0.25, Count = 1
pcountinner -> pcountinner: Probability = 0.25, Count = 1
pcountinner -> *: Probability = 0.25, Count = 1
devidecountInnerCPU -> devidecountInner: Probability = 1.00, Count = 1
Zsize -> x: Probability = 0.25, Count = 1
Zsize -> Zsize: Probability = 0.50, Count = 2
Zsize -> -: Probability = 0.25, Count = 1
Ysize -> blockIdx: Probability = 0.20, Count = 1
Ysize -> Ysize: Probability = 0.40, Count = 2
Ysize -> 2: Probability = 0.20, Count = 1
Ysize -> Zsize: Probability = 0.20, Count = 1
Xsize -> x: Probability = 0.12, Count = 1
Xsize -> Xsize: Probability = 0.25, Count = 2
Xsize -> ): Probability = 0.12, Count = 1
Xsize -> Zsize: Probability = 0.12, Count = 1
Xsize -> -: Probability = 0.12, Count = 1
Xsize -> {: Probability = 0.12, Count = 1
Xsize -> 2: Probability = 0.12, Count = 1
dec_size -> =: Probability = 0.50, Count = 1
dec_size -> dec_size: Probability = 0.50, Count = 1
cpuConvertToBits -> cudaConvertToBits: Probability = 1.00, Count = 1
bit_decisions -> bit_decisions: Probability = 0.50, Count = 1
bit_decisions -> int: Probability = 0.50, Count = 1
dec_index -> blockIdx: Probability = 0.11, Count = 1
dec_index -> *: Probability = 0.22, Count = 2
dec_index -> =: Probability = 0.22, Count = 2
dec_index -> (: Probability = 0.11, Count = 1
dec_index -> bit_index: Probability = 0.11, Count = 1
dec_index -> x: Probability = 0.11, Count = 1
dec_index -> dec_index: Probability = 0.11, Count = 1
bit_index -> if: Probability = 1.00, Count = 1
short -> short: Probability = 1.00, Count = 1
curr_decision -> return: Probability = 1.00, Count = 1
bit_stream -> bit_stream: Probability = 1.00, Count = 1
memWidth -> -: Probability = 0.25, Count = 1
memWidth -> =: Probability = 0.25, Count = 1
memWidth -> memWidth: Probability = 0.25, Count = 1
memWidth -> ;: Probability = 0.25, Count = 1
memHeight -> memWidth: Probability = 0.67, Count = 2
memHeight -> memHeight: Probability = 0.33, Count = 1
devMat -> =: Probability = 0.12, Count = 1
devMat -> devMatX: Probability = 0.25, Count = 2
devMat -> devMat: Probability = 0.12, Count = 1
devMat -> ]: Probability = 0.12, Count = 1
devMat -> +: Probability = 0.12, Count = 1
devMat -> *: Probability = 0.25, Count = 2
devMatX -> *: Probability = 0.17, Count = 1
devMatX -> devMat: Probability = 0.17, Count = 1
devMatX -> ]: Probability = 0.17, Count = 1
devMatX -> -: Probability = 0.17, Count = 1
devMatX -> 1: Probability = 0.17, Count = 1
devMatX -> +: Probability = 0.17, Count = 1
copyAliasRow -> copyAliasRow: Probability = 1.00, Count = 1
compCount -> const: Probability = 0.50, Count = 1
compCount -> float: Probability = 0.50, Count = 1
circ -> =: Probability = 0.50, Count = 2
circ -> tid: Probability = 0.25, Count = 1
circ -> [: Probability = 0.25, Count = 1
areaRes -> ): Probability = 1.00, Count = 1
perimeter -> perimeterRes: Probability = 1.00, Count = 1
ObjFeatures_circularity -> (: Probability = 1.00, Count = 1
devidecountCPU -> devidecount: Probability = 1.00, Count = 1
pint -> pint: Probability = 1.00, Count = 1
pcount -> 2: Probability = 1.00, Count = 1
temp -> ]: Probability = 0.09, Count = 1
temp -> [: Probability = 0.09, Count = 1
temp -> {: Probability = 0.09, Count = 1
temp -> +: Probability = 0.27, Count = 3
temp -> i: Probability = 0.09, Count = 1
temp -> float: Probability = 0.09, Count = 1
temp -> =: Probability = 0.18, Count = 2
temp -> temp: Probability = 0.09, Count = 1
bubbleSort -> oddevenSort: Probability = 1.00, Count = 1
matmul -> matmul: Probability = 1.00, Count = 1
cudaKernel_estimateSnr_cpu -> cudaKernel_estimateSnr: Probability = 1.00, Count = 1
mean -> mean: Probability = 0.07, Count = 1
mean -> binary: Probability = 0.07, Count = 1
mean -> +: Probability = 0.20, Count = 3
mean -> ]: Probability = 0.07, Count = 1
mean -> ): Probability = 0.07, Count = 1
mean -> .: Probability = 0.07, Count = 1
mean -> =: Probability = 0.13, Count = 2
mean -> size: Probability = 0.07, Count = 1
mean -> *: Probability = 0.13, Count = 2
mean -> abs: Probability = 0.07, Count = 1
mean -> batch: Probability = 0.07, Count = 1
snrValue -> maxval: Probability = 0.50, Count = 1
snrValue -> x: Probability = 0.50, Count = 1
corrSum -> (: Probability = 0.33, Count = 1
corrSum -> corrSum: Probability = 0.67, Count = 2
corrValidCount -> corrValidCount: Probability = 1.00, Count = 1
maxval -> .: Probability = 0.50, Count = 1
maxval -> ,: Probability = 0.50, Count = 1
cpu_sgemm -> naive_sgemm_kernel: Probability = 1.00, Count = 1
keyIndex -> .: Probability = 0.33, Count = 1
keyIndex -> key: Probability = 0.33, Count = 1
keyIndex -> [: Probability = 0.33, Count = 1
kernelXor -> kernelXor: Probability = 1.00, Count = 1
keyChar -> char: Probability = 1.00, Count = 1
input_length -> *: Probability = 0.50, Count = 1
input_length -> +: Probability = 0.50, Count = 1
keyCharPtr -> unsigned: Probability = 0.20, Count = 1
keyCharPtr -> ,: Probability = 0.20, Count = 1
keyCharPtr -> int: Probability = 0.40, Count = 2
keyCharPtr -> ]: Probability = 0.20, Count = 1
possible_plaintext_str_cuda -> *: Probability = 0.50, Count = 1
possible_plaintext_str_cuda -> ]: Probability = 0.50, Count = 1
input_str_cuda -> input_str_cuda: Probability = 0.50, Count = 1
input_str_cuda -> ,: Probability = 0.50, Count = 1
key -> *: Probability = 0.25, Count = 1
key -> key: Probability = 0.25, Count = 1
key -> ;: Probability = 0.25, Count = 1
key -> keyIndex: Probability = 0.25, Count = 1
envejecer_kernel_cpu -> envejecer_kernel: Probability = 1.00, Count = 1
estado -> estado: Probability = 1.00, Count = 1
pupacion -> pupacion: Probability = 1.00, Count = 1
edad -> edad: Probability = 1.00, Count = 1
sin -> (: Probability = 0.50, Count = 1
sin -> [: Probability = 0.50, Count = 1
cos -> [: Probability = 0.33, Count = 1
cos -> (: Probability = 0.67, Count = 2
globalCalculateKernel -> void: Probability = 1.00, Count = 1
cpu_matrix_mul -> gpu_matrix_mul: Probability = 1.00, Count = 1
grayscale -> grayscale: Probability = 1.00, Count = 1
g -> r: Probability = 0.33, Count = 1
g -> =: Probability = 0.67, Count = 2
imageNum -> :: Probability = 0.50, Count = 2
imageNum -> blockDim: Probability = 0.25, Count = 1
imageNum -> *: Probability = 0.25, Count = 1
pixelNum -> 0: Probability = 0.20, Count = 1
pixelNum -> imageNum: Probability = 0.20, Count = 1
pixelNum -> +: Probability = 0.20, Count = 1
pixelNum -> row: Probability = 0.20, Count = 1
pixelNum -> col: Probability = 0.20, Count = 1
subtractMean_cpu -> subtractMean: Probability = 1.00, Count = 1
images -> images: Probability = 0.25, Count = 1
images -> meanImage: Probability = 0.25, Count = 1
images -> +: Probability = 0.25, Count = 1
images -> -: Probability = 0.25, Count = 1
meanImage -> [: Probability = 0.50, Count = 1
meanImage -> meanImage: Probability = 0.50, Count = 1
38F -> >: Probability = 0.33, Count = 1
38F -> start: Probability = 0.33, Count = 1
38F -> size: Probability = 0.33, Count = 1
maxhd -> (: Probability = 0.20, Count = 1
maxhd -> >: Probability = 0.20, Count = 1
maxhd -> *: Probability = 0.20, Count = 1
maxhd -> 1: Probability = 0.20, Count = 1
maxhd -> maxhd: Probability = 0.20, Count = 1
kernelMaximum -> kernelMaximum: Probability = 1.00, Count = 1
max_hd -> for: Probability = 0.17, Count = 1
max_hd -> i: Probability = 0.17, Count = 1
max_hd -> tx: Probability = 0.33, Count = 2
max_hd -> >: Probability = 0.17, Count = 1
max_hd -> =: Probability = 0.17, Count = 1
maxvd -> i: Probability = 0.25, Count = 1
maxvd -> start: Probability = 0.25, Count = 1
maxvd -> ]: Probability = 0.25, Count = 1
maxvd -> tx: Probability = 0.25, Count = 1
max_vd -> tx: Probability = 0.67, Count = 4
max_vd -> +: Probability = 0.17, Count = 1
max_vd -> =: Probability = 0.17, Count = 1
start -> size: Probability = 0.25, Count = 1
start -> .: Probability = 0.25, Count = 1
start -> min: Probability = 0.25, Count = 1
start -> xp: Probability = 0.25, Count = 1
175494351e -> start: Probability = 0.50, Count = 1
175494351e -> =: Probability = 0.50, Count = 1
SparseMatmul_forward -> cuda_SparseMatmul_forward_kernel: Probability = 1.00, Count = 1
indices -> int: Probability = 0.25, Count = 1
indices -> =: Probability = 0.25, Count = 1
indices -> d_indices: Probability = 0.25, Count = 1
indices -> ,: Probability = 0.25, Count = 1
indptr -> indptr: Probability = 0.25, Count = 2
indptr -> d_indptr: Probability = 0.25, Count = 2
indptr -> for: Probability = 0.12, Count = 1
indptr -> [: Probability = 0.25, Count = 2
indptr -> ,: Probability = 0.12, Count = 1
totalPixels -> 0: Probability = 0.14, Count = 1
totalPixels -> j: Probability = 0.14, Count = 1
totalPixels -> totalPixels: Probability = 0.29, Count = 2
totalPixels -> i: Probability = 0.14, Count = 1
totalPixels -> .: Probability = 0.14, Count = 1
totalPixels -> =: Probability = 0.14, Count = 1
out -> out: Probability = 0.38, Count = 6
out -> *: Probability = 0.12, Count = 2
out -> .: Probability = 0.06, Count = 1
out -> int: Probability = 0.06, Count = 1
out -> indexOutBatch: Probability = 0.06, Count = 1
out -> d_out_data: Probability = 0.06, Count = 1
out -> y: Probability = 0.06, Count = 1
out -> blockIdx: Probability = 0.06, Count = 1
out -> s2: Probability = 0.06, Count = 1
out -> =: Probability = 0.06, Count = 1
outPixelOffset -> outPixelOffset: Probability = 0.50, Count = 2
outPixelOffset -> ]: Probability = 0.25, Count = 1
outPixelOffset -> ;: Probability = 0.25, Count = 1
availablePixels -> <: Probability = 0.25, Count = 1
availablePixels -> availablePixels: Probability = 0.50, Count = 2
availablePixels -> =: Probability = 0.25, Count = 1
vectorMatrixMult -> vectorMatrixMult: Probability = 1.00, Count = 1
matrix -> j: Probability = 0.50, Count = 1
matrix -> matrix: Probability = 0.50, Count = 1
depth_scale -> depth_scale: Probability = 0.33, Count = 1
depth_scale -> ,: Probability = 0.33, Count = 1
depth_scale -> =: Probability = 0.33, Count = 1
convertKinectDisparityInPlace_cpu -> convertKinectDisparityInPlace_kernel: Probability = 1.00, Count = 1
d_disparity -> d_disparity: Probability = 0.50, Count = 1
d_disparity -> =: Probability = 0.50, Count = 1
pitch -> pitch: Probability = 0.50, Count = 1
pitch -> ): Probability = 0.50, Count = 1
SparseMatmul_backward -> cuda_SparseMatmul_backward_kernel: Probability = 1.00, Count = 1
c_grad -> c_in: Probability = 1.00, Count = 1
b_grad -> b_in: Probability = 1.00, Count = 1
grad -> threadIdx: Probability = 0.33, Count = 1
grad -> grad: Probability = 0.33, Count = 1
grad -> u: Probability = 0.33, Count = 1
d_label -> ,: Probability = 0.50, Count = 1
d_label -> ]: Probability = 0.50, Count = 1
d_label_sub -> ]: Probability = 0.33, Count = 1
d_label_sub -> ): Probability = 0.33, Count = 1
d_label_sub -> *: Probability = 0.33, Count = 1
ind_in -> }: Probability = 0.33, Count = 1
ind_in -> d_ind: Probability = 0.33, Count = 1
ind_in -> d_label_sub: Probability = 0.33, Count = 1
ind_out -> [: Probability = 0.33, Count = 2
ind_out -> d_label_sub: Probability = 0.17, Count = 1
ind_out -> d_ind: Probability = 0.17, Count = 1
ind_out -> d_label: Probability = 0.17, Count = 1
ind_out -> =: Probability = 0.17, Count = 1
inv_sub_factor -> ,: Probability = 0.50, Count = 1
inv_sub_factor -> ;: Probability = 0.50, Count = 1
d_ind -> ]: Probability = 0.50, Count = 1
d_ind -> ,: Probability = 0.50, Count = 1
subsample_ind_and_labels_cpu -> subsample_ind_and_labels_GPU: Probability = 1.00, Count = 1
d_ind_sub -> d_ind_sub: Probability = 0.50, Count = 1
d_ind_sub -> ]: Probability = 0.50, Count = 1
n_out -> int: Probability = 0.33, Count = 1
n_out -> ind_out: Probability = 0.33, Count = 1
n_out -> d_label_sub: Probability = 0.33, Count = 1
floorf -> d_label_sub: Probability = 1.00, Count = 1
mxm_1d_cpu -> mxm_1d: Probability = 1.00, Count = 1
s -> ;: Probability = 0.25, Count = 1
s -> p: Probability = 0.25, Count = 1
s -> }: Probability = 0.25, Count = 1
s -> <: Probability = 0.25, Count = 1
fabsf_clamp_cpu -> fabsf_clamp_kernel: Probability = 1.00, Count = 1
clamp_min -> clamp_max: Probability = 1.00, Count = 1
clamp_max -> int: Probability = 1.00, Count = 1
h -> +: Probability = 0.14, Count = 2
h -> int: Probability = 0.07, Count = 1
h -> [: Probability = 0.07, Count = 1
h -> ;: Probability = 0.07, Count = 1
h -> for: Probability = 0.07, Count = 1
h -> i: Probability = 0.07, Count = 1
h -> h: Probability = 0.07, Count = 1
h -> .: Probability = 0.07, Count = 1
h -> w: Probability = 0.07, Count = 1
h -> stride: Probability = 0.07, Count = 1
h -> pad: Probability = 0.07, Count = 1
h -> height_col: Probability = 0.07, Count = 1
h -> ,: Probability = 0.07, Count = 1
h_b -> *: Probability = 0.50, Count = 1
h_b -> b: Probability = 0.50, Count = 1
cpu_matrix_mult -> gpu_matrix_mult: Probability = 1.00, Count = 1
h_a -> a: Probability = 0.50, Count = 1
h_a -> =: Probability = 0.50, Count = 1
h_result -> }: Probability = 0.50, Count = 1
h_result -> c: Probability = 0.50, Count = 1
inline -> void: Probability = 1.00, Count = 1
MulMatrixOnCPU -> (: Probability = 1.00, Count = 1
matrixMulHost -> MatrixMulKernel: Probability = 1.00, Count = 1
h_M -> d_M: Probability = 1.00, Count = 1
h_P -> d_P: Probability = 1.00, Count = 1
h_N -> d_N: Probability = 1.00, Count = 1
Pvalue -> {: Probability = 1.00, Count = 1
c1 -> *: Probability = 0.22, Count = 2
c1 -> ,: Probability = 0.11, Count = 1
c1 -> blockIdx: Probability = 0.11, Count = 1
c1 -> ;: Probability = 0.11, Count = 1
c1 -> =: Probability = 0.11, Count = 1
c1 -> ): Probability = 0.11, Count = 1
c1 -> minc: Probability = 0.22, Count = 2
c2 -> }: Probability = 0.11, Count = 1
c2 -> x: Probability = 0.11, Count = 1
c2 -> *: Probability = 0.22, Count = 2
c2 -> c2: Probability = 0.11, Count = 1
c2 -> int: Probability = 0.11, Count = 1
c2 -> y: Probability = 0.11, Count = 1
c2 -> ): Probability = 0.11, Count = 1
c2 -> out: Probability = 0.11, Count = 1
r1 -> ,: Probability = 1.00, Count = 1
mmul_cpu -> mmul: Probability = 1.00, Count = 1
r2 -> c2: Probability = 0.50, Count = 1
r2 -> ): Probability = 0.50, Count = 1
Dot -> Kernel_Dot_reduction2: Probability = 1.00, Count = 1
LS -> Start: Probability = 1.00, Count = 1
Forwardsub_cpu -> Forwardsub: Probability = 1.00, Count = 1
Start -> ,: Probability = 0.50, Count = 1
Start -> (: Probability = 0.50, Count = 1
RES -> int: Probability = 0.11, Count = 1
RES -> ): Probability = 0.11, Count = 1
RES -> [: Probability = 0.22, Count = 2
RES -> -: Probability = 0.11, Count = 1
RES -> +: Probability = 0.11, Count = 1
RES -> RES: Probability = 0.11, Count = 1
RES -> ;: Probability = 0.11, Count = 1
RES -> IJ: Probability = 0.11, Count = 1
IJ -> {: Probability = 0.08, Count = 1
IJ -> (: Probability = 0.17, Count = 2
IJ -> RES: Probability = 0.08, Count = 1
IJ -> [: Probability = 0.08, Count = 1
IJ -> }: Probability = 0.08, Count = 1
IJ -> ]: Probability = 0.17, Count = 2
IJ -> ;: Probability = 0.08, Count = 1
IJ -> J: Probability = 0.08, Count = 1
IJ -> i: Probability = 0.08, Count = 1
IJ -> ): Probability = 0.08, Count = 1
NI -> LW: Probability = 0.20, Count = 1
NI -> *: Probability = 0.20, Count = 1
NI -> IJ: Probability = 0.20, Count = 1
NI -> ]: Probability = 0.20, Count = 1
NI -> RES: Probability = 0.20, Count = 1
LW -> int: Probability = 0.20, Count = 1
LW -> ,: Probability = 0.20, Count = 1
LW -> NJ: Probability = 0.20, Count = 1
LW -> Forwardsub: Probability = 0.20, Count = 1
LW -> Start: Probability = 0.20, Count = 1
NJ -> double: Probability = 0.25, Count = 1
NJ -> [: Probability = 0.25, Count = 1
NJ -> RES: Probability = 0.25, Count = 1
NJ -> (: Probability = 0.25, Count = 1
LPR -> RES: Probability = 0.50, Count = 1
LPR -> double: Probability = 0.50, Count = 1
J -> LPR: Probability = 0.25, Count = 1
J -> UE: Probability = 0.25, Count = 1
J -> =: Probability = 0.25, Count = 1
J -> NI: Probability = 0.25, Count = 1
column -> =: Probability = 0.04, Count = 1
column -> int: Probability = 0.04, Count = 1
column -> .: Probability = 0.11, Count = 3
column -> if: Probability = 0.04, Count = 1
column -> channel: Probability = 0.07, Count = 2
column -> column: Probability = 0.26, Count = 7
column -> blockIdx: Probability = 0.04, Count = 1
column -> ): Probability = 0.04, Count = 1
column -> ;: Probability = 0.04, Count = 1
column -> ]: Probability = 0.04, Count = 1
column -> +: Probability = 0.04, Count = 1
column -> index: Probability = 0.04, Count = 1
column -> (: Probability = 0.04, Count = 1
column -> for: Probability = 0.04, Count = 1
column -> f: Probability = 0.04, Count = 1
column -> element_c: Probability = 0.04, Count = 1
column -> y: Probability = 0.07, Count = 2
channel -> +: Probability = 0.06, Count = 1
channel -> ;: Probability = 0.06, Count = 1
channel -> .: Probability = 0.17, Count = 3
channel -> (: Probability = 0.06, Count = 1
channel -> =: Probability = 0.06, Count = 1
channel -> channel: Probability = 0.28, Count = 5
channel -> ,: Probability = 0.06, Count = 1
channel -> %: Probability = 0.06, Count = 1
channel -> height: Probability = 0.06, Count = 1
channel -> const: Probability = 0.06, Count = 1
channel -> step: Probability = 0.11, Count = 2
depth -> +: Probability = 0.11, Count = 1
depth -> int: Probability = 0.11, Count = 1
depth -> depth: Probability = 0.33, Count = 3
depth -> ]: Probability = 0.11, Count = 1
depth -> *: Probability = 0.11, Count = 1
depth -> unsigned: Probability = 0.11, Count = 1
depth -> long: Probability = 0.11, Count = 1
cpu_rows_dc_offset_remove_layer_kernel -> cuda_rows_dc_offset_remove_layer_kernel: Probability = 1.00, Count = 1
cpu_cross_correlate -> cuda_cross_correlate: Probability = 1.00, Count = 1
Isg -> Isg: Probability = 1.00, Count = 1
Iss -> Iss: Probability = 1.00, Count = 1
i2 -> y: Probability = 1.00, Count = 1
i1 -> y: Probability = 0.33, Count = 1
i1 -> ;: Probability = 0.33, Count = 1
i1 -> *: Probability = 0.33, Count = 1
gp -> ): Probability = 0.50, Count = 1
gp -> nnx: Probability = 0.50, Count = 1
sp -> float: Probability = 1.00, Count = 1
nnx -> .: Probability = 1.00, Count = 1
offset -> *: Probability = 0.50, Count = 3
offset -> =: Probability = 0.17, Count = 1
offset -> offset: Probability = 0.33, Count = 2
colorImage -> colorImage: Probability = 0.25, Count = 1
colorImage -> [: Probability = 0.75, Count = 3
columns -> columns: Probability = 0.67, Count = 2
columns -> *: Probability = 0.33, Count = 1
colorConvert -> colorConvert: Probability = 1.00, Count = 1
71 -> *: Probability = 1.00, Count = 1
grayImage -> grayImage: Probability = 1.00, Count = 2
grayValue -> =: Probability = 1.00, Count = 1
21 -> *: Probability = 1.00, Count = 1
07 -> *: Probability = 1.00, Count = 1
my_pixel -> {: Probability = 0.14, Count = 1
my_pixel -> image: Probability = 0.14, Count = 1
my_pixel -> +: Probability = 0.29, Count = 2
my_pixel -> =: Probability = 0.14, Count = 1
my_pixel -> threadIdx: Probability = 0.14, Count = 1
my_pixel -> ]: Probability = 0.14, Count = 1
init_image_array_CPU -> init_image_array_GPU: Probability = 1.00, Count = 1
image -> [: Probability = 0.22, Count = 2
image -> image: Probability = 0.11, Count = 1
image -> long: Probability = 0.11, Count = 1
image -> const: Probability = 0.33, Count = 3
image -> ,: Probability = 0.11, Count = 1
image -> image_c: Probability = 0.11, Count = 1
pixels_per_image -> pixels_per_image: Probability = 0.33, Count = 1
pixels_per_image -> .: Probability = 0.33, Count = 1
pixels_per_image -> ;: Probability = 0.33, Count = 1
x0 -> {: Probability = 0.20, Count = 1
x0 -> +: Probability = 0.40, Count = 2
x0 -> 1: Probability = 0.20, Count = 1
x0 -> ,: Probability = 0.20, Count = 1
dt -> ,: Probability = 0.20, Count = 1
dt -> *: Probability = 0.40, Count = 2
dt -> -: Probability = 0.20, Count = 1
dt -> 4: Probability = 0.20, Count = 1
x1 -> =: Probability = 0.33, Count = 1
x1 -> <: Probability = 0.33, Count = 1
x1 -> ,: Probability = 0.33, Count = 1
auto -> x: Probability = 0.33, Count = 1
auto -> *: Probability = 0.33, Count = 1
auto -> (: Probability = 0.33, Count = 1
diffusion -> diffusion: Probability = 1.00, Count = 1
compute_b_minus_Rx -> compute_b_minus_Rx: Probability = 1.00, Count = 1
neighbors -> blockIdx: Probability = 0.50, Count = 1
neighbors -> int: Probability = 0.50, Count = 1
meshStride -> *: Probability = 0.25, Count = 1
meshStride -> x: Probability = 0.25, Count = 1
meshStride -> int: Probability = 0.25, Count = 1
meshStride -> ,: Probability = 0.25, Count = 1
cotans -> cotans: Probability = 1.00, Count = 2
binary -> =: Probability = 0.25, Count = 1
binary -> <: Probability = 0.25, Count = 1
binary -> for: Probability = 0.25, Count = 1
binary -> *: Probability = 0.25, Count = 1
weights -> (: Probability = 0.20, Count = 1
weights -> float: Probability = 0.20, Count = 1
weights -> mean: Probability = 0.20, Count = 1
weights -> +: Probability = 0.20, Count = 1
weights -> *: Probability = 0.20, Count = 1
binarize_weights -> binarize_weights_kernel: Probability = 1.00, Count = 1
points -> __restrict__: Probability = 1.00, Count = 1
gather_points_kernel -> gather_points_kernel: Probability = 1.00, Count = 1
l -> <: Probability = 1.00, Count = 1
right -> right: Probability = 1.00, Count = 1
left -> left: Probability = 0.25, Count = 1
left -> right: Probability = 0.25, Count = 1
left -> right_columns: Probability = 0.25, Count = 1
left -> }: Probability = 0.25, Count = 1
cell -> +: Probability = 0.25, Count = 1
cell -> [: Probability = 0.25, Count = 1
cell -> ]: Probability = 0.25, Count = 1
cell -> <: Probability = 0.25, Count = 1
left_rows -> <: Probability = 0.50, Count = 1
left_rows -> left_rows: Probability = 0.50, Count = 1
matrix_mult -> gpu_matrix_mult: Probability = 1.00, Count = 1
shared_dimensions -> *: Probability = 0.33, Count = 1
shared_dimensions -> ,: Probability = 0.33, Count = 1
shared_dimensions -> shared_dimensions: Probability = 0.33, Count = 1
right_columns -> +: Probability = 0.17, Count = 1
right_columns -> cell: Probability = 0.17, Count = 1
right_columns -> row: Probability = 0.17, Count = 1
right_columns -> right_columns: Probability = 0.33, Count = 2
right_columns -> <: Probability = 0.17, Count = 1
result -> ;: Probability = 0.33, Count = 1
result -> +: Probability = 0.33, Count = 1
result -> result: Probability = 0.33, Count = 1
matrixMultiplication_cpu -> matrixMultiplication: Probability = 1.00, Count = 1
host_a -> dev_a: Probability = 1.00, Count = 1
host_c -> dev_c: Probability = 1.00, Count = 1
host_b -> dev_b: Probability = 1.00, Count = 1
col_b -> ,: Probability = 0.50, Count = 1
col_b -> =: Probability = 0.50, Count = 1
row_a -> ;: Probability = 0.50, Count = 1
row_a -> row_a: Probability = 0.50, Count = 1
col_a -> +: Probability = 1.00, Count = 1
End -> 1: Probability = 0.25, Count = 1
End -> i: Probability = 0.25, Count = 1
End -> IJ: Probability = 0.25, Count = 1
End -> -: Probability = 0.25, Count = 1
UE -> UE: Probability = 0.50, Count = 1
UE -> [: Probability = 0.50, Count = 1
Backwardsub -> Backwardsub: Probability = 1.00, Count = 1
U -> U: Probability = 0.50, Count = 1
U -> ]: Probability = 0.50, Count = 1
UN -> UN: Probability = 0.50, Count = 1
UN -> ): Probability = 0.50, Count = 1
convolution_cpu_1d -> convolution_gpu_1d_naive: Probability = 1.00, Count = 1
ELEMENT_INDEX -> 0f: Probability = 1.00, Count = 1
mask_size -> blockIdx: Probability = 0.50, Count = 1
mask_size -> ): Probability = 0.50, Count = 1
mask -> ,: Probability = 1.00, Count = 1
array_size -> ,: Probability = 1.00, Count = 1
MASK_RADIUS -> =: Probability = 1.00, Count = 1
numOfNucl -> *: Probability = 1.00, Count = 3
print -> ;: Probability = 1.00, Count = 1
RHO -> pa: Probability = 0.25, Count = 1
RHO -> (: Probability = 0.25, Count = 1
RHO -> blockDim: Probability = 0.25, Count = 1
RHO -> ;: Probability = 0.25, Count = 1
the -> stepSize: Probability = 1.00, Count = 1
rho -> ]: Probability = 0.20, Count = 1
rho -> ): Probability = 0.20, Count = 1
rho -> double: Probability = 0.20, Count = 1
rho -> .: Probability = 0.20, Count = 1
rho -> 0: Probability = 0.20, Count = 1
debug -> <: Probability = 0.25, Count = 1
debug -> blockDim: Probability = 0.25, Count = 1
debug -> dcopy: Probability = 0.25, Count = 1
debug -> .: Probability = 0.25, Count = 1
of -> pb: Probability = 1.00, Count = 1
▁ -> ;: Probability = 0.09, Count = 1
▁ -> +: Probability = 0.09, Count = 1
▁ -> stepSize: Probability = 0.09, Count = 1
▁ -> if: Probability = 0.09, Count = 1
▁ -> =: Probability = 0.09, Count = 1
▁ -> int: Probability = 0.09, Count = 1
▁ -> [: Probability = 0.18, Count = 2
▁ -> pb: Probability = 0.09, Count = 1
▁ -> ]: Probability = 0.09, Count = 1
▁ -> blockDim: Probability = 0.09, Count = 1
" -> 0: Probability = 0.33, Count = 1
" -> x: Probability = 0.67, Count = 2
\ -> ): Probability = 0.40, Count = 2
\ -> stepSize: Probability = 0.20, Count = 1
\ -> dcopy: Probability = 0.20, Count = 1
\ -> if: Probability = 0.20, Count = 1
line -> pb: Probability = 1.00, Count = 1
getRho -> getRho_cuda: Probability = 1.00, Count = 1
psi -> ;: Probability = 0.20, Count = 1
psi -> ,: Probability = 0.20, Count = 1
psi -> *: Probability = 0.60, Count = 3
last -> dcopy: Probability = 0.50, Count = 1
last -> if: Probability = 0.50, Count = 1
occNo -> for: Probability = 0.25, Count = 1
occNo -> rho: Probability = 0.25, Count = 1
occNo -> dcopy: Probability = 0.25, Count = 1
occNo -> *: Probability = 0.25, Count = 1
DEBUG -> *: Probability = 1.00, Count = 1
This -> dcopy: Probability = 1.00, Count = 1
printf -> =: Probability = 1.00, Count = 1
is -> pa: Probability = 1.00, Count = 1
colLog2SumExp2_cpu -> colLog2SumExp2Kernel: Probability = 1.00, Count = 1
maximum -> [: Probability = 1.00, Count = 1
batchInJump -> batchOutJump: Probability = 0.25, Count = 1
batchInJump -> int: Probability = 0.25, Count = 1
batchInJump -> batchInJump: Probability = 0.25, Count = 1
batchInJump -> ;: Probability = 0.25, Count = 1
inputLength -> char: Probability = 0.33, Count = 1
inputLength -> batchInJump: Probability = 0.33, Count = 1
inputLength -> inputLength: Probability = 0.33, Count = 1
indexInBatch -> indexInBatch: Probability = 0.50, Count = 1
indexInBatch -> =: Probability = 0.50, Count = 1
outputlength -> =: Probability = 0.33, Count = 2
outputlength -> outputlength: Probability = 0.17, Count = 1
outputlength -> char: Probability = 0.17, Count = 1
outputlength -> batchInJump: Probability = 0.17, Count = 1
outputlength -> [: Probability = 0.17, Count = 1
batchOutJump -> =: Probability = 1.00, Count = 2
bitPrune_cpu -> bitPrune: Probability = 1.00, Count = 1
frontPrune -> batchOutJump: Probability = 0.50, Count = 1
frontPrune -> frontPrune: Probability = 0.50, Count = 1
indexOutBatch -> ;: Probability = 0.50, Count = 1
indexOutBatch -> char: Probability = 0.50, Count = 1
frontJump -> frontJump: Probability = 0.50, Count = 1
frontJump -> out: Probability = 0.50, Count = 1
in -> 0: Probability = 0.14, Count = 1
in -> in: Probability = 0.29, Count = 2
in -> d_in_data: Probability = 0.14, Count = 1
in -> ,: Probability = 0.14, Count = 1
in -> bit1: Probability = 0.14, Count = 1
in -> ;: Probability = 0.14, Count = 1
residual -> residual: Probability = 1.00, Count = 1
diag -> *: Probability = 1.00, Count = 1
out_index -> id: Probability = 0.50, Count = 1
out_index -> +: Probability = 0.50, Count = 1
forward_avgpool_layer -> forward_avgpool_layer_kernel: Probability = 1.00, Count = 1
in_index -> h: Probability = 1.00, Count = 1
w -> c: Probability = 0.08, Count = 1
w -> i: Probability = 0.08, Count = 1
w -> {: Probability = 0.17, Count = 2
w -> w: Probability = 0.08, Count = 1
w -> ;: Probability = 0.08, Count = 1
w -> x: Probability = 0.08, Count = 1
w -> stride: Probability = 0.08, Count = 1
w -> const: Probability = 0.08, Count = 1
w -> height_col: Probability = 0.08, Count = 1
w -> ,: Probability = 0.08, Count = 1
w -> int: Probability = 0.08, Count = 1
imageH -> ,: Probability = 0.50, Count = 1
imageH -> blockDim: Probability = 0.50, Count = 1
convolutionColumnCPU -> kernel_columns: Probability = 1.00, Count = 1
h_Dst -> *: Probability = 1.00, Count = 1
h_Filter -> float: Probability = 1.00, Count = 1
h_Src -> float: Probability = 1.00, Count = 1
filterR -> ,: Probability = 1.00, Count = 1
imageW -> ,: Probability = 1.00, Count = 1
rowsA -> *: Probability = 0.33, Count = 1
rowsA -> rowsA: Probability = 0.33, Count = 1
rowsA -> =: Probability = 0.33, Count = 1
colsB -> ;: Probability = 0.25, Count = 1
colsB -> blockDim: Probability = 0.25, Count = 1
colsB -> colsB: Probability = 0.25, Count = 1
colsB -> tIndx: Probability = 0.25, Count = 1
matrMult -> gpuMatrMultD: Probability = 1.00, Count = 1
colsA -> colsA: Probability = 0.25, Count = 1
colsA -> Cd: Probability = 0.25, Count = 1
colsA -> int: Probability = 0.25, Count = 1
colsA -> tIndy: Probability = 0.25, Count = 1
add_sources_d -> add_sources_d: Probability = 1.00, Count = 1
model -> wfp: Probability = 0.50, Count = 1
model -> model: Probability = 0.50, Count = 1
sources_x -> threadIdx: Probability = 1.00, Count = 1
it -> ]: Probability = 1.00, Count = 1
wfp -> wfp: Probability = 0.50, Count = 1
wfp -> model: Probability = 0.50, Count = 1
sources_z -> it: Probability = 1.00, Count = 1
nt -> =: Probability = 1.00, Count = 1
nz -> b: Probability = 1.00, Count = 1
source_amplitude -> source_amplitude: Probability = 1.00, Count = 1
variance -> *: Probability = 0.33, Count = 1
variance -> {: Probability = 0.33, Count = 1
variance -> .: Probability = 0.33, Count = 1
spatial -> (: Probability = 0.11, Count = 1
spatial -> k: Probability = 0.22, Count = 2
spatial -> int: Probability = 0.11, Count = 1
spatial -> -: Probability = 0.11, Count = 1
spatial -> +: Probability = 0.11, Count = 1
spatial -> <: Probability = 0.11, Count = 1
spatial -> index: Probability = 0.11, Count = 1
spatial -> .: Probability = 0.11, Count = 1
filters -> ): Probability = 0.14, Count = 1
filters -> filters: Probability = 0.43, Count = 3
filters -> 0: Probability = 0.14, Count = 1
filters -> int: Probability = 0.14, Count = 1
filters -> ,: Probability = 0.14, Count = 1
variance_cpu -> variance_kernel: Probability = 1.00, Count = 1
grad_y_cpu -> grad_y: Probability = 1.00, Count = 1
uidx -> y: Probability = 0.14, Count = 1
uidx -> ;: Probability = 0.14, Count = 1
uidx -> size2d: Probability = 0.14, Count = 1
uidx -> z: Probability = 0.14, Count = 1
uidx -> rows: Probability = 0.14, Count = 1
uidx -> =: Probability = 0.14, Count = 1
uidx -> cols: Probability = 0.14, Count = 1
size2d -> z: Probability = 0.18, Count = 2
size2d -> size2d: Probability = 0.09, Count = 1
size2d -> ;: Probability = 0.09, Count = 1
size2d -> =: Probability = 0.09, Count = 1
size2d -> blockIdx: Probability = 0.09, Count = 1
size2d -> y: Probability = 0.18, Count = 2
size2d -> blockDim: Probability = 0.18, Count = 2
size2d -> grad_x: Probability = 0.09, Count = 1
grad_x_cpu -> grad_x: Probability = 1.00, Count = 1
GraphSum_forward -> cuda_GraphSum_forward_kernel: Probability = 1.00, Count = 1
R -> ): Probability = 0.50, Count = 1
R -> gray: Probability = 0.50, Count = 1
113 -> +: Probability = 1.00, Count = 1
gray -> 2: Probability = 1.00, Count = 1
apply_grayscale -> apply_grayscale: Probability = 1.00, Count = 1
grayimg -> image: Probability = 1.00, Count = 1
G -> =: Probability = 0.33, Count = 1
G -> *: Probability = 0.33, Count = 1
G -> ]: Probability = 0.33, Count = 1
604 -> (: Probability = 1.00, Count = 1
307 -> unsigned: Probability = 1.00, Count = 1
max_coordinate -> max_coordinate: Probability = 1.00, Count = 1
getOffsetBox_cpu -> getOffsetBox: Probability = 1.00, Count = 1
before_nms_boxes -> int: Probability = 0.50, Count = 1
before_nms_boxes -> ,: Probability = 0.50, Count = 1
clsIndex -> clsIndex: Probability = 1.00, Count = 1
batchSize -> i: Probability = 0.11, Count = 1
batchSize -> tid: Probability = 0.22, Count = 2
batchSize -> batchSize: Probability = 0.11, Count = 1
batchSize -> int: Probability = 0.33, Count = 3
batchSize -> .: Probability = 0.11, Count = 1
batchSize -> ;: Probability = 0.11, Count = 1
numPerbatch -> ;: Probability = 0.50, Count = 1
numPerbatch -> *: Probability = 0.50, Count = 1
M -> M: Probability = 0.25, Count = 1
M -> =: Probability = 0.25, Count = 1
M -> Md: Probability = 0.25, Count = 1
M -> W_grid: Probability = 0.25, Count = 1
e -> N: Probability = 0.20, Count = 1
e -> =: Probability = 0.20, Count = 1
e -> *: Probability = 0.20, Count = 1
e -> ;: Probability = 0.20, Count = 1
e -> +: Probability = 0.20, Count = 1
host_inputArray1 -> eachElement: Probability = 0.50, Count = 1
host_inputArray1 -> host_inputArray1: Probability = 0.50, Count = 1
host_inputArray2 -> host_inputArray2: Probability = 0.50, Count = 1
host_inputArray2 -> row: Probability = 0.50, Count = 1
sgemm_kernelCPU -> sgemm_kernelGPU: Probability = 1.00, Count = 1
K -> [: Probability = 0.14, Count = 1
K -> K: Probability = 0.14, Count = 1
K -> column: Probability = 0.14, Count = 1
K -> Pd: Probability = 0.14, Count = 1
K -> ;: Probability = 0.14, Count = 1
K -> threadIdx: Probability = 0.14, Count = 1
K -> ,: Probability = 0.14, Count = 1
beta -> row: Probability = 0.50, Count = 1
beta -> x: Probability = 0.50, Count = 1
element_c -> =: Probability = 0.33, Count = 1
element_c -> .: Probability = 0.33, Count = 1
element_c -> *: Probability = 0.33, Count = 1
host_inputArray3 -> host_inputArray3: Probability = 1.00, Count = 1
GraphSum_backward -> cuda_GraphSum_backward_kernel: Probability = 1.00, Count = 1
in_grad -> d_in_grad: Probability = 1.00, Count = 1
out_grad -> d_out_grad: Probability = 1.00, Count = 1
CDFfunction -> CDFfunction: Probability = 1.00, Count = 1
median -> median: Probability = 1.00, Count = 1
pixelsPerFrame -> threadIdx: Probability = 0.50, Count = 1
pixelsPerFrame -> pixel: Probability = 0.50, Count = 1
pixel -> [: Probability = 0.11, Count = 1
pixel -> .: Probability = 0.44, Count = 4
pixel -> *: Probability = 0.11, Count = 1
pixel -> currentFrame: Probability = 0.11, Count = 1
pixel -> pixel: Probability = 0.11, Count = 1
pixel -> =: Probability = 0.11, Count = 1
stdvLogNormalFrame -> stdvLogNormalFrame: Probability = 1.00, Count = 1
MeanLogNormalFrame -> char: Probability = 1.00, Count = 1
newvalue -> -: Probability = 1.00, Count = 1
currentFrame -> ): Probability = 0.25, Count = 1
currentFrame -> int: Probability = 0.25, Count = 1
currentFrame -> pixelsPerFrame: Probability = 0.25, Count = 1
currentFrame -> ,: Probability = 0.25, Count = 1
width_N -> width_blk: Probability = 0.50, Count = 1
width_N -> tx: Probability = 0.50, Count = 1
mul -> matrixmul: Probability = 1.00, Count = 1
height_M -> float: Probability = 0.25, Count = 1
height_M -> ,: Probability = 0.25, Count = 1
height_M -> width_N: Probability = 0.25, Count = 1
height_M -> width: Probability = 0.25, Count = 1
width_M -> m: Probability = 1.00, Count = 1
softmax_x_ent_cpu -> softmax_kernel: Probability = 1.00, Count = 1
t -> *: Probability = 1.00, Count = 1
normalize_img -> normalizacion: Probability = 0.50, Count = 1
normalize_img -> __global__: Probability = 0.50, Count = 1
calloc -> ;: Probability = 1.00, Count = 1
image_size -> ,: Probability = 0.33, Count = 1
image_size -> <: Probability = 0.33, Count = 1
image_size -> =: Probability = 0.33, Count = 1
D -> i: Probability = 0.25, Count = 1
D -> ,: Probability = 0.50, Count = 2
D -> 0: Probability = 0.25, Count = 1
bands -> image_size: Probability = 0.50, Count = 1
bands -> ): Probability = 0.50, Count = 1
sizeof -> .: Probability = 1.00, Count = 1
featureSize -> featureSize: Probability = 1.00, Count = 1
permuteData_cpu -> permuteData: Probability = 1.00, Count = 1
devideNum -> (: Probability = 0.50, Count = 1
devideNum -> devideNum: Probability = 0.50, Count = 1
priorNum -> priorNum: Probability = 0.50, Count = 1
priorNum -> s: Probability = 0.50, Count = 1
real -> x: Probability = 1.00, Count = 1
si -> ,: Probability = 0.50, Count = 2
si -> q_i: Probability = 0.25, Count = 1
si -> sr: Probability = 0.25, Count = 1
cpuSimpleCorrelator -> cudaSimpleCorrelator: Probability = 1.00, Count = 1
xi -> xi: Probability = 1.00, Count = 2
uLength -> =: Probability = 0.50, Count = 1
uLength -> ): Probability = 0.50, Count = 1
sr -> ,: Probability = 0.50, Count = 1
sr -> sr: Probability = 0.50, Count = 1
imag -> x: Probability = 1.00, Count = 1
sLength -> uLength: Probability = 1.00, Count = 1
xq -> xq: Probability = 1.00, Count = 2
convertKinectDisparityToRegularDisparity_cpu -> convertKinectDisparityToRegularDisparity_kernel: Probability = 1.00, Count = 1
d_regularDisparity -> d_regularDisparity: Probability = 1.00, Count = 1
d_regularDisparityPitch -> d_regularDisparityPitch: Probability = 1.00, Count = 1
d_KinectDisparityPitch -> .: Probability = 0.50, Count = 1
d_KinectDisparityPitch -> ,: Probability = 0.50, Count = 1
d_KinectDisparity -> d_KinectDisparity: Probability = 1.00, Count = 1
sampleIndex -> filterLength: Probability = 0.25, Count = 1
sampleIndex -> =: Probability = 0.25, Count = 1
sampleIndex -> index: Probability = 0.25, Count = 1
sampleIndex -> j: Probability = 0.25, Count = 1
runFilterCpu -> runFilterCuda: Probability = 1.00, Count = 1
I -> I: Probability = 1.00, Count = 1
Q -> Q: Probability = 0.50, Count = 1
Q -> ,: Probability = 0.50, Count = 1
samplesLength -> samplesLength: Probability = 1.00, Count = 1
filterLength -> +: Probability = 1.00, Count = 1
convLength -> 1: Probability = 0.50, Count = 1
convLength -> =: Probability = 0.50, Count = 1
filtered_I -> ;: Probability = 1.00, Count = 1
filtered_Q -> >: Probability = 1.00, Count = 1
l2normalize_cpu -> {: Probability = 0.33, Count = 1
l2normalize_cpu -> l2normalize_kernel: Probability = 0.33, Count = 1
l2normalize_cpu -> ,: Probability = 0.33, Count = 1
dx -> ,: Probability = 1.00, Count = 1
filtSig -> blockDim: Probability = 1.00, Count = 1
distanceMatCalc -> distanceMatCalc: Probability = 1.00, Count = 1
patchSize -> patchSize: Probability = 1.00, Count = 1
data_j -> availablePixels: Probability = 1.00, Count = 1
data_i -> (: Probability = 1.00, Count = 1
distMat -> .: Probability = 1.00, Count = 1
minc -> ,: Probability = 1.00, Count = 2
sample -> stride: Probability = 0.20, Count = 1
sample -> blockIdx: Probability = 0.20, Count = 1
sample -> x: Probability = 0.20, Count = 1
sample -> .: Probability = 0.40, Count = 2
h1 -> *: Probability = 0.25, Count = 2
h1 -> gridDim: Probability = 0.12, Count = 1
h1 -> minh: Probability = 0.25, Count = 2
h1 -> ,: Probability = 0.12, Count = 1
h1 -> =: Probability = 0.12, Count = 1
h1 -> int: Probability = 0.12, Count = 1
minh -> size: Probability = 0.50, Count = 1
minh -> ,: Probability = 0.50, Count = 1
h2 -> int: Probability = 0.14, Count = 1
h2 -> sample: Probability = 0.14, Count = 1
h2 -> float: Probability = 0.14, Count = 1
h2 -> x: Probability = 0.14, Count = 1
h2 -> .: Probability = 0.14, Count = 1
h2 -> ,: Probability = 0.14, Count = 1
h2 -> id: Probability = 0.14, Count = 1
shortcut_kernel_cpu -> shortcut_kernel: Probability = 1.00, Count = 1
w1 -> batch: Probability = 0.12, Count = 1
w1 -> {: Probability = 0.12, Count = 1
w1 -> w2: Probability = 0.12, Count = 1
w1 -> +: Probability = 0.12, Count = 1
w1 -> minw: Probability = 0.25, Count = 2
w1 -> int: Probability = 0.12, Count = 1
w1 -> .: Probability = 0.12, Count = 1
w2 -> int: Probability = 0.09, Count = 1
w2 -> ,: Probability = 0.27, Count = 3
w2 -> stride: Probability = 0.09, Count = 1
w2 -> *: Probability = 0.09, Count = 1
w2 -> id: Probability = 0.09, Count = 1
w2 -> float: Probability = 0.09, Count = 1
w2 -> .: Probability = 0.09, Count = 1
w2 -> +: Probability = 0.09, Count = 1
w2 -> =: Probability = 0.09, Count = 1
minw -> ,: Probability = 1.00, Count = 1
dot -> return: Probability = 0.25, Count = 1
dot -> index: Probability = 0.25, Count = 1
dot -> .: Probability = 0.50, Count = 2
d -> d: Probability = 1.00, Count = 1
k_adam_kernel -> k_adam_kernel: Probability = 1.00, Count = 1
learning_rate -> (: Probability = 1.00, Count = 1
eps -> int: Probability = 1.00, Count = 1
v -> v: Probability = 1.00, Count = 1
beta1_tpower -> =: Probability = 1.00, Count = 1
max_size -> ,: Probability = 0.33, Count = 1
max_size -> max_size: Probability = 0.33, Count = 1
max_size -> i: Probability = 0.33, Count = 1
beta2_tpower -> 8: Probability = 1.00, Count = 1
8 -> .: Probability = 0.33, Count = 1
8 -> n: Probability = 0.33, Count = 1
8 -> return: Probability = 0.33, Count = 1
beta2 -> float: Probability = 1.00, Count = 1
beta1 -> float: Probability = 1.00, Count = 1
1e -> =: Probability = 1.00, Count = 1
W -> float: Probability = 0.50, Count = 1
W -> W_grid: Probability = 0.50, Count = 1
convLayer_forward -> ConvLayerForward_Kernel: Probability = 1.00, Count = 1
H_out -> =: Probability = 0.50, Count = 1
H_out -> blockIdx: Probability = 0.50, Count = 1
W_out -> z: Probability = 1.00, Count = 1
Wk -> Y: Probability = 1.00, Count = 1
q -> int: Probability = 1.00, Count = 1
H -> *: Probability = 0.50, Count = 1
H -> .: Probability = 0.50, Count = 1
opL23_cpu -> opL23: Probability = 1.00, Count = 1
vec1 -> vec1: Probability = 1.00, Count = 2
forward -> ,: Probability = 1.00, Count = 1
upsample_cpu -> upsample_kernel: Probability = 1.00, Count = 1
rgb2yuv_kernel -> rgb2yuv_kernel: Probability = 1.00, Count = 1
gpu_img_in_r -> gpu_img_in_r: Probability = 1.00, Count = 1
gpu_img_in_b -> *: Probability = 1.00, Count = 1
gpu_img_in_g -> gpu_img_in_g: Probability = 1.00, Count = 1
gpu_img_out_v -> (: Probability = 1.00, Count = 1
gpu_img_out_y -> ;: Probability = 1.00, Count = 1
img_size -> img_size: Probability = 0.67, Count = 2
img_size -> int: Probability = 0.33, Count = 1
gpu_img_out_u -> threadIdx: Probability = 1.00, Count = 1
getDRho -> getDRho_cuda: Probability = 1.00, Count = 1
drho -> dcopy: Probability = 0.10, Count = 1
drho -> x: Probability = 0.30, Count = 3
drho -> ]: Probability = 0.20, Count = 2
drho -> (: Probability = 0.10, Count = 1
drho -> ;: Probability = 0.10, Count = 1
drho -> extern: Probability = 0.10, Count = 1
drho -> idx: Probability = 0.10, Count = 1
dpsi -> occNo: Probability = 1.00, Count = 1
opL12_cpu -> opL12: Probability = 1.00, Count = 1
cpuBYUSimplified -> cudaBYUSimplified: Probability = 1.00, Count = 1
r_i -> float: Probability = 1.00, Count = 1
realPart -> float: Probability = 1.00, Count = 1
imagPart -> realPart: Probability = 1.00, Count = 1
q_i -> ,: Probability = 1.00, Count = 1
Lq -> x: Probability = 1.00, Count = 1
q_q -> ,: Probability = 1.00, Count = 1
uSum -> float: Probability = 1.00, Count = 1
r_q -> ,: Probability = 1.00, Count = 1
shortcut_cpu -> shortcut_kernel: Probability = 1.00, Count = 1
assert -> *: Probability = 0.40, Count = 2
assert -> ;: Probability = 0.20, Count = 1
assert -> +: Probability = 0.20, Count = 1
assert -> threadIdx: Probability = 0.20, Count = 1
s2 -> blockIdx: Probability = 1.00, Count = 1
s1 -> ,: Probability = 1.00, Count = 1
scores_out -> *: Probability = 0.14, Count = 1
scores_out -> ,: Probability = 0.29, Count = 2
scores_out -> int: Probability = 0.14, Count = 1
scores_out -> boxes_out: Probability = 0.14, Count = 1
scores_out -> float: Probability = 0.29, Count = 2
scores -> scores: Probability = 1.00, Count = 1
labels -> labels: Probability = 1.00, Count = 1
get_before_nms_data_cpu -> get_before_nms_data: Probability = 1.00, Count = 1
labels_out -> {: Probability = 1.00, Count = 1
boxes -> boxes: Probability = 1.00, Count = 1
boxes_out -> labels_out: Probability = 0.50, Count = 1
boxes_out -> =: Probability = 0.50, Count = 1
ksize -> const: Probability = 0.08, Count = 1
ksize -> blockIdx: Probability = 0.08, Count = 1
ksize -> blockDim: Probability = 0.15, Count = 2
ksize -> index: Probability = 0.15, Count = 2
ksize -> x: Probability = 0.08, Count = 1
ksize -> ,: Probability = 0.08, Count = 1
ksize -> height_col: Probability = 0.08, Count = 1
ksize -> stride: Probability = 0.08, Count = 1
ksize -> .: Probability = 0.08, Count = 1
ksize -> int: Probability = 0.08, Count = 1
ksize -> for: Probability = 0.08, Count = 1
im2col_cpu -> im2col_gpu_kernel: Probability = 1.00, Count = 1
data_im -> n: Probability = 0.50, Count = 1
data_im -> ,: Probability = 0.50, Count = 1
channels -> float: Probability = 0.67, Count = 2
channels -> data_col: Probability = 0.33, Count = 1
channels_col -> index: Probability = 0.33, Count = 1
channels_col -> float: Probability = 0.33, Count = 1
channels_col -> ): Probability = 0.33, Count = 1
pad -> const: Probability = 0.20, Count = 2
pad -> data_im: Probability = 0.10, Count = 1
pad -> ,: Probability = 0.20, Count = 2
pad -> data_col: Probability = 0.10, Count = 1
pad -> ;: Probability = 0.10, Count = 1
pad -> index: Probability = 0.10, Count = 1
pad -> +: Probability = 0.10, Count = 1
pad -> *: Probability = 0.10, Count = 1
data_col -> int: Probability = 0.33, Count = 1
data_col -> pad: Probability = 0.33, Count = 1
data_col -> n: Probability = 0.33, Count = 1
height_col -> const: Probability = 0.50, Count = 1
height_col -> blockIdx: Probability = 0.50, Count = 1
width_col -> ,: Probability = 0.50, Count = 1
width_col -> (: Probability = 0.50, Count = 1
inputIndex -> inputIndex: Probability = 1.00, Count = 1
classNum -> ): Probability = 1.00, Count = 1
getTopkNum -> getTopkNum: Probability = 1.00, Count = 1
classIndex -> batchSize: Probability = 1.00, Count = 1
anchorIndex -> int: Probability = 1.00, Count = 1
inputScore -> inputScore: Probability = 1.00, Count = 1
totalScoreNum -> .: Probability = 1.00, Count = 1
outputIndex -> classIndex: Probability = 1.00, Count = 1
outputScore -> outputScore: Probability = 1.00, Count = 1
threshold -> ,: Probability = 1.00, Count = 1
Delta -> .: Probability = 0.50, Count = 1
Delta -> >: Probability = 0.50, Count = 1
xMid -> .: Probability = 1.00, Count = 1
055846456f -> (: Probability = 1.00, Count = 1
frames -> *: Probability = 0.50, Count = 1
frames -> frames: Probability = 0.50, Count = 1
fractal_cpu -> fractal: Probability = 1.00, Count = 1
frame -> -: Probability = 0.50, Count = 1
frame -> float: Probability = 0.50, Count = 1
yMid -> width: Probability = 0.33, Count = 1
yMid -> const: Probability = 0.33, Count = 1
yMid -> =: Probability = 0.33, Count = 1
668311119f -> return: Probability = 1.00, Count = 1
powf -> ;: Probability = 1.00, Count = 1
00304f -> *: Probability = 1.00, Count = 1
pic -> pic: Probability = 1.00, Count = 1
975f -> =: Probability = 1.00, Count = 1
0x01 -> [: Probability = 1.00, Count = 1
bit1 -> <: Probability = 1.00, Count = 1
bit8Channels_cpu -> bit8Channels: Probability = 1.00, Count = 1
firstIndexToGrab -> (: Probability = 0.20, Count = 1
firstIndexToGrab -> char: Probability = 0.20, Count = 1
firstIndexToGrab -> 0x01: Probability = 0.20, Count = 1
firstIndexToGrab -> x: Probability = 0.20, Count = 1
firstIndexToGrab -> +: Probability = 0.20, Count = 1
bit0 -> ;: Probability = 1.00, Count = 1
dist -> zq: Probability = 0.50, Count = 1
dist -> x: Probability = 0.50, Count = 1
max_dist -> 3: Probability = 0.33, Count = 1
max_dist -> blockDim: Probability = 0.33, Count = 1
max_dist -> x: Probability = 0.33, Count = 1
1000000000 -> ;: Probability = 0.25, Count = 1
1000000000 -> x: Probability = 0.50, Count = 2
1000000000 -> xp: Probability = 0.25, Count = 1
num_points -> float: Probability = 0.50, Count = 1
num_points -> P: Probability = 0.50, Count = 1
q_points -> idx: Probability = 1.00, Count = 1
P -> Q: Probability = 1.00, Count = 1
Match -> (: Probability = 1.00, Count = 1
col2im_cpu -> col2im_gpu_kernel: Probability = 1.00, Count = 1
gpu_img_in_u -> gpu_img_in_u: Probability = 1.00, Count = 1
gpu_img_out_b -> *: Probability = 1.00, Count = 1
rt2 -> *: Probability = 0.50, Count = 1
rt2 -> +: Probability = 0.50, Count = 1
gpu_img_in_y -> gpu_img_in_v: Probability = 0.50, Count = 1
gpu_img_in_y -> gpu_img_in_y: Probability = 0.50, Count = 1
gt -> ,: Probability = 1.00, Count = 1
gpu_img_out_r -> ,: Probability = 1.00, Count = 1
rt -> ;: Probability = 0.33, Count = 1
rt -> blockDim: Probability = 0.33, Count = 1
rt -> +: Probability = 0.33, Count = 1
gt2 -> *: Probability = 0.50, Count = 1
gt2 -> .: Probability = 0.50, Count = 1
yuv2rgb_kernel -> yuv2rgb_kernel: Probability = 1.00, Count = 1
bt2 -> *: Probability = 0.50, Count = 1
bt2 -> +: Probability = 0.50, Count = 1
gpu_img_out_g -> gpu_img_out_r: Probability = 1.00, Count = 1
bt -> gpu_img_out_r: Probability = 0.50, Count = 1
bt -> ,: Probability = 0.50, Count = 1
gpu_img_in_v -> gpu_img_in_v: Probability = 1.00, Count = 1
get_boxes_for_nms_cpu -> offset: Probability = 0.50, Count = 1
get_boxes_for_nms_cpu -> get_boxes_for_nms: Probability = 0.50, Count = 1
boxes_before_nms -> boxes_before_nms: Probability = 1.00, Count = 4
boxes_for_nms -> boxes_for_nms: Probability = 1.00, Count = 1
mult -> int: Probability = 0.60, Count = 3
mult -> ,: Probability = 0.40, Count = 2
eltwise_cpu -> eltwise_kernel: Probability = 1.00, Count = 1
locData -> locData: Probability = 0.50, Count = 1
locData -> ,: Probability = 0.50, Count = 1
anchor -> i: Probability = 0.25, Count = 1
anchor -> -: Probability = 0.25, Count = 1
anchor -> anchor: Probability = 0.25, Count = 1
anchor -> +: Probability = 0.25, Count = 1
decode_cpu -> decode: Probability = 1.00, Count = 1
scaleClamp -> scaleClamp: Probability = 1.00, Count = 1
anchorW -> anchor: Probability = 1.00, Count = 1
predictBox -> predictBox: Probability = 1.00, Count = 1
nlf_down_forward_cpu -> nlf_down_forward: Probability = 1.00, Count = 1
top_data -> return: Probability = 0.25, Count = 1
top_data -> top_data: Probability = 0.50, Count = 2
top_data -> ;: Probability = 0.25, Count = 1
wsize -> =: Probability = 0.17, Count = 1
wsize -> .: Probability = 0.17, Count = 1
wsize -> wsize: Probability = 0.17, Count = 1
wsize -> for: Probability = 0.17, Count = 1
wsize -> const: Probability = 0.17, Count = 1
wsize -> top_data: Probability = 0.17, Count = 1
step -> row: Probability = 0.07, Count = 1
step -> step: Probability = 0.21, Count = 3
step -> /: Probability = 0.14, Count = 2
step -> *: Probability = 0.14, Count = 2
step -> +: Probability = 0.07, Count = 1
step -> fbase: Probability = 0.07, Count = 1
step -> const: Probability = 0.07, Count = 1
step -> int: Probability = 0.07, Count = 1
step -> =: Probability = 0.14, Count = 2
temp_diff -> temp_diff: Probability = 0.50, Count = 1
temp_diff -> .: Probability = 0.50, Count = 1
nlf_filter_left_backward_cpu -> nlf_filter_left_backward: Probability = 1.00, Count = 1
filters_diff -> float: Probability = 0.11, Count = 1
filters_diff -> int: Probability = 0.11, Count = 1
filters_diff -> index: Probability = 0.11, Count = 1
filters_diff -> const: Probability = 0.22, Count = 2
filters_diff -> height: Probability = 0.11, Count = 1
filters_diff -> filters_diff: Probability = 0.11, Count = 1
filters_diff -> width: Probability = 0.11, Count = 1
filters_diff -> channel: Probability = 0.11, Count = 1
bottom_data -> bottom_data: Probability = 1.00, Count = 2
nlf_filter_down_backward_cpu -> nlf_filter_down_backward: Probability = 1.00, Count = 1
fbase -> index: Probability = 0.50, Count = 1
fbase -> channel: Probability = 0.50, Count = 1
nlf_up_forward_cpu -> nlf_up_forward: Probability = 1.00, Count = 1
