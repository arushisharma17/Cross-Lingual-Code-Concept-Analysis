{ -> data: Probability = 0.00, Count = 1
{ -> {: Probability = 0.53, Count = 241
{ -> array: Probability = 0.00, Count = 2
{ -> arr: Probability = 0.00, Count = 1
{ -> }: Probability = 0.03, Count = 14
{ -> if: Probability = 0.05, Count = 22
{ -> mat: Probability = 0.00, Count = 1
{ -> ;: Probability = 0.04, Count = 20
{ -> c: Probability = 0.01, Count = 6
{ -> vec_out: Probability = 0.00, Count = 1
{ -> buf: Probability = 0.00, Count = 1
{ -> z: Probability = 0.00, Count = 2
{ -> C: Probability = 0.00, Count = 1
{ -> result: Probability = 0.00, Count = 1
{ -> d_out: Probability = 0.01, Count = 5
{ -> float: Probability = 0.02, Count = 7
{ -> devSpeed: Probability = 0.00, Count = 1
{ -> A: Probability = 0.00, Count = 1
{ -> g_data: Probability = 0.00, Count = 2
{ -> prA: Probability = 0.00, Count = 1
{ -> int: Probability = 0.04, Count = 20
{ -> for: Probability = 0.02, Count = 9
{ -> g_out: Probability = 0.00, Count = 1
{ -> device_output: Probability = 0.00, Count = 1
{ -> (: Probability = 0.01, Count = 3
{ -> mx: Probability = 0.00, Count = 1
{ -> return: Probability = 0.01, Count = 3
{ -> sxz: Probability = 0.00, Count = 1
{ -> idx: Probability = 0.01, Count = 3
{ -> [: Probability = 0.00, Count = 2
{ -> ): Probability = 0.02, Count = 7
{ -> FFT: Probability = 0.00, Count = 1
{ -> temp: Probability = 0.01, Count = 4
{ -> unsigned: Probability = 0.00, Count = 1
{ -> 2: Probability = 0.00, Count = 1
{ -> p: Probability = 0.00, Count = 1
{ -> devMat: Probability = 0.00, Count = 1
{ -> circ: Probability = 0.00, Count = 1
{ -> pint: Probability = 0.00, Count = 1
{ -> size: Probability = 0.00, Count = 1
{ -> =: Probability = 0.01, Count = 5
{ -> +: Probability = 0.01, Count = 4
{ -> edad: Probability = 0.00, Count = 1
{ -> sum: Probability = 0.01, Count = 5
{ -> r: Probability = 0.00, Count = 2
{ -> pixelNum: Probability = 0.00, Count = 1
{ -> 0: Probability = 0.01, Count = 3
{ -> *: Probability = 0.00, Count = 2
{ -> double: Probability = 0.00, Count = 2
{ -> s: Probability = 0.00, Count = 1
{ -> X: Probability = 0.00, Count = 2
{ -> Pvalue: Probability = 0.00, Count = 2
{ -> id: Probability = 0.00, Count = 1
{ -> image: Probability = 0.00, Count = 1
{ -> ret: Probability = 0.00, Count = 2
{ -> ELEMENT_INDEX: Probability = 0.00, Count = 1
{ -> res: Probability = 0.00, Count = 1
{ -> maximum: Probability = 0.00, Count = 1
{ -> d: Probability = 0.00, Count = 1
{ -> idx_y: Probability = 0.00, Count = 1
{ -> x: Probability = 0.00, Count = 1
{ -> .: Probability = 0.01, Count = 3
{ -> i: Probability = 0.01, Count = 4
{ -> <: Probability = 0.00, Count = 2
{ -> const: Probability = 0.01, Count = 3
{ -> element_c: Probability = 0.00, Count = 1
{ -> pixel: Probability = 0.00, Count = 2
{ -> aux: Probability = 0.00, Count = 1
{ -> d_in: Probability = 0.00, Count = 1
{ -> out_index: Probability = 0.00, Count = 1
{ -> w_in: Probability = 0.00, Count = 1
{ -> h_in: Probability = 0.00, Count = 1
{ -> x2: Probability = 0.00, Count = 1
{ -> w_col_end: Probability = 0.00, Count = 1
{ -> rt: Probability = 0.00, Count = 1
{ -> w2: Probability = 0.00, Count = 1
int -> int: Probability = 0.85, Count = 686
int -> row: Probability = 0.00, Count = 4
int -> i: Probability = 0.01, Count = 12
int -> j: Probability = 0.01, Count = 10
int -> ;: Probability = 0.01, Count = 12
int -> y: Probability = 0.01, Count = 8
int -> IND: Probability = 0.00, Count = 1
int -> pos: Probability = 0.00, Count = 2
int -> trans_pos: Probability = 0.00, Count = 1
int -> idx: Probability = 0.00, Count = 1
int -> bit_index: Probability = 0.00, Count = 1
int -> =: Probability = 0.03, Count = 25
int -> col: Probability = 0.00, Count = 2
int -> :: Probability = 0.00, Count = 1
int -> (: Probability = 0.00, Count = 3
int -> jj: Probability = 0.00, Count = 2
int -> ): Probability = 0.01, Count = 9
int -> ind_in: Probability = 0.00, Count = 1
int -> k: Probability = 0.00, Count = 1
int -> 0: Probability = 0.00, Count = 1
int -> Col: Probability = 0.00, Count = 1
int -> idy: Probability = 0.00, Count = 1
int -> IJ: Probability = 0.00, Count = 2
int -> i2: Probability = 0.00, Count = 1
int -> offset: Probability = 0.00, Count = 1
int -> {: Probability = 0.00, Count = 1
int -> dst: Probability = 0.00, Count = 1
int -> x: Probability = 0.00, Count = 1
int -> for: Probability = 0.00, Count = 1
int -> column: Probability = 0.00, Count = 1
int -> index: Probability = 0.00, Count = 1
int -> b: Probability = 0.00, Count = 1
int -> +: Probability = 0.00, Count = 2
int -> count: Probability = 0.00, Count = 1
int -> frame: Probability = 0.00, Count = 1
int -> h_col: Probability = 0.00, Count = 1
int -> data_col: Probability = 0.00, Count = 1
int -> w_col: Probability = 0.00, Count = 1
int -> *: Probability = 0.00, Count = 2
int -> add_index: Probability = 0.00, Count = 1
int -> float: Probability = 0.00, Count = 1
idx -> ]: Probability = 0.27, Count = 33
idx -> blockIdx: Probability = 0.06, Count = 7
idx -> idx: Probability = 0.50, Count = 61
idx -> threadIdx: Probability = 0.03, Count = 4
idx -> +: Probability = 0.03, Count = 4
idx -> =: Probability = 0.01, Count = 1
idx -> ;: Probability = 0.01, Count = 1
idx -> *: Probability = 0.01, Count = 1
idx -> input: Probability = 0.02, Count = 2
idx -> channel: Probability = 0.01, Count = 1
idx -> {: Probability = 0.02, Count = 2
idx -> u: Probability = 0.02, Count = 2
idx -> long: Probability = 0.02, Count = 2
idx -> j: Probability = 0.01, Count = 1
( -> (: Probability = 0.60, Count = 407
( -> val: Probability = 0.00, Count = 1
( -> 1: Probability = 0.01, Count = 5
( -> d_in: Probability = 0.01, Count = 4
( -> tx: Probability = 0.00, Count = 2
( -> Tau: Probability = 0.00, Count = 1
( -> X: Probability = 0.00, Count = 2
( -> -: Probability = 0.01, Count = 9
( -> int: Probability = 0.05, Count = 35
( -> rand: Probability = 0.00, Count = 1
( -> 0: Probability = 0.02, Count = 12
( -> idx: Probability = 0.00, Count = 3
( -> [: Probability = 0.01, Count = 10
( -> alphas: Probability = 0.00, Count = 1
( -> |: Probability = 0.00, Count = 1
( -> szbeg: Probability = 0.00, Count = 1
( -> sxbeg: Probability = 0.00, Count = 1
( -> diff: Probability = 0.00, Count = 1
( -> i: Probability = 0.01, Count = 6
( -> min: Probability = 0.00, Count = 1
( -> idy: Probability = 0.00, Count = 1
( -> {: Probability = 0.00, Count = 3
( -> pcountinner: Probability = 0.00, Count = 1
( -> memHeight: Probability = 0.00, Count = 2
( -> 4: Probability = 0.00, Count = 1
( -> float: Probability = 0.01, Count = 7
( -> perimeterRes: Probability = 0.00, Count = 1
( -> pcount: Probability = 0.00, Count = 1
( -> k: Probability = 0.01, Count = 7
( -> ): Probability = 0.01, Count = 7
( -> size: Probability = 0.00, Count = 1
( -> j: Probability = 0.00, Count = 3
( -> dia: Probability = 0.00, Count = 1
( -> edad: Probability = 0.00, Count = 1
( -> unsigned: Probability = 0.01, Count = 8
( -> ]: Probability = 0.00, Count = 1
( -> +: Probability = 0.00, Count = 3
( -> *: Probability = 0.02, Count = 16
( -> depth_scale: Probability = 0.00, Count = 1
( -> char: Probability = 0.00, Count = 3
( -> ind_out: Probability = 0.00, Count = 1
( -> clamp_min: Probability = 0.00, Count = 1
( -> clamp_max: Probability = 0.00, Count = 1
( -> =: Probability = 0.01, Count = 8
( -> ;: Probability = 0.02, Count = 15
( -> Start: Probability = 0.00, Count = 2
( -> RES: Probability = 0.00, Count = 1
( -> J: Probability = 0.00, Count = 2
( -> height: Probability = 0.00, Count = 1
( -> columns: Probability = 0.00, Count = 1
( -> row: Probability = 0.00, Count = 2
( -> column: Probability = 0.00, Count = 1
( -> long: Probability = 0.00, Count = 1
( -> for: Probability = 0.01, Count = 6
( -> cell: Probability = 0.00, Count = 1
( -> End: Probability = 0.00, Count = 2
( -> ELEMENT_INDEX: Probability = 0.00, Count = 1
( -> !: Probability = 0.00, Count = 1
( -> array_size: Probability = 0.00, Count = 1
( -> if: Probability = 0.00, Count = 2
( -> mat: Probability = 0.00, Count = 1
( -> >: Probability = 0.00, Count = 1
( -> powf: Probability = 0.00, Count = 1
( -> /: Probability = 0.00, Count = 1
( -> z: Probability = 0.01, Count = 4
( -> src: Probability = 0.00, Count = 2
( -> d_indptr: Probability = 0.00, Count = 1
( -> y: Probability = 0.00, Count = 2
( -> 307: Probability = 0.00, Count = 1
( -> eachElement: Probability = 0.00, Count = 1
( -> sqrtf: Probability = 0.00, Count = 1
( -> 2: Probability = 0.00, Count = 1
( -> logf: Probability = 0.00, Count = 1
( -> x: Probability = 0.00, Count = 2
( -> m: Probability = 0.00, Count = 1
( -> 5: Probability = 0.00, Count = 1
( -> cols: Probability = 0.00, Count = 2
( -> out: Probability = 0.00, Count = 1
( -> b: Probability = 0.00, Count = 1
( -> stride: Probability = 0.00, Count = 1
( -> 25: Probability = 0.00, Count = 2
( -> r_i: Probability = 0.00, Count = 1
( -> w_in: Probability = 0.00, Count = 1
( -> channel_out: Probability = 0.00, Count = 1
( -> count: Probability = 0.00, Count = 1
( -> width: Probability = 0.00, Count = 1
( -> x2: Probability = 0.00, Count = 1
( -> in: Probability = 0.01, Count = 6
( -> }: Probability = 0.00, Count = 1
( -> :: Probability = 0.00, Count = 1
( -> gt2: Probability = 0.00, Count = 1
( -> bt: Probability = 0.00, Count = 1
( -> gpu_img_in_v: Probability = 0.00, Count = 2
( -> rt: Probability = 0.00, Count = 1
( -> gpu_img_in_u: Probability = 0.00, Count = 1
( -> bt2: Probability = 0.00, Count = 1
( -> rt2: Probability = 0.00, Count = 1
( -> gpu_img_in_y: Probability = 0.00, Count = 1
data -> data: Probability = 0.88, Count = 7
data -> [: Probability = 0.12, Count = 1
; -> }: Probability = 0.06, Count = 53
; -> ;: Probability = 0.46, Count = 395
; -> return: Probability = 0.00, Count = 1
; -> ]: Probability = 0.01, Count = 8
; -> 1: Probability = 0.01, Count = 6
; -> x: Probability = 0.00, Count = 3
; -> devSteer: Probability = 0.00, Count = 1
; -> &: Probability = 0.01, Count = 6
; -> prB: Probability = 0.00, Count = 1
; -> d_acts: Probability = 0.00, Count = 1
; -> y: Probability = 0.02, Count = 15
; -> row: Probability = 0.00, Count = 4
; -> +: Probability = 0.03, Count = 23
; -> i: Probability = 0.03, Count = 22
; -> mat: Probability = 0.00, Count = 3
; -> int: Probability = 0.01, Count = 9
; -> =: Probability = 0.02, Count = 17
; -> if: Probability = 0.00, Count = 3
; -> means: Probability = 0.00, Count = 1
; -> my: Probability = 0.00, Count = 1
; -> >: Probability = 0.00, Count = 4
; -> .: Probability = 0.00, Count = 4
; -> width: Probability = 0.00, Count = 1
; -> (: Probability = 0.02, Count = 18
; -> a: Probability = 0.00, Count = 1
; -> error: Probability = 0.00, Count = 1
; -> delta: Probability = 0.00, Count = 2
; -> out_image: Probability = 0.00, Count = 1
; -> temp: Probability = 0.00, Count = 1
; -> float: Probability = 0.01, Count = 8
; -> unsigned: Probability = 0.01, Count = 8
; -> mat_out: Probability = 0.00, Count = 1
; -> pn: Probability = 0.00, Count = 1
; -> ): Probability = 0.02, Count = 21
; -> devMat: Probability = 0.00, Count = 1
; -> [: Probability = 0.01, Count = 12
; -> <: Probability = 0.02, Count = 13
; -> k: Probability = 0.01, Count = 10
; -> long: Probability = 0.00, Count = 3
; -> size: Probability = 0.00, Count = 1
; -> *: Probability = 0.01, Count = 8
; -> for: Probability = 0.01, Count = 12
; -> output: Probability = 0.00, Count = 2
; -> g: Probability = 0.00, Count = 2
; -> b: Probability = 0.00, Count = 4
; -> :: Probability = 0.00, Count = 2
; -> size_t: Probability = 0.00, Count = 1
; -> meanImage: Probability = 0.00, Count = 1
; -> jj: Probability = 0.00, Count = 4
; -> availablePixels: Probability = 0.00, Count = 1
; -> d_in: Probability = 0.00, Count = 1
; -> d_ind_sub: Probability = 0.00, Count = 1
; -> d_label_sub: Probability = 0.00, Count = 1
; -> j: Probability = 0.01, Count = 8
; -> n: Probability = 0.00, Count = 2
; -> ny: Probability = 0.00, Count = 1
; -> nx: Probability = 0.00, Count = 1
; -> C: Probability = 0.00, Count = 2
; -> c: Probability = 0.00, Count = 1
; -> RES: Probability = 0.00, Count = 2
; -> idx: Probability = 0.00, Count = 3
; -> ps: Probability = 0.00, Count = 1
; -> npml: Probability = 0.00, Count = 1
; -> -: Probability = 0.00, Count = 2
; -> grayImage: Probability = 0.00, Count = 1
; -> image: Probability = 0.00, Count = 3
; -> my_pixel: Probability = 0.00, Count = 3
; -> x1: Probability = 0.00, Count = 1
; -> 0: Probability = 0.01, Count = 7
; -> cell: Probability = 0.00, Count = 1
; -> shared_dimensions: Probability = 0.00, Count = 1
; -> column: Probability = 0.00, Count = 1
; -> U: Probability = 0.00, Count = 1
; -> ELEMENT_INDEX: Probability = 0.00, Count = 1
; -> buffer: Probability = 0.00, Count = 1
; -> filterR: Probability = 0.00, Count = 1
; -> ib: Probability = 0.00, Count = 1
; -> spatial: Probability = 0.00, Count = 1
; -> batch: Probability = 0.00, Count = 2
; -> const: Probability = 0.02, Count = 16
; -> grayimg: Probability = 0.00, Count = 1
; -> host_inputArray3: Probability = 0.00, Count = 1
; -> ptr_stc_1: Probability = 0.00, Count = 2
; -> newvalue: Probability = 0.00, Count = 1
; -> {: Probability = 0.00, Count = 3
; -> summ: Probability = 0.00, Count = 1
; -> bx: Probability = 0.00, Count = 1
; -> stride: Probability = 0.00, Count = 1
; -> norm_val: Probability = 0.00, Count = 1
; -> s: Probability = 0.00, Count = 1
; -> d_out: Probability = 0.00, Count = 1
; -> sum: Probability = 0.00, Count = 1
; -> m: Probability = 0.00, Count = 1
; -> W_grid: Probability = 0.00, Count = 1
; -> size3d: Probability = 0.00, Count = 2
; -> size2d: Probability = 0.00, Count = 2
; -> forward: Probability = 0.00, Count = 1
; -> gpu_img_out_v: Probability = 0.00, Count = 1
; -> gpu_img_out_y: Probability = 0.00, Count = 1
; -> gpu_img_out_u: Probability = 0.00, Count = 1
; -> dcopy: Probability = 0.00, Count = 1
; -> realPart: Probability = 0.00, Count = 1
; -> minw: Probability = 0.00, Count = 2
; -> add_index: Probability = 0.00, Count = 1
; -> id: Probability = 0.00, Count = 1
; -> 4: Probability = 0.00, Count = 1
; -> boxes_out: Probability = 0.00, Count = 3
; -> height_col: Probability = 0.00, Count = 1
; -> ksize: Probability = 0.00, Count = 1
; -> w_in: Probability = 0.00, Count = 1
; -> data_col_ptr: Probability = 0.00, Count = 1
; -> do: Probability = 0.00, Count = 1
; -> pic: Probability = 0.00, Count = 1
; -> count: Probability = 0.00, Count = 1
; -> y2: Probability = 0.00, Count = 1
; -> coeff_w_col: Probability = 0.00, Count = 1
; -> w_col_end: Probability = 0.00, Count = 1
; -> h_col: Probability = 0.00, Count = 1
; -> h_col_end: Probability = 0.00, Count = 1
; -> bt2: Probability = 0.00, Count = 1
; -> gpu_img_out_b: Probability = 0.00, Count = 1
; -> gt: Probability = 0.00, Count = 1
; -> gt2: Probability = 0.00, Count = 2
; -> rt2: Probability = 0.00, Count = 1
; -> gpu_img_out_g: Probability = 0.00, Count = 1
; -> bt: Probability = 0.00, Count = 1
; -> gpu_img_out_r: Probability = 0.00, Count = 1
; -> boxes_for_nms: Probability = 0.00, Count = 2
; -> w1: Probability = 0.00, Count = 1
; -> minc: Probability = 0.00, Count = 1
; -> minh: Probability = 0.00, Count = 1
; -> anchorCy: Probability = 0.00, Count = 1
; -> anchorCx: Probability = 0.00, Count = 1
; -> temp_diff: Probability = 0.00, Count = 1
; -> shift: Probability = 0.00, Count = 1
] -> +: Probability = 0.08, Count = 53
] -> =: Probability = 0.14, Count = 100
] -> ;: Probability = 0.10, Count = 73
] -> *: Probability = 0.05, Count = 36
] -> ]: Probability = 0.37, Count = 257
] -> -: Probability = 0.03, Count = 19
] -> }: Probability = 0.01, Count = 6
] -> /: Probability = 0.01, Count = 8
] -> ): Probability = 0.02, Count = 11
] -> x: Probability = 0.01, Count = 5
] -> >: Probability = 0.01, Count = 8
] -> ,: Probability = 0.00, Count = 3
] -> (: Probability = 0.01, Count = 4
] -> <: Probability = 0.00, Count = 3
] -> threadIdx: Probability = 0.00, Count = 1
] -> 0: Probability = 0.01, Count = 7
] -> src: Probability = 0.00, Count = 1
] -> dst: Probability = 0.00, Count = 1
] -> id: Probability = 0.00, Count = 2
] -> tid: Probability = 0.01, Count = 5
] -> idx: Probability = 0.00, Count = 3
] -> alpha: Probability = 0.00, Count = 2
] -> blockIdx: Probability = 0.00, Count = 1
] -> temp: Probability = 0.00, Count = 1
] -> d_in: Probability = 0.00, Count = 2
] -> {: Probability = 0.00, Count = 2
] -> p: Probability = 0.00, Count = 1
] -> b: Probability = 0.00, Count = 1
] -> k: Probability = 0.00, Count = 1
] -> size: Probability = 0.00, Count = 1
] -> sin: Probability = 0.00, Count = 1
] -> tx: Probability = 0.00, Count = 2
] -> maxvd: Probability = 0.00, Count = 1
] -> for: Probability = 0.00, Count = 2
] -> b_in: Probability = 0.00, Count = 1
] -> a_in: Probability = 0.00, Count = 1
] -> [: Probability = 0.02, Count = 14
] -> sum: Probability = 0.00, Count = 1
] -> B: Probability = 0.00, Count = 1
] -> j: Probability = 0.00, Count = 2
] -> Isg: Probability = 0.00, Count = 1
] -> gp: Probability = 0.00, Count = 1
] -> Iss: Probability = 0.00, Count = 1
] -> sp: Probability = 0.00, Count = 1
] -> .: Probability = 0.00, Count = 2
] -> psi: Probability = 0.00, Count = 2
] -> pa: Probability = 0.00, Count = 1
] -> pb: Probability = 0.00, Count = 1
] -> filter: Probability = 0.00, Count = 1
] -> Bd: Probability = 0.00, Count = 1
] -> model: Probability = 0.00, Count = 1
] -> int: Probability = 0.00, Count = 2
] -> nx: Probability = 0.00, Count = 1
] -> i: Probability = 0.01, Count = 4
] -> index: Probability = 0.00, Count = 1
] -> grad: Probability = 0.00, Count = 2
] -> 1: Probability = 0.00, Count = 2
] -> d_indptr: Probability = 0.00, Count = 1
] -> ptr_src_0: Probability = 0.00, Count = 2
] -> unsigned: Probability = 0.00, Count = 2
] -> float: Probability = 0.00, Count = 1
] -> ty: Probability = 0.00, Count = 1
] -> bx: Probability = 0.00, Count = 1
] -> stride: Probability = 0.00, Count = 1
] -> norm_val: Probability = 0.00, Count = 1
] -> n: Probability = 0.00, Count = 1
] -> scale: Probability = 0.00, Count = 1
] -> s1: Probability = 0.00, Count = 1
] -> s2: Probability = 0.00, Count = 1
] -> &: Probability = 0.01, Count = 5
] -> 2: Probability = 0.00, Count = 2
] -> Q: Probability = 0.00, Count = 1
] -> out: Probability = 0.00, Count = 1
] -> add: Probability = 0.00, Count = 1
] -> preCy: Probability = 0.00, Count = 1
] -> preH: Probability = 0.00, Count = 1
] -> anchorH: Probability = 0.00, Count = 1
] -> preCx: Probability = 0.00, Count = 1
] -> width: Probability = 0.00, Count = 2
] -> col: Probability = 0.00, Count = 1
] -> height: Probability = 0.00, Count = 2
] -> shift: Probability = 0.00, Count = 1
] -> r: Probability = 0.00, Count = 1
numElements -> numElements: Probability = 1.00, Count = 2
, -> ,: Probability = 0.95, Count = 759
, -> 3: Probability = 0.00, Count = 1
, -> ALPHA: Probability = 0.00, Count = 1
, -> ]: Probability = 0.00, Count = 1
, -> =: Probability = 0.00, Count = 1
, -> imageNum: Probability = 0.00, Count = 1
, -> fmaxf: Probability = 0.00, Count = 2
, -> X: Probability = 0.00, Count = 3
, -> ;: Probability = 0.00, Count = 2
, -> ): Probability = 0.00, Count = 1
, -> j: Probability = 0.00, Count = 2
, -> 2: Probability = 0.00, Count = 1
, -> h: Probability = 0.00, Count = 1
, -> acc: Probability = 0.00, Count = 1
, -> p: Probability = 0.00, Count = 1
, -> w: Probability = 0.00, Count = 1
, -> 0: Probability = 0.00, Count = 1
, -> *: Probability = 0.01, Count = 7
, -> x: Probability = 0.00, Count = 1
, -> h_in: Probability = 0.00, Count = 1
, -> &: Probability = 0.00, Count = 1
, -> frame: Probability = 0.00, Count = 1
, -> y2: Probability = 0.00, Count = 1
, -> w_col: Probability = 0.00, Count = 1
, -> h_col: Probability = 0.00, Count = 2
, -> coeff_h_col: Probability = 0.00, Count = 1
, -> [: Probability = 0.00, Count = 1
+ -> =: Probability = 0.04, Count = 41
+ -> ): Probability = 0.09, Count = 89
+ -> +: Probability = 0.40, Count = 382
+ -> y: Probability = 0.00, Count = 4
+ -> N: Probability = 0.00, Count = 3
+ -> x: Probability = 0.01, Count = 13
+ -> arrayB: Probability = 0.00, Count = 1
+ -> ncols: Probability = 0.00, Count = 1
+ -> i: Probability = 0.02, Count = 21
+ -> maxThreads: Probability = 0.00, Count = 1
+ -> b: Probability = 0.00, Count = 4
+ -> stride: Probability = 0.01, Count = 5
+ -> a: Probability = 0.00, Count = 1
+ -> nblocks: Probability = 0.00, Count = 1
+ -> B: Probability = 0.00, Count = 1
+ -> count: Probability = 0.00, Count = 1
+ -> gridDim: Probability = 0.00, Count = 1
+ -> reductionSize: Probability = 0.00, Count = 1
+ -> tid: Probability = 0.00, Count = 2
+ -> m: Probability = 0.00, Count = 1
+ -> d_in_b: Probability = 0.00, Count = 1
+ -> cols: Probability = 0.01, Count = 8
+ -> col: Probability = 0.01, Count = 7
+ -> prA: Probability = 0.00, Count = 1
+ -> expf: Probability = 0.00, Count = 1
+ -> size: Probability = 0.01, Count = 5
+ -> column: Probability = 0.00, Count = 3
+ -> row: Probability = 0.00, Count = 3
+ -> 1: Probability = 0.02, Count = 24
+ -> twod: Probability = 0.00, Count = 1
+ -> twod1: Probability = 0.00, Count = 1
+ -> 0: Probability = 0.02, Count = 15
+ -> j: Probability = 0.02, Count = 15
+ -> vecY: Probability = 0.00, Count = 1
+ -> L_x: Probability = 0.00, Count = 1
+ -> ]: Probability = 0.03, Count = 27
+ -> 10: Probability = 0.00, Count = 1
+ -> <: Probability = 0.01, Count = 8
+ -> &: Probability = 0.00, Count = 3
+ -> >: Probability = 0.00, Count = 2
+ -> npml: Probability = 0.00, Count = 3
+ -> id: Probability = 0.00, Count = 2
+ -> (: Probability = 0.02, Count = 15
+ -> c: Probability = 0.00, Count = 4
+ -> dims: Probability = 0.00, Count = 3
+ -> idx: Probability = 0.00, Count = 4
+ -> num_threads: Probability = 0.00, Count = 2
+ -> nxprj2: Probability = 0.00, Count = 1
+ -> height: Probability = 0.00, Count = 3
+ -> width: Probability = 0.00, Count = 4
+ -> idy: Probability = 0.00, Count = 1
+ -> rows: Probability = 0.00, Count = 1
+ -> devMatX: Probability = 0.00, Count = 4
+ -> {: Probability = 0.01, Count = 7
+ -> ;: Probability = 0.03, Count = 26
+ -> }: Probability = 0.00, Count = 1
+ -> *: Probability = 0.04, Count = 36
+ -> [: Probability = 0.02, Count = 17
+ -> k: Probability = 0.01, Count = 6
+ -> 2: Probability = 0.01, Count = 6
+ -> maxhd: Probability = 0.00, Count = 1
+ -> c_in: Probability = 0.00, Count = 2
+ -> a_in: Probability = 0.00, Count = 1
+ -> b_in: Probability = 0.00, Count = 1
+ -> sum: Probability = 0.00, Count = 1
+ -> Col: Probability = 0.00, Count = 3
+ -> size_block: Probability = 0.00, Count = 1
+ -> unsigned: Probability = 0.01, Count = 9
+ -> output: Probability = 0.00, Count = 1
+ -> if: Probability = 0.01, Count = 5
+ -> 71: Probability = 0.00, Count = 1
+ -> 07: Probability = 0.00, Count = 1
+ -> pixels_per_image: Probability = 0.00, Count = 1
+ -> nx: Probability = 0.00, Count = 2
+ -> dt: Probability = 0.00, Count = 1
+ -> x0: Probability = 0.00, Count = 2
+ -> .: Probability = 0.01, Count = 5
+ -> index: Probability = 0.00, Count = 2
+ -> right_columns: Probability = 0.00, Count = 1
+ -> cell: Probability = 0.00, Count = 2
+ -> col_b: Probability = 0.00, Count = 1
+ -> NJ: Probability = 0.00, Count = 1
+ -> RES: Probability = 0.00, Count = 1
+ -> array_size: Probability = 0.00, Count = 1
+ -> occNo: Probability = 0.00, Count = 1
+ -> h: Probability = 0.00, Count = 2
+ -> buffer: Probability = 0.00, Count = 1
+ -> source_amplitude: Probability = 0.00, Count = 1
+ -> spatial: Probability = 0.00, Count = 2
+ -> z: Probability = 0.00, Count = 2
+ -> d_indptr: Probability = 0.00, Count = 2
+ -> d_out_data: Probability = 0.00, Count = 1
+ -> coef: Probability = 0.00, Count = 1
+ -> 113: Probability = 0.00, Count = 1
+ -> 604: Probability = 0.00, Count = 1
+ -> host_inputArray1: Probability = 0.00, Count = 1
+ -> ptr_src_0: Probability = 0.00, Count = 1
+ -> 5f: Probability = 0.00, Count = 1
+ -> bx: Probability = 0.00, Count = 1
+ -> height_M: Probability = 0.00, Count = 1
+ -> bands: Probability = 0.00, Count = 1
+ -> filters: Probability = 0.00, Count = 2
+ -> f: Probability = 0.00, Count = 2
+ -> n: Probability = 0.00, Count = 3
+ -> ,: Probability = 0.00, Count = 1
+ -> q: Probability = 0.00, Count = 1
+ -> for: Probability = 0.00, Count = 1
+ -> w: Probability = 0.00, Count = 1
+ -> 128: Probability = 0.00, Count = 1
+ -> dcopy: Probability = 0.00, Count = 1
+ -> %: Probability = 0.00, Count = 1
+ -> h_out: Probability = 0.00, Count = 1
+ -> ksize: Probability = 0.00, Count = 2
+ -> cy: Probability = 0.00, Count = 1
+ -> cx: Probability = 0.00, Count = 1
+ -> y2: Probability = 0.00, Count = 1
+ -> 4: Probability = 0.00, Count = 1
+ -> 3: Probability = 0.00, Count = 2
+ -> xp: Probability = 0.00, Count = 1
+ -> zq: Probability = 0.00, Count = 2
+ -> zp: Probability = 0.00, Count = 1
+ -> yq: Probability = 0.00, Count = 1
+ -> P: Probability = 0.00, Count = 1
+ -> /: Probability = 0.00, Count = 1
+ -> h1: Probability = 0.00, Count = 1
+ -> int: Probability = 0.00, Count = 1
+ -> h2: Probability = 0.00, Count = 1
+ -> mult: Probability = 0.00, Count = 2
+ -> add_index: Probability = 0.00, Count = 1
+ -> step: Probability = 0.00, Count = 3
+ -> r: Probability = 0.01, Count = 5
+ -> -: Probability = 0.00, Count = 2
+ -> else: Probability = 0.00, Count = 2
+ -> fbase: Probability = 0.00, Count = 1
void -> void: Probability = 1.00, Count = 176
) -> ): Probability = 0.50, Count = 332
) -> {: Probability = 0.11, Count = 74
) -> new_arr: Probability = 0.00, Count = 1
) -> y: Probability = 0.01, Count = 4
) -> output: Probability = 0.00, Count = 2
) -> offsets: Probability = 0.00, Count = 1
) -> c: Probability = 0.00, Count = 3
) -> X: Probability = 0.00, Count = 2
) -> ?: Probability = 0.01, Count = 8
) -> ;: Probability = 0.06, Count = 41
) -> Y: Probability = 0.00, Count = 3
) -> }: Probability = 0.00, Count = 3
) -> dev_parameter: Probability = 0.00, Count = 1
) -> ,: Probability = 0.00, Count = 2
) -> =: Probability = 0.02, Count = 13
) -> Tau: Probability = 0.00, Count = 1
) -> transposed: Probability = 0.00, Count = 1
) -> if: Probability = 0.01, Count = 7
) -> input: Probability = 0.00, Count = 1
) -> aRS: Probability = 0.00, Count = 1
) -> vecY: Probability = 0.00, Count = 1
) -> ]: Probability = 0.01, Count = 5
) -> device_output: Probability = 0.00, Count = 1
) -> [: Probability = 0.01, Count = 10
) -> n: Probability = 0.00, Count = 1
) -> +: Probability = 0.03, Count = 18
) -> ny: Probability = 0.00, Count = 1
) -> char: Probability = 0.00, Count = 1
) -> 0: Probability = 0.00, Count = 3
) -> .: Probability = 0.00, Count = 2
) -> areaRes: Probability = 0.00, Count = 1
) -> /: Probability = 0.00, Count = 2
) -> int: Probability = 0.02, Count = 12
) -> size: Probability = 0.00, Count = 2
) -> edad: Probability = 0.00, Count = 1
) -> sin: Probability = 0.00, Count = 1
) -> cos: Probability = 0.00, Count = 3
) -> (: Probability = 0.03, Count = 17
) -> g: Probability = 0.00, Count = 1
) -> r: Probability = 0.00, Count = 1
) -> row: Probability = 0.00, Count = 1
) -> pixelNum: Probability = 0.00, Count = 1
) -> size_t: Probability = 0.00, Count = 1
) -> maxhd: Probability = 0.00, Count = 1
) -> x: Probability = 0.01, Count = 5
) -> 1: Probability = 0.01, Count = 6
) -> float: Probability = 0.01, Count = 7
) -> *: Probability = 0.01, Count = 9
) -> floorf: Probability = 0.00, Count = 1
) -> temp: Probability = 0.00, Count = 1
) -> k: Probability = 0.00, Count = 3
) -> column: Probability = 0.00, Count = 1
) -> result: Probability = 0.00, Count = 1
) -> i: Probability = 0.00, Count = 2
) -> sum: Probability = 0.00, Count = 1
) -> 2: Probability = 0.00, Count = 1
) -> j: Probability = 0.00, Count = 1
) -> depth: Probability = 0.00, Count = 2
) -> >: Probability = 0.00, Count = 1
) -> element_c: Probability = 0.00, Count = 1
) -> d_in_grad: Probability = 0.00, Count = 1
) -> summ: Probability = 0.00, Count = 1
) -> -: Probability = 0.01, Count = 4
) -> 3: Probability = 0.00, Count = 1
) -> width_M: Probability = 0.00, Count = 1
) -> width_N: Probability = 0.00, Count = 1
) -> largest: Probability = 0.00, Count = 1
) -> batch: Probability = 0.00, Count = 1
) -> <: Probability = 0.01, Count = 7
) -> cols: Probability = 0.00, Count = 1
) -> out: Probability = 0.00, Count = 2
) -> h_index: Probability = 0.00, Count = 1
) -> :: Probability = 0.00, Count = 1
) -> h: Probability = 0.00, Count = 1
) -> &: Probability = 0.00, Count = 1
) -> d: Probability = 0.00, Count = 1
) -> ksize: Probability = 0.00, Count = 1
) -> gpu_img_in_y: Probability = 0.00, Count = 1
) -> boxes_before_nms: Probability = 0.00, Count = 3
) -> id: Probability = 0.00, Count = 1
) -> add_index: Probability = 0.00, Count = 1
) -> stride: Probability = 0.00, Count = 1
) -> top_data: Probability = 0.00, Count = 1
) -> for: Probability = 0.00, Count = 1
[ -> blockIdx: Probability = 0.00, Count = 1
[ -> tid: Probability = 0.04, Count = 31
[ -> idx: Probability = 0.04, Count = 26
[ -> i: Probability = 0.08, Count = 59
[ -> [: Probability = 0.36, Count = 267
[ -> t_id: Probability = 0.00, Count = 3
[ -> j: Probability = 0.01, Count = 9
[ -> 0: Probability = 0.01, Count = 5
[ -> ]: Probability = 0.04, Count = 29
[ -> gid: Probability = 0.01, Count = 7
[ -> index: Probability = 0.03, Count = 25
[ -> x: Probability = 0.01, Count = 7
[ -> threadIdx: Probability = 0.00, Count = 3
[ -> myId: Probability = 0.00, Count = 3
[ -> row: Probability = 0.01, Count = 7
[ -> tx: Probability = 0.00, Count = 2
[ -> id: Probability = 0.02, Count = 14
[ -> un_idx: Probability = 0.00, Count = 2
[ -> ;: Probability = 0.01, Count = 10
[ -> column: Probability = 0.00, Count = 1
[ -> db: Probability = 0.00, Count = 1
[ -> +: Probability = 0.02, Count = 15
[ -> counts: Probability = 0.00, Count = 1
[ -> *: Probability = 0.05, Count = 34
[ -> cluster: Probability = 0.01, Count = 4
[ -> 1: Probability = 0.01, Count = 5
[ -> labelList: Probability = 0.00, Count = 1
[ -> reference: Probability = 0.00, Count = 1
[ -> A: Probability = 0.00, Count = 1
[ -> C: Probability = 0.00, Count = 1
[ -> B: Probability = 0.00, Count = 1
[ -> IND: Probability = 0.00, Count = 2
[ -> d_output: Probability = 0.00, Count = 2
[ -> d_input: Probability = 0.00, Count = 2
[ -> trans_pos: Probability = 0.00, Count = 1
[ -> pos: Probability = 0.01, Count = 6
[ -> N: Probability = 0.00, Count = 2
[ -> memWidth: Probability = 0.01, Count = 4
[ -> width: Probability = 0.00, Count = 3
[ -> result: Probability = 0.00, Count = 2
[ -> val: Probability = 0.00, Count = 1
[ -> 3: Probability = 0.01, Count = 7
[ -> ): Probability = 0.01, Count = 6
[ -> maxvd: Probability = 0.00, Count = 1
[ -> jj: Probability = 0.00, Count = 2
[ -> ind_out: Probability = 0.00, Count = 3
[ -> ind_in: Probability = 0.00, Count = 2
[ -> k: Probability = 0.01, Count = 5
[ -> n: Probability = 0.00, Count = 3
[ -> Row: Probability = 0.00, Count = 3
[ -> idy: Probability = 0.00, Count = 2
[ -> (: Probability = 0.01, Count = 7
[ -> IJ: Probability = 0.02, Count = 17
[ -> =: Probability = 0.01, Count = 6
[ -> -: Probability = 0.00, Count = 2
[ -> pg: Probability = 0.00, Count = 2
[ -> ps: Probability = 0.00, Count = 1
[ -> offset: Probability = 0.00, Count = 3
[ -> my_pixel: Probability = 0.01, Count = 4
[ -> cell: Probability = 0.00, Count = 1
[ -> ELEMENT_INDEX: Probability = 0.00, Count = 1
[ -> }: Probability = 0.00, Count = 1
[ -> variance: Probability = 0.00, Count = 3
[ -> mean: Probability = 0.00, Count = 1
[ -> uidx: Probability = 0.00, Count = 2
[ -> src: Probability = 0.01, Count = 5
[ -> dst: Probability = 0.00, Count = 3
[ -> y: Probability = 0.00, Count = 1
[ -> ptr_stc_1: Probability = 0.00, Count = 1
[ -> pixel: Probability = 0.01, Count = 4
[ -> g: Probability = 0.00, Count = 1
[ -> image_size: Probability = 0.00, Count = 1
[ -> filtered_Q: Probability = 0.00, Count = 1
[ -> add: Probability = 0.00, Count = 1
[ -> i2: Probability = 0.00, Count = 1
[ -> ,: Probability = 0.00, Count = 1
[ -> h: Probability = 0.00, Count = 1
[ -> p: Probability = 0.00, Count = 1
[ -> depth: Probability = 0.00, Count = 1
[ -> .: Probability = 0.00, Count = 1
[ -> firstIndexToGrab: Probability = 0.01, Count = 5
[ -> 4: Probability = 0.00, Count = 2
[ -> c: Probability = 0.00, Count = 1
[ -> base: Probability = 0.01, Count = 7
[ -> &: Probability = 0.00, Count = 3
[ -> fbase: Probability = 0.00, Count = 3
[ -> if: Probability = 0.00, Count = 1
add_100 -> add_100: Probability = 1.00, Count = 1
< -> <: Probability = 0.55, Count = 136
< -> >: Probability = 0.04, Count = 11
< -> inner_reps: Probability = 0.00, Count = 1
< -> size: Probability = 0.02, Count = 4
< -> N: Probability = 0.01, Count = 3
< -> &: Probability = 0.01, Count = 2
< -> 1: Probability = 0.01, Count = 3
< -> y: Probability = 0.01, Count = 2
< -> =: Probability = 0.02, Count = 6
< -> ;: Probability = 0.05, Count = 13
< -> 0: Probability = 0.03, Count = 8
< -> 80: Probability = 0.00, Count = 1
< -> row: Probability = 0.00, Count = 1
< -> pixelNum: Probability = 0.00, Count = 1
< -> imageNum: Probability = 0.00, Count = 1
< -> (: Probability = 0.00, Count = 1
< -> ): Probability = 0.00, Count = 1
< -> indptr: Probability = 0.01, Count = 2
< -> height: Probability = 0.02, Count = 4
< -> p: Probability = 0.00, Count = 1
< -> n: Probability = 0.00, Count = 1
< -> k: Probability = 0.01, Count = 3
< -> width: Probability = 0.02, Count = 5
< -> c1: Probability = 0.00, Count = 1
< -> j: Probability = 0.00, Count = 1
< -> npml: Probability = 0.00, Count = 1
< -> nx: Probability = 0.00, Count = 1
< -> shared_dimensions: Probability = 0.00, Count = 1
< -> col_a: Probability = 0.00, Count = 1
< -> mask_size: Probability = 0.00, Count = 1
< -> m: Probability = 0.01, Count = 2
< -> /: Probability = 0.02, Count = 4
< -> grid_width: Probability = 0.00, Count = 1
< -> colsA: Probability = 0.00, Count = 1
< -> .: Probability = 0.01, Count = 3
< -> +: Probability = 0.01, Count = 2
< -> d_indptr: Probability = 0.01, Count = 2
< -> width_N: Probability = 0.00, Count = 1
< -> i: Probability = 0.00, Count = 1
< -> batchSize: Probability = 0.00, Count = 1
< -> ]: Probability = 0.00, Count = 1
< -> *: Probability = 0.00, Count = 1
< -> h: Probability = 0.01, Count = 2
< -> 5: Probability = 0.00, Count = 1
< -> 4: Probability = 0.00, Count = 1
< -> 3: Probability = 0.00, Count = 1
< -> min: Probability = 0.00, Count = 1
< -> w_col_start: Probability = 0.00, Count = 1
< -> w_col: Probability = 0.00, Count = 1
< -> if: Probability = 0.00, Count = 1
< -> int: Probability = 0.00, Count = 1
< -> [: Probability = 0.00, Count = 1
= -> 100: Probability = 0.00, Count = 1
= -> =: Probability = 0.45, Count = 354
= -> old_arr: Probability = 0.00, Count = 1
= -> array: Probability = 0.00, Count = 1
= -> x: Probability = 0.01, Count = 7
= -> scale: Probability = 0.00, Count = 1
= -> alpha: Probability = 0.00, Count = 3
= -> arrayA: Probability = 0.00, Count = 1
= -> tid: Probability = 0.00, Count = 1
= -> a: Probability = 0.01, Count = 11
= -> ALPHA: Probability = 0.00, Count = 2
= -> vec_out: Probability = 0.00, Count = 1
= -> *: Probability = 0.02, Count = 13
= -> tmp: Probability = 0.00, Count = 1
= -> A: Probability = 0.00, Count = 2
= -> val1: Probability = 0.00, Count = 1
= -> d_in: Probability = 0.00, Count = 3
= -> (: Probability = 0.06, Count = 49
= -> X: Probability = 0.00, Count = 2
= -> 1: Probability = 0.02, Count = 12
= -> .: Probability = 0.01, Count = 11
= -> lr: Probability = 0.00, Count = 1
= -> pow: Probability = 0.00, Count = 2
= -> d_in_a: Probability = 0.00, Count = 1
= -> row: Probability = 0.00, Count = 2
= -> 0: Probability = 0.04, Count = 32
= -> even_inc: Probability = 0.00, Count = 1
= -> base: Probability = 0.00, Count = 2
= -> Tau: Probability = 0.00, Count = 1
= -> vector: Probability = 0.00, Count = 1
= -> g_in: Probability = 0.00, Count = 1
= -> ;: Probability = 0.02, Count = 17
= -> N: Probability = 0.00, Count = 1
= -> output: Probability = 0.00, Count = 1
= -> twod1: Probability = 0.00, Count = 1
= -> vec: Probability = 0.00, Count = 2
= -> index: Probability = 0.01, Count = 7
= -> device_input: Probability = 0.00, Count = 1
= -> ): Probability = 0.01, Count = 6
= -> sy: Probability = 0.00, Count = 1
= -> sx: Probability = 0.00, Count = 1
= -> >: Probability = 0.01, Count = 5
= -> &: Probability = 0.01, Count = 6
= -> [: Probability = 0.02, Count = 16
= -> id: Probability = 0.01, Count = 5
= -> ]: Probability = 0.01, Count = 7
= -> nnz: Probability = 0.00, Count = 1
= -> i: Probability = 0.01, Count = 10
= -> b: Probability = 0.00, Count = 3
= -> abs: Probability = 0.00, Count = 1
= -> truth: Probability = 0.00, Count = 1
= -> diff: Probability = 0.00, Count = 1
= -> filter: Probability = 0.00, Count = 1
= -> in_image: Probability = 0.00, Count = 1
= -> y: Probability = 0.01, Count = 4
= -> temp: Probability = 0.00, Count = 2
= -> 255: Probability = 0.00, Count = 1
= -> mat_in: Probability = 0.00, Count = 1
= -> idy: Probability = 0.00, Count = 2
= -> idx: Probability = 0.00, Count = 2
= -> +: Probability = 0.01, Count = 9
= -> blockDim: Probability = 0.00, Count = 2
= -> if: Probability = 0.00, Count = 2
= -> pn: Probability = 0.00, Count = 1
= -> dec_index: Probability = 0.00, Count = 1
= -> devMat: Probability = 0.00, Count = 2
= -> pcount: Probability = 0.00, Count = 1
= -> {: Probability = 0.00, Count = 2
= -> input: Probability = 0.01, Count = 5
= -> std: Probability = 0.00, Count = 1
= -> indices: Probability = 0.00, Count = 2
= -> indptr: Probability = 0.00, Count = 2
= -> availablePixels: Probability = 0.00, Count = 1
= -> float: Probability = 0.00, Count = 3
= -> d_ind: Probability = 0.00, Count = 1
= -> d_label: Probability = 0.00, Count = 1
= -> fminf: Probability = 0.00, Count = 2
= -> sum: Probability = 0.00, Count = 3
= -> k: Probability = 0.00, Count = 2
= -> d_M: Probability = 0.00, Count = 1
= -> int: Probability = 0.00, Count = 3
= -> pixels_per_image: Probability = 0.00, Count = 3
= -> unsigned: Probability = 0.00, Count = 3
= -> j: Probability = 0.01, Count = 6
= -> x0: Probability = 0.00, Count = 1
= -> column: Probability = 0.00, Count = 1
= -> left: Probability = 0.00, Count = 1
= -> RES: Probability = 0.00, Count = 1
= -> U: Probability = 0.00, Count = 1
= -> gid: Probability = 0.00, Count = 1
= -> threadIdx: Probability = 0.00, Count = 2
= -> mat: Probability = 0.00, Count = 3
= -> res: Probability = 0.00, Count = 1
= -> iN: Probability = 0.00, Count = 1
= -> filterR: Probability = 0.00, Count = 1
= -> long: Probability = 0.01, Count = 4
= -> <: Probability = 0.00, Count = 3
= -> d_indptr: Probability = 0.00, Count = 2
= -> d_indices: Probability = 0.00, Count = 1
= -> image: Probability = 0.00, Count = 2
= -> gray: Probability = 0.00, Count = 1
= -> coef: Probability = 0.00, Count = 1
= -> currentFrame: Probability = 0.00, Count = 1
= -> 3: Probability = 0.00, Count = 1
= -> -: Probability = 0.02, Count = 13
= -> char: Probability = 0.00, Count = 1
= -> 5f: Probability = 0.00, Count = 1
= -> Melement: Probability = 0.00, Count = 1
= -> Nd: Probability = 0.00, Count = 1
= -> g: Probability = 0.00, Count = 1
= -> val: Probability = 0.00, Count = 1
= -> largest: Probability = 0.00, Count = 1
= -> d_out: Probability = 0.00, Count = 1
= -> powf: Probability = 0.00, Count = 1
= -> sqrtf: Probability = 0.00, Count = 1
= -> c: Probability = 0.00, Count = 2
= -> q: Probability = 0.00, Count = 1
= -> cols: Probability = 0.00, Count = 1
= -> rows: Probability = 0.01, Count = 4
= -> out: Probability = 0.00, Count = 1
= -> w: Probability = 0.00, Count = 1
= -> gpu_img_in_g: Probability = 0.00, Count = 2
= -> gpu_img_in_r: Probability = 0.00, Count = 2
= -> gpu_img_in_b: Probability = 0.00, Count = 1
= -> stepSize: Probability = 0.00, Count = 1
= -> /: Probability = 0.00, Count = 1
= -> minc: Probability = 0.00, Count = 3
= -> data_im_ptr: Probability = 0.00, Count = 1
= -> channel_out: Probability = 0.00, Count = 1
= -> yMid: Probability = 0.00, Count = 1
= -> xMin: Probability = 0.00, Count = 1
= -> Delta: Probability = 0.00, Count = 1
= -> 256: Probability = 0.00, Count = 1
= -> yMin: Probability = 0.00, Count = 1
= -> 5: Probability = 0.00, Count = 1
= -> x2: Probability = 0.00, Count = 1
= -> 2: Probability = 0.00, Count = 2
= -> cx: Probability = 0.00, Count = 1
= -> 00304f: Probability = 0.00, Count = 1
= -> cy: Probability = 0.00, Count = 1
= -> |: Probability = 0.00, Count = 1
= -> for: Probability = 0.00, Count = 1
= -> q_points: Probability = 0.00, Count = 1
= -> w_col_start: Probability = 0.00, Count = 2
= -> }: Probability = 0.00, Count = 1
= -> top_data: Probability = 0.01, Count = 7
= -> bottom_data: Probability = 0.00, Count = 1
= -> filters_diff: Probability = 0.00, Count = 1
= -> temp_diff: Probability = 0.00, Count = 1
for -> if: Probability = 0.37, Count = 74
for -> for: Probability = 0.22, Count = 44
for -> while: Probability = 0.02, Count = 3
for -> (: Probability = 0.21, Count = 42
for -> ;: Probability = 0.03, Count = 6
for -> &: Probability = 0.01, Count = 1
for -> int: Probability = 0.02, Count = 4
for -> ): Probability = 0.01, Count = 1
for -> =: Probability = 0.03, Count = 5
for -> {: Probability = 0.03, Count = 5
for -> i: Probability = 0.02, Count = 4
for -> 0: Probability = 0.02, Count = 4
for -> k: Probability = 0.01, Count = 1
for -> f: Probability = 0.01, Count = 1
for -> ENDCOM: Probability = 0.01, Count = 1
for -> 1: Probability = 0.01, Count = 1
for -> q: Probability = 0.01, Count = 1
for -> b: Probability = 0.01, Count = 1
100 -> ;: Probability = 0.33, Count = 1
100 -> 100: Probability = 0.33, Count = 1
100 -> k: Probability = 0.33, Count = 1
* -> *: Probability = 0.66, Count = 755
* -> =: Probability = 0.01, Count = 17
* -> nrows: Probability = 0.00, Count = 1
* -> b: Probability = 0.01, Count = 7
* -> dim: Probability = 0.00, Count = 3
* -> INCX: Probability = 0.01, Count = 10
* -> value: Probability = 0.00, Count = 2
* -> [: Probability = 0.02, Count = 21
* -> size: Probability = 0.00, Count = 3
* -> val2: Probability = 0.00, Count = 1
* -> x: Probability = 0.01, Count = 6
* -> (: Probability = 0.02, Count = 26
* -> INCY: Probability = 0.00, Count = 3
* -> dev_gradient: Probability = 0.00, Count = 1
* -> cols: Probability = 0.01, Count = 12
* -> OFFX: Probability = 0.00, Count = 1
* -> OFFY: Probability = 0.00, Count = 1
* -> 0: Probability = 0.00, Count = 5
* -> scale: Probability = 0.00, Count = 2
* -> aR1: Probability = 0.00, Count = 1
* -> n: Probability = 0.01, Count = 7
* -> vecX: Probability = 0.00, Count = 1
* -> .: Probability = 0.00, Count = 5
* -> 3: Probability = 0.01, Count = 9
* -> y: Probability = 0.01, Count = 9
* -> jsx: Probability = 0.00, Count = 1
* -> jsz: Probability = 0.00, Count = 1
* -> N: Probability = 0.00, Count = 4
* -> nxprj2: Probability = 0.00, Count = 2
* -> width: Probability = 0.01, Count = 13
* -> rows: Probability = 0.00, Count = 3
* -> ): Probability = 0.01, Count = 11
* -> 2: Probability = 0.00, Count = 2
* -> 1: Probability = 0.01, Count = 6
* -> perimeterRes: Probability = 0.00, Count = 1
* -> B: Probability = 0.00, Count = 3
* -> A: Probability = 0.00, Count = 1
* -> +: Probability = 0.03, Count = 36
* -> char: Probability = 0.00, Count = 1
* -> ]: Probability = 0.01, Count = 12
* -> i: Probability = 0.01, Count = 10
* -> images: Probability = 0.00, Count = 1
* -> {: Probability = 0.00, Count = 2
* -> d_disparity: Probability = 0.00, Count = 1
* -> d_in: Probability = 0.00, Count = 1
* -> inv_sub_factor: Probability = 0.00, Count = 1
* -> m: Probability = 0.00, Count = 2
* -> col: Probability = 0.00, Count = 3
* -> d_N: Probability = 0.00, Count = 1
* -> c2: Probability = 0.00, Count = 3
* -> c1: Probability = 0.00, Count = 2
* -> c: Probability = 0.00, Count = 3
* -> LPR: Probability = 0.00, Count = 1
* -> RES: Probability = 0.00, Count = 4
* -> NI: Probability = 0.00, Count = 2
* -> row: Probability = 0.00, Count = 4
* -> column: Probability = 0.00, Count = 1
* -> ;: Probability = 0.01, Count = 9
* -> colorImage: Probability = 0.00, Count = 3
* -> x0: Probability = 0.00, Count = 1
* -> right_columns: Probability = 0.00, Count = 1
* -> shared_dimensions: Probability = 0.00, Count = 1
* -> right: Probability = 0.00, Count = 1
* -> col_b: Probability = 0.00, Count = 2
* -> col_a: Probability = 0.00, Count = 1
* -> mask: Probability = 0.00, Count = 1
* -> pa: Probability = 0.00, Count = 1
* -> %: Probability = 0.00, Count = 1
* -> j: Probability = 0.00, Count = 3
* -> filters: Probability = 0.00, Count = 2
* -> batch: Probability = 0.00, Count = 1
* -> -: Probability = 0.00, Count = 2
* -> unsigned: Probability = 0.00, Count = 4
* -> u: Probability = 0.00, Count = 2
* -> size2d: Probability = 0.00, Count = 1
* -> G: Probability = 0.00, Count = 1
* -> R: Probability = 0.00, Count = 1
* -> d_out_grad: Probability = 0.00, Count = 1
* -> pixel: Probability = 0.00, Count = 2
* -> newvalue: Probability = 0.00, Count = 1
* -> Nelement: Probability = 0.00, Count = 1
* -> int: Probability = 0.00, Count = 1
* -> imag: Probability = 0.00, Count = 1
* -> d_KinectDisparity: Probability = 0.00, Count = 1
* -> d_regularDisparity: Probability = 0.00, Count = 1
* -> spatial: Probability = 0.00, Count = 2
* -> i2: Probability = 0.00, Count = 2
* -> in_w: Probability = 0.00, Count = 1
* -> h: Probability = 0.00, Count = 2
* -> out_h: Probability = 0.00, Count = 1
* -> g: Probability = 0.00, Count = 2
* -> r: Probability = 0.00, Count = 2
* -> occNo: Probability = 0.00, Count = 2
* -> dpsi: Probability = 0.00, Count = 2
* -> psi: Probability = 0.00, Count = 1
* -> q_i: Probability = 0.00, Count = 1
* -> Lq: Probability = 0.00, Count = 1
* -> k: Probability = 0.00, Count = 1
* -> 4: Probability = 0.00, Count = 4
* -> height_col: Probability = 0.00, Count = 1
* -> ksize: Probability = 0.00, Count = 1
* -> powf: Probability = 0.00, Count = 1
* -> dw: Probability = 0.00, Count = 2
* -> yMid: Probability = 0.00, Count = 1
* -> delta: Probability = 0.00, Count = 1
* -> P: Probability = 0.00, Count = 3
* -> if: Probability = 0.00, Count = 1
* -> stride: Probability = 0.00, Count = 2
* -> sample: Probability = 0.00, Count = 1
* -> dh: Probability = 0.00, Count = 1
* -> 5: Probability = 0.00, Count = 1
* -> step: Probability = 0.00, Count = 3
* -> >: Probability = 0.00, Count = 2
* -> <: Probability = 0.00, Count = 1
* -> height: Probability = 0.00, Count = 1
double -> double: Probability = 0.88, Count = 69
double -> blockDim: Probability = 0.01, Count = 1
double -> ]: Probability = 0.01, Count = 1
double -> ): Probability = 0.01, Count = 1
double -> s: Probability = 0.01, Count = 1
double -> res: Probability = 0.01, Count = 1
double -> maximum: Probability = 0.01, Count = 1
double -> float: Probability = 0.04, Count = 3
tid -> ]: Probability = 0.10, Count = 13
tid -> tid: Probability = 0.79, Count = 104
tid -> *: Probability = 0.03, Count = 4
tid -> =: Probability = 0.02, Count = 3
tid -> /: Probability = 0.01, Count = 1
tid -> .: Probability = 0.01, Count = 1
tid -> +: Probability = 0.02, Count = 3
tid -> }: Probability = 0.01, Count = 1
tid -> 4: Probability = 0.01, Count = 1
old_arr -> old_arr: Probability = 0.50, Count = 1
old_arr -> [: Probability = 0.50, Count = 1
new_arr -> new_arr: Probability = 0.50, Count = 1
new_arr -> [: Probability = 0.50, Count = 1
get_ev -> get_ev: Probability = 1.00, Count = 1
arrayCount -> arrayCount: Probability = 1.00, Count = 2
array -> array: Probability = 0.73, Count = 8
array -> [: Probability = 0.27, Count = 3
square -> square: Probability = 1.00, Count = 1
i -> i: Probability = 0.46, Count = 251
i -> ]: Probability = 0.11, Count = 63
i -> idx: Probability = 0.00, Count = 2
i -> *: Probability = 0.07, Count = 36
i -> ): Probability = 0.03, Count = 19
i -> ;: Probability = 0.02, Count = 12
i -> index: Probability = 0.03, Count = 15
i -> x: Probability = 0.01, Count = 6
i -> .: Probability = 0.00, Count = 1
i -> N: Probability = 0.00, Count = 1
i -> gid: Probability = 0.00, Count = 2
i -> lid: Probability = 0.00, Count = 1
i -> column: Probability = 0.00, Count = 1
i -> +: Probability = 0.04, Count = 22
i -> <: Probability = 0.02, Count = 10
i -> =: Probability = 0.04, Count = 20
i -> id: Probability = 0.00, Count = 2
i -> &: Probability = 0.00, Count = 1
i -> j: Probability = 0.02, Count = 11
i -> [: Probability = 0.01, Count = 7
i -> stride: Probability = 0.01, Count = 4
i -> tid: Probability = 0.00, Count = 1
i -> p: Probability = 0.00, Count = 2
i -> INCX: Probability = 0.00, Count = 1
i -> int: Probability = 0.01, Count = 7
i -> ny: Probability = 0.00, Count = 1
i -> nx: Probability = 0.00, Count = 2
i -> 0: Probability = 0.01, Count = 3
i -> size: Probability = 0.00, Count = 1
i -> -: Probability = 0.00, Count = 2
i -> stepSize: Probability = 0.00, Count = 1
i -> 1: Probability = 0.01, Count = 4
i -> colsA: Probability = 0.00, Count = 1
i -> sources_z: Probability = 0.00, Count = 1
i -> wfp: Probability = 0.00, Count = 1
i -> (: Probability = 0.01, Count = 3
i -> image_size: Probability = 0.00, Count = 1
i -> /: Probability = 0.01, Count = 4
i -> 16: Probability = 0.00, Count = 1
i -> ,: Probability = 0.00, Count = 1
i -> for: Probability = 0.00, Count = 1
i -> norm1: Probability = 0.00, Count = 1
i -> f1: Probability = 0.00, Count = 1
i -> b: Probability = 0.00, Count = 1
i -> gridDim: Probability = 0.00, Count = 1
i -> vec: Probability = 0.00, Count = 2
i -> vec1: Probability = 0.01, Count = 4
i -> if: Probability = 0.00, Count = 2
i -> w: Probability = 0.00, Count = 1
i -> sample: Probability = 0.00, Count = 2
i -> %: Probability = 0.00, Count = 2
i -> Q: Probability = 0.01, Count = 3
i -> dims: Probability = 0.00, Count = 2
i -> base: Probability = 0.00, Count = 1
i -> top_data: Probability = 0.00, Count = 1
i -> temp_diff: Probability = 0.00, Count = 1
n -> n: Probability = 0.68, Count = 66
n -> +: Probability = 0.09, Count = 9
n -> ;: Probability = 0.07, Count = 7
n -> &: Probability = 0.01, Count = 1
n -> m: Probability = 0.01, Count = 1
n -> ]: Probability = 0.01, Count = 1
n -> k: Probability = 0.01, Count = 1
n -> =: Probability = 0.08, Count = 8
n -> dcopy: Probability = 0.01, Count = 1
n -> <: Probability = 0.01, Count = 1
n -> h: Probability = 0.01, Count = 1
y -> y: Probability = 0.16, Count = 8
y -> [: Probability = 0.12, Count = 6
y -> +: Probability = 0.10, Count = 5
y -> |: Probability = 0.02, Count = 1
y -> *: Probability = 0.12, Count = 6
y -> >: Probability = 0.02, Count = 1
y -> =: Probability = 0.06, Count = 3
y -> pitch: Probability = 0.02, Count = 1
y -> <: Probability = 0.04, Count = 2
y -> output: Probability = 0.02, Count = 1
y -> k: Probability = 0.02, Count = 1
y -> idx_y: Probability = 0.02, Count = 1
y -> size2d: Probability = 0.06, Count = 3
y -> 1: Probability = 0.04, Count = 2
y -> if: Probability = 0.02, Count = 1
y -> &: Probability = 0.02, Count = 1
y -> width: Probability = 0.02, Count = 1
y -> d_KinectDisparityPitch: Probability = 0.02, Count = 1
y -> d_regularDisparityPitch: Probability = 0.02, Count = 1
y -> ;: Probability = 0.10, Count = 5
x -> x: Probability = 0.49, Count = 43
x -> [: Probability = 0.08, Count = 7
x -> i: Probability = 0.02, Count = 2
x -> =: Probability = 0.08, Count = 7
x -> ;: Probability = 0.05, Count = 4
x -> +: Probability = 0.03, Count = 3
x -> *: Probability = 0.07, Count = 6
x -> idx_x: Probability = 0.01, Count = 1
x -> nt: Probability = 0.01, Count = 1
x -> (: Probability = 0.01, Count = 1
x -> cols: Probability = 0.03, Count = 3
x -> if: Probability = 0.01, Count = 1
x -> ): Probability = 0.05, Count = 4
x -> ]: Probability = 0.01, Count = 1
x -> y: Probability = 0.01, Count = 1
x -> long: Probability = 0.03, Count = 3
add -> add: Probability = 0.67, Count = 4
add -> addKernel: Probability = 0.17, Count = 1
add -> [: Probability = 0.17, Count = 1
float -> float: Probability = 0.88, Count = 361
float -> val: Probability = 0.00, Count = 2
float -> tact: Probability = 0.00, Count = 1
float -> diff: Probability = 0.00, Count = 1
float -> ): Probability = 0.02, Count = 7
float -> d_in: Probability = 0.00, Count = 1
float -> {: Probability = 0.00, Count = 2
float -> temp: Probability = 0.00, Count = 1
float -> id: Probability = 0.00, Count = 2
float -> npml: Probability = 0.00, Count = 1
float -> =: Probability = 0.01, Count = 6
float -> x: Probability = 0.01, Count = 4
float -> coef: Probability = 0.00, Count = 1
float -> newvalue: Probability = 0.00, Count = 1
float -> 0: Probability = 0.00, Count = 1
float -> Melement: Probability = 0.00, Count = 1
float -> Nelement: Probability = 0.00, Count = 1
float -> int: Probability = 0.00, Count = 2
float -> sum: Probability = 0.00, Count = 1
float -> ;: Probability = 0.00, Count = 1
float -> i: Probability = 0.00, Count = 1
float -> xMid: Probability = 0.00, Count = 1
float -> yMin: Probability = 0.00, Count = 1
float -> cy: Probability = 0.00, Count = 1
float -> y: Probability = 0.00, Count = 1
float -> dw: Probability = 0.00, Count = 1
float -> yMid: Probability = 0.00, Count = 1
float -> col: Probability = 0.00, Count = 1
float -> cx: Probability = 0.00, Count = 1
float -> (: Probability = 0.00, Count = 1
float -> Delta: Probability = 0.00, Count = 1
float -> delta: Probability = 0.00, Count = 1
float -> x2: Probability = 0.00, Count = 1
float -> xMin: Probability = 0.00, Count = 1
scale -> scale: Probability = 0.56, Count = 5
scale -> ;: Probability = 0.11, Count = 1
scale -> x: Probability = 0.11, Count = 1
scale -> [: Probability = 0.22, Count = 2
N -> N: Probability = 0.66, Count = 45
N -> =: Probability = 0.06, Count = 4
N -> n: Probability = 0.06, Count = 4
N -> ;: Probability = 0.03, Count = 2
N -> ): Probability = 0.03, Count = 2
N -> &: Probability = 0.01, Count = 1
N -> +: Probability = 0.09, Count = 6
N -> O: Probability = 0.01, Count = 1
N -> ]: Probability = 0.01, Count = 1
N -> column: Probability = 0.01, Count = 1
N -> [: Probability = 0.01, Count = 1
scale_host -> scale_dev: Probability = 1.00, Count = 1
} -> return: Probability = 0.01, Count = 1
} -> ;: Probability = 0.10, Count = 11
} -> }: Probability = 0.58, Count = 62
} -> else: Probability = 0.03, Count = 3
} -> =: Probability = 0.01, Count = 1
} -> ]: Probability = 0.03, Count = 3
} -> c: Probability = 0.02, Count = 2
} -> row: Probability = 0.01, Count = 1
} -> [: Probability = 0.04, Count = 4
} -> d_P: Probability = 0.01, Count = 1
} -> Pvalue: Probability = 0.01, Count = 1
} -> dev_c: Probability = 0.01, Count = 1
} -> dev_b: Probability = 0.01, Count = 1
} -> output: Probability = 0.01, Count = 1
} -> double: Probability = 0.01, Count = 1
} -> buf: Probability = 0.01, Count = 1
} -> cols: Probability = 0.01, Count = 1
} -> -: Probability = 0.01, Count = 1
} -> ): Probability = 0.02, Count = 2
} -> currentFrame: Probability = 0.01, Count = 1
} -> (: Probability = 0.02, Count = 2
} -> sum: Probability = 0.01, Count = 1
} -> imagPart: Probability = 0.01, Count = 1
} -> while: Probability = 0.01, Count = 1
} -> +: Probability = 0.01, Count = 1
} -> if: Probability = 0.01, Count = 1
return -> ;: Probability = 0.29, Count = 2
return -> scale: Probability = 0.14, Count = 1
return -> size2d: Probability = 0.29, Count = 2
return -> size3d: Probability = 0.29, Count = 2
alpha -> alpha: Probability = 0.58, Count = 7
alpha -> ;: Probability = 0.17, Count = 2
alpha -> *: Probability = 0.08, Count = 1
alpha -> }: Probability = 0.08, Count = 1
alpha -> element_c: Probability = 0.08, Count = 1
allAddInplace_cpu -> __global__: Probability = 0.50, Count = 1
allAddInplace_cpu -> allAddInplaceKernel: Probability = 0.50, Count = 1
arr -> arr: Probability = 0.50, Count = 1
arr -> [: Probability = 0.50, Count = 1
val -> val: Probability = 0.22, Count = 2
val -> >: Probability = 0.11, Count = 1
val -> :: Probability = 0.11, Count = 1
val -> =: Probability = 0.22, Count = 2
val -> /: Probability = 0.11, Count = 1
val -> ;: Probability = 0.11, Count = 1
val -> *: Probability = 0.11, Count = 1
index -> index: Probability = 0.62, Count = 49
index -> ]: Probability = 0.27, Count = 21
index -> %: Probability = 0.04, Count = 3
index -> /: Probability = 0.04, Count = 3
index -> int: Probability = 0.01, Count = 1
index -> [: Probability = 0.01, Count = 1
index -> =: Probability = 0.01, Count = 1
memsetCpuInt -> memsetCudaInt: Probability = 1.00, Count = 1
f3 -> f3: Probability = 1.00, Count = 2
initialArray0_cpu -> __global__: Probability = 0.50, Count = 1
initialArray0_cpu -> initialArray0: Probability = 0.50, Count = 1
tasks -> tasks: Probability = 1.00, Count = 2
0 -> 0: Probability = 0.34, Count = 85
0 -> ]: Probability = 0.03, Count = 8
0 -> ): Probability = 0.06, Count = 16
0 -> .: Probability = 0.10, Count = 24
0 -> ;: Probability = 0.10, Count = 25
0 -> means: Probability = 0.00, Count = 1
0 -> else: Probability = 0.00, Count = 1
0 -> ?: Probability = 0.00, Count = 1
0 -> =: Probability = 0.05, Count = 12
0 -> srcData: Probability = 0.00, Count = 1
0 -> 1: Probability = 0.01, Count = 2
0 -> +: Probability = 0.01, Count = 3
0 -> *: Probability = 0.02, Count = 6
0 -> k: Probability = 0.01, Count = 3
0 -> for: Probability = 0.01, Count = 2
0 -> {: Probability = 0.01, Count = 3
0 -> :: Probability = 0.02, Count = 4
0 -> pixelNum: Probability = 0.00, Count = 1
0 -> <: Probability = 0.02, Count = 4
0 -> 0f: Probability = 0.01, Count = 2
0 -> (: Probability = 0.01, Count = 3
0 -> j: Probability = 0.00, Count = 1
0 -> int: Probability = 0.01, Count = 2
0 -> column: Probability = 0.00, Count = 1
0 -> i: Probability = 0.01, Count = 3
0 -> x: Probability = 0.01, Count = 2
0 -> |: Probability = 0.00, Count = 1
0 -> &: Probability = 0.01, Count = 3
0 -> z: Probability = 0.03, Count = 8
0 -> /: Probability = 0.00, Count = 1
0 -> ptr_src_0: Probability = 0.00, Count = 1
0 -> eachElement: Probability = 0.00, Count = 1
0 -> f: Probability = 0.01, Count = 2
0 -> stdvLogNormalFrame: Probability = 0.00, Count = 1
0 -> sum: Probability = 0.00, Count = 1
0 -> C: Probability = 0.00, Count = 1
0 -> h: Probability = 0.00, Count = 1
0 -> K: Probability = 0.00, Count = 1
0 -> c: Probability = 0.00, Count = 1
0 -> gpu_img_out_y: Probability = 0.00, Count = 1
0 -> blockIdx: Probability = 0.00, Count = 1
0 -> id: Probability = 0.01, Count = 2
0 -> >: Probability = 0.00, Count = 1
0 -> const: Probability = 0.00, Count = 1
0 -> w_col_start: Probability = 0.00, Count = 1
0 -> %: Probability = 0.00, Count = 1
0 -> 5: Probability = 0.01, Count = 2
0 -> [: Probability = 0.00, Count = 1
0 -> row: Probability = 0.00, Count = 1
a -> [: Probability = 0.23, Count = 11
a -> arrayA: Probability = 0.02, Count = 1
a -> a: Probability = 0.54, Count = 26
a -> x: Probability = 0.02, Count = 1
a -> *: Probability = 0.04, Count = 2
a -> i: Probability = 0.04, Count = 2
a -> a_in: Probability = 0.04, Count = 2
a -> jj: Probability = 0.04, Count = 2
a -> =: Probability = 0.02, Count = 1
c -> [: Probability = 0.12, Count = 11
c -> c: Probability = 0.58, Count = 55
c -> =: Probability = 0.03, Count = 3
c -> i: Probability = 0.02, Count = 2
c -> c_in: Probability = 0.01, Count = 1
c -> +: Probability = 0.03, Count = 3
c -> k: Probability = 0.01, Count = 1
c -> ;: Probability = 0.01, Count = 1
c -> ,: Probability = 0.01, Count = 1
c -> {: Probability = 0.01, Count = 1
c -> x: Probability = 0.02, Count = 2
c -> for: Probability = 0.01, Count = 1
c -> index: Probability = 0.02, Count = 2
c -> ksize: Probability = 0.02, Count = 2
c -> h: Probability = 0.01, Count = 1
c -> w: Probability = 0.01, Count = 1
c -> int: Probability = 0.01, Count = 1
c -> r: Probability = 0.03, Count = 3
c -> >: Probability = 0.01, Count = 1
c -> width: Probability = 0.01, Count = 1
c -> (: Probability = 0.01, Count = 1
add_vector_cpu -> __global__: Probability = 0.50, Count = 1
add_vector_cpu -> VectorAdd: Probability = 0.50, Count = 1
b -> [: Probability = 0.13, Count = 9
b -> arrayB: Probability = 0.01, Count = 1
b -> b: Probability = 0.45, Count = 32
b -> i: Probability = 0.04, Count = 3
b -> =: Probability = 0.08, Count = 6
b -> b_in: Probability = 0.01, Count = 1
b -> j: Probability = 0.01, Count = 1
b -> *: Probability = 0.06, Count = 4
b -> ;: Probability = 0.03, Count = 2
b -> +: Probability = 0.03, Count = 2
b -> ns: Probability = 0.04, Count = 3
b -> nz: Probability = 0.01, Count = 1
b -> int: Probability = 0.04, Count = 3
b -> ): Probability = 0.03, Count = 2
b -> 1: Probability = 0.01, Count = 1
size -> output: Probability = 0.02, Count = 1
size -> size: Probability = 0.59, Count = 24
size -> blockIdx: Probability = 0.05, Count = 2
size -> =: Probability = 0.07, Count = 3
size -> ]: Probability = 0.05, Count = 2
size -> ;: Probability = 0.02, Count = 1
size -> idx: Probability = 0.02, Count = 1
size -> [: Probability = 0.05, Count = 2
size -> C: Probability = 0.02, Count = 1
size -> {: Probability = 0.02, Count = 1
size -> for: Probability = 0.02, Count = 1
size -> +: Probability = 0.02, Count = 1
size -> numNodes: Probability = 0.02, Count = 1
test_cpu -> __global__: Probability = 0.50, Count = 1
test_cpu -> test: Probability = 0.50, Count = 1
if -> if: Probability = 0.41, Count = 23
if -> (: Probability = 0.25, Count = 14
if -> counts: Probability = 0.02, Count = 1
if -> ): Probability = 0.09, Count = 5
if -> p: Probability = 0.02, Count = 1
if -> col: Probability = 0.02, Count = 1
if -> [: Probability = 0.02, Count = 1
if -> d: Probability = 0.02, Count = 1
if -> ]: Probability = 0.04, Count = 2
if -> >: Probability = 0.02, Count = 1
if -> +: Probability = 0.05, Count = 3
if -> return: Probability = 0.04, Count = 2
if -> min: Probability = 0.02, Count = 1
input -> input: Probability = 0.57, Count = 12
input -> [: Probability = 0.33, Count = 7
input -> ]: Probability = 0.05, Count = 1
input -> +: Probability = 0.05, Count = 1
dims -> dims: Probability = 0.77, Count = 33
dims -> =: Probability = 0.19, Count = 8
dims -> 4: Probability = 0.05, Count = 2
const -> const: Probability = 0.89, Count = 134
const -> unsigned: Probability = 0.04, Count = 6
const -> float: Probability = 0.03, Count = 5
const -> ;: Probability = 0.01, Count = 1
const -> int: Probability = 0.01, Count = 2
const -> =: Probability = 0.01, Count = 1
const -> -: Probability = 0.01, Count = 1
offsets -> [: Probability = 0.50, Count = 1
offsets -> offsets: Probability = 0.50, Count = 1
nrows -> nrows: Probability = 0.50, Count = 1
nrows -> ;: Probability = 0.50, Count = 1
ncols -> ncols: Probability = 1.00, Count = 1
set_sorting_offset -> set_sorting_offset: Probability = 1.00, Count = 1
t_id -> ]: Probability = 0.60, Count = 3
t_id -> t_id: Probability = 0.40, Count = 2
dot_cpu -> dotKernel: Probability = 0.50, Count = 1
dot_cpu -> dot_kernel: Probability = 0.50, Count = 1
matDiagAddInplace_cpu -> __global__: Probability = 0.50, Count = 1
matDiagAddInplace_cpu -> matDiagAddInplaceKernel: Probability = 0.50, Count = 1
dim -> dim: Probability = 0.64, Count = 7
dim -> +: Probability = 0.27, Count = 3
dim -> j: Probability = 0.09, Count = 1
mat -> mat: Probability = 0.38, Count = 5
mat -> [: Probability = 0.62, Count = 8
u -> u: Probability = 0.76, Count = 19
u -> (: Probability = 0.08, Count = 2
u -> uidx: Probability = 0.08, Count = 2
u -> n: Probability = 0.08, Count = 2
r -> r: Probability = 0.67, Count = 22
r -> r_sum: Probability = 0.03, Count = 1
r -> 0: Probability = 0.03, Count = 1
r -> =: Probability = 0.09, Count = 3
r -> ): Probability = 0.03, Count = 1
r -> +: Probability = 0.09, Count = 3
r -> -: Probability = 0.03, Count = 1
r -> step: Probability = 0.03, Count = 1
L -> L: Probability = 0.83, Count = 5
L -> }: Probability = 0.17, Count = 1
cpuAddCorrAndCorrection -> cudaAddCorrAndCorrection: Probability = 1.00, Count = 1
- -> -: Probability = 0.38, Count = 63
- -> vec_out: Probability = 0.01, Count = 1
- -> b: Probability = 0.01, Count = 1
- -> x: Probability = 0.01, Count = 1
- -> =: Probability = 0.03, Count = 5
- -> 2: Probability = 0.01, Count = 2
- -> 1: Probability = 0.09, Count = 15
- -> d_acts: Probability = 0.01, Count = 1
- -> pred: Probability = 0.01, Count = 1
- -> pixelNum: Probability = 0.01, Count = 1
- -> size: Probability = 0.01, Count = 1
- -> /: Probability = 0.01, Count = 1
- -> clamp_min: Probability = 0.01, Count = 1
- -> clamp_max: Probability = 0.01, Count = 1
- -> LW: Probability = 0.01, Count = 1
- -> NJ: Probability = 0.01, Count = 1
- -> LS: Probability = 0.01, Count = 1
- -> (: Probability = 0.04, Count = 6
- -> idx: Probability = 0.01, Count = 1
- -> ): Probability = 0.02, Count = 4
- -> &: Probability = 0.03, Count = 5
- -> <: Probability = 0.01, Count = 1
- -> pos: Probability = 0.01, Count = 1
- -> nx: Probability = 0.01, Count = 1
- -> 4: Probability = 0.01, Count = 1
- -> i: Probability = 0.01, Count = 2
- -> UN: Probability = 0.01, Count = 1
- -> UE: Probability = 0.01, Count = 1
- -> MASK_RADIUS: Probability = 0.01, Count = 1
- -> maximum: Probability = 0.01, Count = 1
- -> ]: Probability = 0.01, Count = 1
- -> spatial: Probability = 0.01, Count = 1
- -> +: Probability = 0.04, Count = 6
- -> d_indptr: Probability = 0.01, Count = 1
- -> median: Probability = 0.01, Count = 1
- -> MeanLogNormalFrame: Probability = 0.01, Count = 1
- -> ;: Probability = 0.02, Count = 4
- -> [: Probability = 0.01, Count = 2
- -> .: Probability = 0.01, Count = 2
- -> 0: Probability = 0.02, Count = 4
- -> stride: Probability = 0.01, Count = 2
- -> 0f: Probability = 0.01, Count = 1
- -> delta: Probability = 0.01, Count = 2
- -> width: Probability = 0.01, Count = 1
- -> y2: Probability = 0.01, Count = 1
- -> j: Probability = 0.03, Count = 5
- -> *: Probability = 0.01, Count = 2
- -> w: Probability = 0.01, Count = 2
- -> 128: Probability = 0.02, Count = 4
- -> 344: Probability = 0.01, Count = 1
ALPHA -> ;: Probability = 0.33, Count = 2
ALPHA -> ALPHA: Probability = 0.50, Count = 3
ALPHA -> ): Probability = 0.17, Count = 1
INCX -> INCX: Probability = 0.26, Count = 6
INCX -> ]: Probability = 0.43, Count = 10
INCX -> OFFX: Probability = 0.04, Count = 1
INCX -> =: Probability = 0.04, Count = 1
INCX -> blockIdx: Probability = 0.09, Count = 2
INCX -> float: Probability = 0.04, Count = 1
INCX -> batch: Probability = 0.04, Count = 1
INCX -> output: Probability = 0.04, Count = 1
fill_cpu -> fill_kernel: Probability = 1.00, Count = 1
X -> X: Probability = 0.30, Count = 7
X -> [: Probability = 0.48, Count = 11
X -> a: Probability = 0.04, Count = 1
X -> i: Probability = 0.04, Count = 1
X -> ]: Probability = 0.04, Count = 1
X -> x: Probability = 0.04, Count = 1
X -> ,: Probability = 0.04, Count = 1
scal_cpu -> scal_kernel: Probability = 1.00, Count = 1
conv_length -> conv_length: Probability = 1.00, Count = 2
% -> %: Probability = 0.57, Count = 17
% -> 2: Probability = 0.03, Count = 1
% -> n: Probability = 0.10, Count = 3
% -> totalPixels: Probability = 0.03, Count = 1
% -> ;: Probability = 0.07, Count = 2
% -> minh: Probability = 0.03, Count = 1
% -> 0: Probability = 0.03, Count = 1
% -> const: Probability = 0.07, Count = 2
% -> ): Probability = 0.03, Count = 1
% -> <: Probability = 0.03, Count = 1
PSIfill_cpu -> __global__: Probability = 0.50, Count = 1
PSIfill_cpu -> PSIfill: Probability = 0.50, Count = 1
host_add -> gpu_add: Probability = 1.00, Count = 2
k -> ]: Probability = 0.11, Count = 9
k -> j: Probability = 0.04, Count = 3
k -> k: Probability = 0.22, Count = 18
k -> width: Probability = 0.01, Count = 1
k -> +: Probability = 0.12, Count = 10
k -> *: Probability = 0.13, Count = 11
k -> 0: Probability = 0.01, Count = 1
k -> ;: Probability = 0.05, Count = 4
k -> =: Probability = 0.08, Count = 7
k -> <: Probability = 0.06, Count = 5
k -> nx: Probability = 0.01, Count = 1
k -> ): Probability = 0.02, Count = 2
k -> size_block: Probability = 0.01, Count = 1
k -> -: Probability = 0.01, Count = 1
k -> if: Probability = 0.01, Count = 1
k -> colsA: Probability = 0.01, Count = 1
k -> {: Probability = 0.01, Count = 1
k -> ,: Probability = 0.01, Count = 1
k -> float: Probability = 0.01, Count = 1
k -> b: Probability = 0.01, Count = 1
k -> i: Probability = 0.01, Count = 1
k -> c1: Probability = 0.01, Count = 1
k -> int: Probability = 0.01, Count = 1
value -> ;: Probability = 0.50, Count = 3
value -> value: Probability = 0.33, Count = 2
value -> size: Probability = 0.17, Count = 1
mul_Scalar_matrix -> mul_Scalar_matrix: Probability = 1.00, Count = 1
num -> num: Probability = 0.80, Count = 4
num -> =: Probability = 0.20, Count = 1
initWith_cpu -> __global__: Probability = 0.50, Count = 1
initWith_cpu -> initWith: Probability = 0.50, Count = 1
long -> long: Probability = 0.65, Count = 37
long -> return: Probability = 0.02, Count = 1
long -> ;: Probability = 0.09, Count = 5
long -> int: Probability = 0.07, Count = 4
long -> unsigned: Probability = 0.04, Count = 2
long -> depth: Probability = 0.04, Count = 2
long -> cols: Probability = 0.04, Count = 2
long -> =: Probability = 0.04, Count = 2
long -> z: Probability = 0.04, Count = 2
zeroIndices_cpu -> __global__: Probability = 0.50, Count = 1
zeroIndices_cpu -> zeroIndices: Probability = 0.50, Count = 1
vec_out -> [: Probability = 0.75, Count = 3
vec_out -> vec_out: Probability = 0.25, Count = 1
saxpy_serial -> saxpy_gpu: Probability = 1.00, Count = 1
1 -> 1: Probability = 0.40, Count = 63
1 -> -: Probability = 0.02, Count = 3
1 -> ;: Probability = 0.09, Count = 14
1 -> x: Probability = 0.01, Count = 2
1 -> .: Probability = 0.04, Count = 6
1 -> ]: Probability = 0.11, Count = 17
1 -> <: Probability = 0.01, Count = 1
1 -> +: Probability = 0.03, Count = 5
1 -> =: Probability = 0.02, Count = 3
1 -> j: Probability = 0.02, Count = 3
1 -> m: Probability = 0.01, Count = 1
1 -> :: Probability = 0.01, Count = 1
1 -> n: Probability = 0.01, Count = 1
1 -> ): Probability = 0.05, Count = 8
1 -> >: Probability = 0.01, Count = 2
1 -> (: Probability = 0.03, Count = 5
1 -> }: Probability = 0.01, Count = 1
1 -> 0: Probability = 0.03, Count = 4
1 -> cols: Probability = 0.01, Count = 2
1 -> i: Probability = 0.01, Count = 1
1 -> minw: Probability = 0.01, Count = 1
1 -> *: Probability = 0.02, Count = 3
1 -> boxes_out: Probability = 0.01, Count = 1
1 -> {: Probability = 0.01, Count = 1
1 -> yq: Probability = 0.01, Count = 1
1 -> &: Probability = 0.02, Count = 3
1 -> 4: Probability = 0.01, Count = 1
1 -> int: Probability = 0.01, Count = 1
1 -> row: Probability = 0.01, Count = 2
1 -> filters_diff: Probability = 0.01, Count = 1
canData -> canData: Probability = 1.00, Count = 2
getCanBusData -> getCanBusData: Probability = 1.00, Count = 1
sum_array_cpu -> sum_array_1Dgrid_1Dblock: Probability = 1.00, Count = 1
m -> m: Probability = 0.68, Count = 19
m -> ;: Probability = 0.11, Count = 3
m -> i: Probability = 0.04, Count = 1
m -> +: Probability = 0.07, Count = 2
m -> <: Probability = 0.04, Count = 1
m -> =: Probability = 0.04, Count = 1
m -> ,: Probability = 0.04, Count = 1
matColMeanDiv_cpu -> __global__: Probability = 0.50, Count = 1
matColMeanDiv_cpu -> matColMeanDiv: Probability = 0.50, Count = 1
buf -> buf: Probability = 0.50, Count = 2
buf -> [: Probability = 0.50, Count = 2
/ -> m: Probability = 0.02, Count = 1
/ -> /: Probability = 0.42, Count = 25
/ -> scalar: Probability = 0.02, Count = 1
/ -> 10: Probability = 0.02, Count = 1
/ -> (: Probability = 0.08, Count = 5
/ -> n: Probability = 0.05, Count = 3
/ -> counts: Probability = 0.02, Count = 1
/ -> =: Probability = 0.03, Count = 2
/ -> count: Probability = 0.03, Count = 2
/ -> pcountinner: Probability = 0.02, Count = 1
/ -> d_in: Probability = 0.02, Count = 1
/ -> f: Probability = 0.02, Count = 1
/ -> ): Probability = 0.03, Count = 2
/ -> d_indptr: Probability = 0.02, Count = 1
/ -> ptr_src_0: Probability = 0.02, Count = 1
/ -> ]: Probability = 0.02, Count = 1
/ -> int: Probability = 0.05, Count = 3
/ -> *: Probability = 0.05, Count = 3
/ -> width: Probability = 0.02, Count = 1
/ -> <: Probability = 0.03, Count = 2
/ -> -: Probability = 0.02, Count = 1
/ -> ;: Probability = 0.02, Count = 1
tmp -> [: Probability = 0.10, Count = 1
tmp -> tmp: Probability = 0.50, Count = 5
tmp -> .: Probability = 0.10, Count = 1
tmp -> +: Probability = 0.10, Count = 1
tmp -> 0: Probability = 0.10, Count = 1
tmp -> ret: Probability = 0.10, Count = 1
dmul_Scalar_matrix -> dmul_Scalar_matrix: Probability = 1.00, Count = 1
B -> B: Probability = 0.41, Count = 7
B -> [: Probability = 0.18, Count = 3
B -> +: Probability = 0.06, Count = 1
B -> k: Probability = 0.18, Count = 3
B -> ): Probability = 0.12, Count = 2
B -> =: Probability = 0.06, Count = 1
A -> A: Probability = 0.42, Count = 8
A -> [: Probability = 0.16, Count = 3
A -> =: Probability = 0.05, Count = 1
A -> val: Probability = 0.05, Count = 1
A -> i: Probability = 0.05, Count = 1
A -> *: Probability = 0.11, Count = 2
A -> colsB: Probability = 0.05, Count = 1
A -> ): Probability = 0.05, Count = 1
A -> k: Probability = 0.05, Count = 1
countRangesGlobal -> countRangesGlobal: Probability = 1.00, Count = 1
dsubtract_matrix -> dsubtract_matrix: Probability = 1.00, Count = 1
add_arrays -> add_arrays: Probability = 1.00, Count = 1
z -> [: Probability = 0.11, Count = 2
z -> z: Probability = 0.11, Count = 2
z -> idx: Probability = 0.06, Count = 1
z -> |: Probability = 0.22, Count = 4
z -> -: Probability = 0.11, Count = 2
z -> =: Probability = 0.06, Count = 1
z -> *: Probability = 0.33, Count = 6
sum_arrays_cpu -> sum_arrays_gpu: Probability = 1.00, Count = 1
iKernel_cpu -> __global__: Probability = 0.50, Count = 1
iKernel_cpu -> iKernel: Probability = 0.50, Count = 1
C -> C: Probability = 0.35, Count = 6
C -> [: Probability = 0.18, Count = 3
C -> {: Probability = 0.12, Count = 2
C -> j: Probability = 0.06, Count = 1
C -> i: Probability = 0.06, Count = 1
C -> *: Probability = 0.06, Count = 1
C -> Cd: Probability = 0.06, Count = 1
C -> ): Probability = 0.06, Count = 1
C -> +: Probability = 0.06, Count = 1
destination -> [: Probability = 0.50, Count = 1
destination -> result: Probability = 0.50, Count = 1
unsigned -> unsigned: Probability = 0.60, Count = 60
unsigned -> int: Probability = 0.03, Count = 3
unsigned -> char: Probability = 0.15, Count = 15
unsigned -> =: Probability = 0.05, Count = 5
unsigned -> column: Probability = 0.01, Count = 1
unsigned -> long: Probability = 0.05, Count = 5
unsigned -> return: Probability = 0.02, Count = 2
unsigned -> cols: Probability = 0.02, Count = 2
unsigned -> 255: Probability = 0.01, Count = 1
unsigned -> 0: Probability = 0.01, Count = 1
unsigned -> j: Probability = 0.02, Count = 2
unsigned -> i: Probability = 0.02, Count = 2
unsigned -> output: Probability = 0.01, Count = 1
multiplyIntValues -> intMultiply: Probability = 1.00, Count = 1
vector -> [: Probability = 0.40, Count = 2
vector -> vector: Probability = 0.60, Count = 3
length -> length: Probability = 1.00, Count = 6
doubleArrayScalarDivide_cpu -> __global__: Probability = 0.50, Count = 1
doubleArrayScalarDivide_cpu -> doubleArrayScalarDivideKernel: Probability = 0.50, Count = 1
d_in -> d_in: Probability = 0.20, Count = 3
d_in -> [: Probability = 0.33, Count = 5
d_in -> =: Probability = 0.13, Count = 2
d_in -> (: Probability = 0.13, Count = 2
d_in -> ): Probability = 0.07, Count = 1
d_in -> *: Probability = 0.13, Count = 2
scalar -> ;: Probability = 0.50, Count = 1
scalar -> scalar: Probability = 0.50, Count = 1
d_out -> d_out: Probability = 0.40, Count = 4
d_out -> [: Probability = 0.50, Count = 5
d_out -> (: Probability = 0.10, Count = 1
WIDTH -> threadIdx: Probability = 1.00, Count = 2
10 -> ;: Probability = 0.67, Count = 2
10 -> *: Probability = 0.33, Count = 1
: -> val: Probability = 0.05, Count = 1
: -> :: Probability = 0.14, Count = 3
: -> -: Probability = 0.09, Count = 2
: -> [: Probability = 0.05, Count = 1
: -> d_in: Probability = 0.05, Count = 1
: -> =: Probability = 0.23, Count = 5
: -> /: Probability = 0.09, Count = 2
: -> id: Probability = 0.09, Count = 2
: -> rt2: Probability = 0.05, Count = 1
: -> ): Probability = 0.05, Count = 1
: -> bt2: Probability = 0.05, Count = 1
: -> rt: Probability = 0.05, Count = 1
: -> bt: Probability = 0.05, Count = 1
> -> 0: Probability = 0.14, Count = 7
> -> N: Probability = 0.02, Count = 1
> -> >: Probability = 0.46, Count = 23
> -> 1: Probability = 0.04, Count = 2
> -> [: Probability = 0.04, Count = 2
> -> 320: Probability = 0.02, Count = 1
> -> pupacion: Probability = 0.02, Count = 1
> -> +: Probability = 0.12, Count = 6
> -> =: Probability = 0.04, Count = 2
> -> (: Probability = 0.02, Count = 1
> -> maximum: Probability = 0.02, Count = 1
> -> 10: Probability = 0.02, Count = 1
> -> 255: Probability = 0.04, Count = 2
activate_array_leaky_cpu -> activate_array_leaky_kernel: Probability = 1.00, Count = 1
? -> val: Probability = 0.05, Count = 1
? -> ?: Probability = 0.15, Count = 3
? -> 1: Probability = 0.05, Count = 1
? -> =: Probability = 0.10, Count = 2
? -> :: Probability = 0.10, Count = 2
? -> k: Probability = 0.15, Count = 3
? -> id: Probability = 0.10, Count = 2
? -> 0: Probability = 0.10, Count = 2
? -> -: Probability = 0.05, Count = 1
? -> 255: Probability = 0.15, Count = 3
logistic_cpu -> __global__: Probability = 0.50, Count = 1
logistic_cpu -> logistic: Probability = 0.50, Count = 1
myId -> ]: Probability = 0.50, Count = 3
myId -> myId: Probability = 0.50, Count = 3
inputleft -> inputleft: Probability = 1.00, Count = 2
inputright -> inputright: Probability = 1.00, Count = 2
output -> output: Probability = 0.70, Count = 16
output -> [: Probability = 0.17, Count = 4
output -> ]: Probability = 0.04, Count = 1
output -> ;: Probability = 0.04, Count = 1
output -> bit7: Probability = 0.04, Count = 1
count -> =: Probability = 0.25, Count = 2
count -> count: Probability = 0.25, Count = 2
count -> ;: Probability = 0.25, Count = 2
count -> -: Probability = 0.12, Count = 1
count -> >: Probability = 0.12, Count = 1
add_kernel -> add_kernel: Probability = 1.00, Count = 1
INCY -> INCY: Probability = 0.43, Count = 3
INCY -> ]: Probability = 0.43, Count = 3
INCY -> OFFY: Probability = 0.14, Count = 1
mul_cpu -> mul_kernel: Probability = 1.00, Count = 1
Y -> Y: Probability = 0.29, Count = 4
Y -> [: Probability = 0.29, Count = 4
Y -> b: Probability = 0.07, Count = 1
Y -> +: Probability = 0.07, Count = 1
Y -> y: Probability = 0.07, Count = 1
Y -> {: Probability = 0.07, Count = 1
Y -> ]: Probability = 0.07, Count = 1
Y -> m: Probability = 0.07, Count = 1
devSpeed -> [: Probability = 0.50, Count = 1
devSpeed -> devSpeed: Probability = 0.50, Count = 1
devSteer -> devSteer: Probability = 0.50, Count = 1
devSteer -> [: Probability = 0.50, Count = 1
pathPlan -> pathPlan: Probability = 1.00, Count = 1
Z -> [: Probability = 0.50, Count = 1
Z -> c: Probability = 0.50, Count = 1
mult_add_into_cpu -> mult_add_into_kernel: Probability = 1.00, Count = 1
reduction -> reduction: Probability = 1.00, Count = 2
reductionSize -> =: Probability = 0.50, Count = 1
reductionSize -> reductionSize: Probability = 0.50, Count = 1
voxelCount -> voxelCount: Probability = 1.00, Count = 2
flags -> flags: Probability = 1.00, Count = 2
InitReduction -> InitReduction: Probability = 1.00, Count = 1
gradient -> dev_gradient: Probability = 0.50, Count = 1
gradient -> blockDim: Probability = 0.50, Count = 1
parameter -> dev_parameter: Probability = 0.50, Count = 1
parameter -> [: Probability = 0.50, Count = 1
lr -> lr: Probability = 0.50, Count = 1
lr -> *: Probability = 0.50, Count = 1
Function_update_sgd_cpu -> Kernel_Function_update_sgd: Probability = 1.00, Count = 1
u_m -> u_m: Probability = 1.00, Count = 2
lu -> lu: Probability = 1.00, Count = 2
operacionCPU -> operacionKernelGPU: Probability = 1.00, Count = 1
u_d -> u_m: Probability = 0.33, Count = 1
u_d -> u_d: Probability = 0.67, Count = 2
while -> if: Probability = 0.50, Count = 1
while -> (: Probability = 0.50, Count = 1
3 -> ): Probability = 0.07, Count = 3
3 -> .: Probability = 0.02, Count = 1
3 -> *: Probability = 0.09, Count = 4
3 -> ]: Probability = 0.07, Count = 3
3 -> +: Probability = 0.14, Count = 6
3 -> currentFrame: Probability = 0.02, Count = 1
3 -> 2: Probability = 0.05, Count = 2
3 -> 3: Probability = 0.32, Count = 14
3 -> ;: Probability = 0.02, Count = 1
3 -> if: Probability = 0.02, Count = 1
3 -> 1: Probability = 0.05, Count = 2
3 -> =: Probability = 0.05, Count = 2
3 -> 0: Probability = 0.02, Count = 1
3 -> [: Probability = 0.05, Count = 2
3 -> (: Probability = 0.02, Count = 1
2 -> .: Probability = 0.06, Count = 3
2 -> ): Probability = 0.08, Count = 4
2 -> 2: Probability = 0.42, Count = 20
2 -> x: Probability = 0.02, Count = 1
2 -> ;: Probability = 0.02, Count = 1
2 -> ]: Probability = 0.17, Count = 8
2 -> ,: Probability = 0.02, Count = 1
2 -> *: Probability = 0.02, Count = 1
2 -> 1: Probability = 0.08, Count = 4
2 -> zq: Probability = 0.04, Count = 2
2 -> =: Probability = 0.06, Count = 3
. -> 3: Probability = 0.01, Count = 1
. -> 85: Probability = 0.01, Count = 1
. -> 0f: Probability = 0.04, Count = 3
. -> 5: Probability = 0.03, Count = 2
. -> .: Probability = 0.19, Count = 14
. -> 0: Probability = 0.09, Count = 7
. -> 14159265359: Probability = 0.01, Count = 1
. -> 21: Probability = 0.03, Count = 2
. -> 07: Probability = 0.03, Count = 2
. -> 71: Probability = 0.03, Count = 2
. -> col: Probability = 0.01, Count = 1
. -> +: Probability = 0.01, Count = 1
. -> ;: Probability = 0.05, Count = 4
. -> ): Probability = 0.03, Count = 2
. -> for: Probability = 0.03, Count = 2
. -> *: Probability = 0.04, Count = 3
. -> erff: Probability = 0.01, Count = 1
. -> {: Probability = 0.03, Count = 2
. -> i: Probability = 0.01, Count = 1
. -> =: Probability = 0.05, Count = 4
. -> 114: Probability = 0.01, Count = 1
. -> r: Probability = 0.01, Count = 1
. -> 499: Probability = 0.03, Count = 2
. -> 169: Probability = 0.01, Count = 1
. -> 299: Probability = 0.01, Count = 1
. -> 587: Probability = 0.01, Count = 1
. -> 331: Probability = 0.01, Count = 1
. -> 1: Probability = 0.01, Count = 1
. -> [: Probability = 0.01, Count = 1
. -> 975f: Probability = 0.01, Count = 1
. -> 668311119f: Probability = 0.01, Count = 1
. -> float: Probability = 0.01, Count = 1
. -> int: Probability = 0.01, Count = 1
. -> (: Probability = 0.03, Count = 2
. -> 402: Probability = 0.01, Count = 1
. -> 772: Probability = 0.01, Count = 1
squareSerial -> squareKernel: Probability = 1.00, Count = 1
pow -> (: Probability = 0.67, Count = 2
pow -> =: Probability = 0.33, Count = 1
doubleArrayVectorAdd_cpu -> __global__: Probability = 0.50, Count = 1
doubleArrayVectorAdd_cpu -> doubleArrayVectorAddKernel: Probability = 0.50, Count = 1
d_in_a -> [: Probability = 0.50, Count = 1
d_in_a -> d_in_a: Probability = 0.50, Count = 1
d_in_b -> [: Probability = 0.50, Count = 1
d_in_b -> d_in_b: Probability = 0.50, Count = 1
cols -> +: Probability = 0.09, Count = 3
cols -> cols: Probability = 0.17, Count = 6
cols -> y: Probability = 0.06, Count = 2
cols -> rows: Probability = 0.06, Count = 2
cols -> 1: Probability = 0.03, Count = 1
cols -> long: Probability = 0.14, Count = 5
cols -> i: Probability = 0.14, Count = 5
cols -> ;: Probability = 0.17, Count = 6
cols -> depth: Probability = 0.06, Count = 2
cols -> *: Probability = 0.09, Count = 3
row -> row: Probability = 0.51, Count = 35
row -> ;: Probability = 0.03, Count = 2
row -> *: Probability = 0.17, Count = 12
row -> [: Probability = 0.01, Count = 1
row -> {: Probability = 0.01, Count = 1
row -> std: Probability = 0.01, Count = 1
row -> ): Probability = 0.04, Count = 3
row -> .: Probability = 0.01, Count = 1
row -> Row: Probability = 0.01, Count = 1
row -> <: Probability = 0.01, Count = 1
row -> width: Probability = 0.01, Count = 1
row -> =: Probability = 0.03, Count = 2
row -> N: Probability = 0.03, Count = 2
row -> K: Probability = 0.01, Count = 1
row -> pixel: Probability = 0.01, Count = 1
row -> 0e: Probability = 0.01, Count = 1
row -> %: Probability = 0.01, Count = 1
row -> +: Probability = 0.01, Count = 1
row -> filters: Probability = 0.01, Count = 1
rows -> rows: Probability = 0.47, Count = 8
rows -> +: Probability = 0.41, Count = 7
rows -> size2d: Probability = 0.12, Count = 2
col -> col: Probability = 0.60, Count = 33
col -> ]: Probability = 0.11, Count = 6
col -> =: Probability = 0.07, Count = 4
col -> row: Probability = 0.11, Count = 6
col -> :: Probability = 0.02, Count = 1
col -> -: Probability = 0.02, Count = 1
col -> <: Probability = 0.02, Count = 1
col -> *: Probability = 0.02, Count = 1
col -> +: Probability = 0.02, Count = 1
col -> height: Probability = 0.02, Count = 1
fill_matrix -> fill_matrix: Probability = 1.00, Count = 1
tx -> ]: Probability = 0.14, Count = 2
tx -> tx: Probability = 0.21, Count = 3
tx -> %: Probability = 0.07, Count = 1
tx -> i: Probability = 0.07, Count = 1
tx -> ): Probability = 0.14, Count = 2
tx -> =: Probability = 0.14, Count = 2
tx -> (: Probability = 0.14, Count = 2
tx -> [: Probability = 0.07, Count = 1
even_inc -> even_inc: Probability = 0.50, Count = 1
even_inc -> ;: Probability = 0.50, Count = 1
evenoddincrement_cpu -> __global__: Probability = 0.50, Count = 1
evenoddincrement_cpu -> evenoddincrement: Probability = 0.50, Count = 1
g_data -> [: Probability = 0.67, Count = 2
g_data -> g_data: Probability = 0.33, Count = 1
else -> {: Probability = 0.09, Count = 3
else -> input: Probability = 0.03, Count = 1
else -> else: Probability = 0.56, Count = 19
else -> [: Probability = 0.06, Count = 2
else -> counts: Probability = 0.03, Count = 1
else -> ): Probability = 0.03, Count = 1
else -> out_index: Probability = 0.03, Count = 1
else -> temp: Probability = 0.09, Count = 3
else -> step: Probability = 0.03, Count = 1
else -> filters_diff: Probability = 0.03, Count = 1
else -> *: Probability = 0.03, Count = 1
odd_inc -> odd_inc: Probability = 1.00, Count = 2
copy_cpu -> copy_kernel: Probability = 1.00, Count = 1
id -> ]: Probability = 0.23, Count = 11
id -> id: Probability = 0.51, Count = 24
id -> int: Probability = 0.02, Count = 1
id -> [: Probability = 0.04, Count = 2
id -> *: Probability = 0.04, Count = 2
id -> =: Probability = 0.06, Count = 3
id -> i1: Probability = 0.02, Count = 1
id -> ;: Probability = 0.04, Count = 2
id -> minw: Probability = 0.02, Count = 1
base -> +: Probability = 0.17, Count = 8
base -> base: Probability = 0.75, Count = 36
base -> *: Probability = 0.02, Count = 1
base -> >: Probability = 0.02, Count = 1
base -> width: Probability = 0.02, Count = 1
base -> top_data: Probability = 0.02, Count = 1
85 -> ;: Probability = 1.00, Count = 1
prA -> [: Probability = 0.67, Count = 2
prA -> prA: Probability = 0.33, Count = 1
num_nodes -> num_nodes: Probability = 1.00, Count = 2
prB -> prB: Probability = 0.50, Count = 1
prB -> [: Probability = 0.50, Count = 1
clearLabel -> clearLabel: Probability = 1.00, Count = 1
Tau -> [: Probability = 0.75, Count = 3
Tau -> Tau: Probability = 0.25, Count = 1
dia -> dia: Probability = 0.50, Count = 2
dia -> <: Probability = 0.25, Count = 1
dia -> >: Probability = 0.25, Count = 1
N_mobil -> N_mobil: Probability = 1.00, Count = 4
delay_kernel_cpu -> delay_kernel: Probability = 1.00, Count = 1
heap -> heap: Probability = 1.00, Count = 2
numBlock -> numBlock: Probability = 0.75, Count = 3
numBlock -> =: Probability = 0.25, Count = 1
heapPtr -> heapPtr: Probability = 1.00, Count = 2
resetHeap_cpu -> __global__: Probability = 0.50, Count = 1
resetHeap_cpu -> resetHeapKernel: Probability = 0.50, Count = 1
pow_cpu -> pow_kernel: Probability = 1.00, Count = 1
d_acts -> [: Probability = 0.67, Count = 2
d_acts -> d_acts: Probability = 0.33, Count = 1
expf -> (: Probability = 1.00, Count = 1
un_idx -> un_idx: Probability = 0.25, Count = 1
un_idx -> ]: Probability = 0.25, Count = 1
un_idx -> threadIdx: Probability = 0.25, Count = 1
un_idx -> __syncthreads: Probability = 0.25, Count = 1
kComputeActs -> kComputeActs: Probability = 1.00, Count = 1
d_nets -> d_nets: Probability = 1.00, Count = 1
0f -> /: Probability = 0.10, Count = 1
0f -> +: Probability = 0.10, Count = 1
0f -> ?: Probability = 0.20, Count = 2
0f -> int: Probability = 0.10, Count = 1
0f -> outputScore: Probability = 0.10, Count = 1
0f -> 0f: Probability = 0.10, Count = 1
0f -> *: Probability = 0.10, Count = 1
0f -> j: Probability = 0.10, Count = 1
0f -> for: Probability = 0.10, Count = 1
tact -> =: Probability = 1.00, Count = 1
j -> *: Probability = 0.05, Count = 8
j -> column: Probability = 0.01, Count = 1
j -> +: Probability = 0.09, Count = 14
j -> <: Probability = 0.06, Count = 9
j -> =: Probability = 0.13, Count = 20
j -> ]: Probability = 0.13, Count = 20
j -> {: Probability = 0.01, Count = 1
j -> j: Probability = 0.24, Count = 38
j -> &: Probability = 0.02, Count = 3
j -> i: Probability = 0.03, Count = 5
j -> ;: Probability = 0.04, Count = 6
j -> >: Probability = 0.01, Count = 1
j -> 1: Probability = 0.02, Count = 3
j -> for: Probability = 0.01, Count = 1
j -> ): Probability = 0.06, Count = 10
j -> p: Probability = 0.01, Count = 2
j -> size_block: Probability = 0.01, Count = 1
j -> (: Probability = 0.01, Count = 2
j -> .: Probability = 0.01, Count = 1
j -> int: Probability = 0.01, Count = 2
j -> aux: Probability = 0.01, Count = 1
j -> norm_val: Probability = 0.01, Count = 1
j -> vec: Probability = 0.01, Count = 2
j -> /: Probability = 0.01, Count = 1
j -> vec1: Probability = 0.01, Count = 1
j -> stride: Probability = 0.01, Count = 1
j -> d: Probability = 0.01, Count = 1
j -> minh: Probability = 0.01, Count = 1
transposed -> [: Probability = 0.50, Count = 1
transposed -> transposed: Probability = 0.50, Count = 1
transpositionCPU -> transposeNaive: Probability = 1.00, Count = 1
outArray -> outArray: Probability = 1.00, Count = 2
compute_array_square -> compute_array_square: Probability = 1.00, Count = 1
sum -> sum: Probability = 0.33, Count = 7
sum -> +: Probability = 0.14, Count = 3
sum -> 0: Probability = 0.10, Count = 2
sum -> .: Probability = 0.05, Count = 1
sum -> float: Probability = 0.05, Count = 1
sum -> A: Probability = 0.05, Count = 1
sum -> =: Probability = 0.19, Count = 4
sum -> pValue: Probability = 0.05, Count = 1
sum -> *: Probability = 0.05, Count = 1
testInt1_cpu -> __global__: Probability = 0.50, Count = 1
testInt1_cpu -> testInt1: Probability = 0.50, Count = 1
4 -> 4: Probability = 0.71, Count = 48
4 -> .: Probability = 0.03, Count = 2
4 -> 1: Probability = 0.03, Count = 2
4 -> +: Probability = 0.07, Count = 5
4 -> ]: Probability = 0.06, Count = 4
4 -> ;: Probability = 0.01, Count = 1
4 -> 2: Probability = 0.01, Count = 1
4 -> tid: Probability = 0.03, Count = 2
4 -> float: Probability = 0.01, Count = 1
4 -> *: Probability = 0.01, Count = 1
4 -> >: Probability = 0.01, Count = 1
3000 -> 3000: Probability = 1.00, Count = 1
g_in -> [: Probability = 0.50, Count = 1
g_in -> g_in: Probability = 0.50, Count = 1
g_out -> [: Probability = 0.50, Count = 1
g_out -> g_out: Probability = 0.50, Count = 1
inner_reps -> ;: Probability = 0.50, Count = 1
inner_reps -> inner_reps: Probability = 0.50, Count = 1
incKernel -> incKernel: Probability = 1.00, Count = 1
inputs -> prob: Probability = 1.00, Count = 1
rand -> [: Probability = 0.50, Count = 1
rand -> rand: Probability = 0.50, Count = 1
probability -> ): Probability = 1.00, Count = 1
forward_dropout_layer -> forward_dropout_layer: Probability = 1.00, Count = 1
boundaryCorrectIndexes_cpu -> __global__: Probability = 0.50, Count = 1
boundaryCorrectIndexes_cpu -> boundaryCorrectIndexesKernel: Probability = 0.50, Count = 1
twod1 -> -: Probability = 0.25, Count = 1
twod1 -> twod1: Probability = 0.50, Count = 2
twod1 -> ): Probability = 0.25, Count = 1
twod -> twod: Probability = 0.67, Count = 2
twod -> -: Probability = 0.33, Count = 1
upsweep_scan -> upsweep_scan: Probability = 1.00, Count = 1
aRS -> [: Probability = 0.50, Count = 1
aRS -> aRS: Probability = 0.50, Count = 1
height -> size: Probability = 0.08, Count = 2
height -> height: Probability = 0.76, Count = 19
height -> *: Probability = 0.04, Count = 1
height -> ): Probability = 0.04, Count = 1
height -> <: Probability = 0.04, Count = 1
height -> %: Probability = 0.04, Count = 1
5 -> *: Probability = 0.15, Count = 2
5 -> 0: Probability = 0.15, Count = 2
5 -> .: Probability = 0.08, Count = 1
5 -> ;: Probability = 0.08, Count = 1
5 -> 5: Probability = 0.38, Count = 5
5 -> ]: Probability = 0.08, Count = 1
5 -> preW: Probability = 0.08, Count = 1
char -> char: Probability = 0.69, Count = 45
char -> ;: Probability = 0.03, Count = 2
char -> ): Probability = 0.11, Count = 7
char -> grayValue: Probability = 0.02, Count = 1
char -> gray: Probability = 0.02, Count = 1
char -> R: Probability = 0.02, Count = 1
char -> G: Probability = 0.02, Count = 1
char -> .: Probability = 0.02, Count = 1
char -> bit4: Probability = 0.02, Count = 1
char -> bit3: Probability = 0.02, Count = 1
char -> bit5: Probability = 0.02, Count = 1
char -> bit0: Probability = 0.02, Count = 1
char -> bit2: Probability = 0.02, Count = 1
char -> bit1: Probability = 0.02, Count = 1
aImg1 -> blockIdx: Probability = 0.33, Count = 1
aImg1 -> [: Probability = 0.33, Count = 1
aImg1 -> aR1: Probability = 0.33, Count = 1
Blend_CPU -> Blending_Kernel: Probability = 1.00, Count = 1
width -> size: Probability = 0.01, Count = 1
width -> width: Probability = 0.57, Count = 57
width -> *: Probability = 0.07, Count = 7
width -> +: Probability = 0.10, Count = 10
width -> [: Probability = 0.01, Count = 1
width -> ;: Probability = 0.07, Count = 7
width -> 1: Probability = 0.03, Count = 3
width -> ]: Probability = 0.02, Count = 2
width -> int: Probability = 0.01, Count = 1
width -> ): Probability = 0.01, Count = 1
width -> (: Probability = 0.01, Count = 1
width -> if: Probability = 0.01, Count = 1
width -> >: Probability = 0.01, Count = 1
width -> step: Probability = 0.02, Count = 2
width -> top_data: Probability = 0.01, Count = 1
width -> &: Probability = 0.01, Count = 1
width -> =: Probability = 0.01, Count = 1
width -> c: Probability = 0.01, Count = 1
width -> row: Probability = 0.01, Count = 1
aImg2 -> aR2: Probability = 1.00, Count = 2
matVecRowSubInplace_cpu -> __global__: Probability = 0.50, Count = 1
matVecRowSubInplace_cpu -> matVecRowSubInplaceKernel: Probability = 0.50, Count = 1
vec -> [: Probability = 0.20, Count = 2
vec -> vec: Probability = 0.40, Count = 4
vec -> return: Probability = 0.40, Count = 4
matVecColAddInplace_cpu -> __global__: Probability = 0.50, Count = 1
matVecColAddInplace_cpu -> matVecColAddInplaceKernel: Probability = 0.50, Count = 1
x_outer_prod -> x_outer_prod: Probability = 1.00, Count = 2
size_x -> size_x: Probability = 1.00, Count = 2
x_average -> x_average: Probability = 1.00, Count = 3
MMDOuterProdComputeWithSum -> MMDOuterProdComputeWithSum: Probability = 1.00, Count = 1
vecY -> [: Probability = 0.67, Count = 2
vecY -> vecY: Probability = 0.33, Count = 1
vecX -> vecX: Probability = 0.50, Count = 1
vecX -> [: Probability = 0.50, Count = 1
saxpy_cpu -> saxpy_gpu: Probability = 1.00, Count = 1
valid_mask -> valid_mask: Probability = 1.00, Count = 3
score -> score: Probability = 1.00, Count = 5
score_thr -> score_thr: Probability = 1.00, Count = 2
set_valid_mask_cpu -> set_valid_mask: Probability = 1.00, Count = 1
k_x -> k_x: Probability = 1.00, Count = 9
f_target -> f_target: Probability = 1.00, Count = 3
tempval -> tempval: Probability = 0.67, Count = 2
tempval -> =: Probability = 0.33, Count = 1
L_x -> L_x: Probability = 0.50, Count = 1
L_x -> =: Probability = 0.50, Count = 1
f_in -> f_in: Probability = 1.00, Count = 3
copy_swap -> copy_swap: Probability = 1.00, Count = 1
f -> f: Probability = 0.58, Count = 7
f -> for: Probability = 0.08, Count = 1
f -> <: Probability = 0.08, Count = 1
f -> ): Probability = 0.08, Count = 1
f -> 0: Probability = 0.08, Count = 1
f -> *: Probability = 0.08, Count = 1
dout -> sum: Probability = 1.00, Count = 2
db -> db: Probability = 0.50, Count = 1
db -> }: Probability = 0.50, Count = 1
sum_backward -> Kernel_Sum_backward_opt2: Probability = 0.50, Count = 1
sum_backward -> temp: Probability = 0.50, Count = 1
& -> &: Probability = 0.68, Count = 30
& -> device_input: Probability = 0.02, Count = 1
& -> <: Probability = 0.02, Count = 1
& -> d: Probability = 0.02, Count = 1
& -> (: Probability = 0.02, Count = 1
& -> 0x01: Probability = 0.11, Count = 5
& -> [: Probability = 0.07, Count = 3
& -> tid: Probability = 0.05, Count = 2
device_output -> [: Probability = 0.67, Count = 2
device_output -> device_output: Probability = 0.33, Count = 1
device_input -> device_input: Probability = 0.33, Count = 1
device_input -> [: Probability = 0.67, Count = 2
is_repeat -> is_repeat: Probability = 1.00, Count = 1
bid -> x: Probability = 0.50, Count = 2
bid -> =: Probability = 0.25, Count = 1
bid -> ]: Probability = 0.25, Count = 1
means -> x: Probability = 0.67, Count = 2
means -> means: Probability = 0.33, Count = 1
DIM -> x: Probability = 1.00, Count = 2
counts -> x: Probability = 0.33, Count = 1
counts -> counts: Probability = 0.33, Count = 1
counts -> blockIdx: Probability = 0.33, Count = 1
kmeans_average -> kmeans_average: Probability = 1.00, Count = 1
matPerRowDivInplace_cpu -> __global__: Probability = 0.50, Count = 1
matPerRowDivInplace_cpu -> matPerRowDivInplaceKernel: Probability = 0.50, Count = 1
alphas -> alphas: Probability = 0.50, Count = 1
alphas -> [: Probability = 0.50, Count = 1
sx -> [: Probability = 0.50, Count = 1
sx -> sx: Probability = 0.50, Count = 1
cluster -> ]: Probability = 0.67, Count = 4
cluster -> cluster: Probability = 0.33, Count = 2
mx -> mx: Probability = 0.50, Count = 1
mx -> [: Probability = 0.50, Count = 1
my -> my: Probability = 0.50, Count = 1
my -> [: Probability = 0.50, Count = 1
compute_new_means -> compute_new_means: Probability = 1.00, Count = 1
sy -> sy: Probability = 0.50, Count = 1
sy -> [: Probability = 0.50, Count = 1
max -> max: Probability = 1.00, Count = 1
dst -> +: Probability = 0.20, Count = 2
dst -> dst: Probability = 0.40, Count = 4
dst -> =: Probability = 0.10, Count = 1
dst -> dim: Probability = 0.10, Count = 1
dst -> ]: Probability = 0.10, Count = 1
dst -> *: Probability = 0.10, Count = 1
copy_array_d2d -> copy_array_d2d: Probability = 1.00, Count = 1
src -> src: Probability = 0.23, Count = 3
src -> j: Probability = 0.08, Count = 1
src -> +: Probability = 0.23, Count = 3
src -> ptr_src_0: Probability = 0.08, Count = 1
src -> dim: Probability = 0.08, Count = 1
src -> ]: Probability = 0.15, Count = 2
src -> *: Probability = 0.08, Count = 1
src -> -: Probability = 0.08, Count = 1
reference -> =: Probability = 0.50, Count = 1
reference -> reference: Probability = 0.50, Count = 1
labelList -> labelList: Probability = 0.50, Count = 1
labelList -> ;: Probability = 0.50, Count = 1
InitCCL -> InitCCL: Probability = 1.00, Count = 1
nnz -> nnz: Probability = 0.40, Count = 2
nnz -> *: Probability = 0.20, Count = 1
nnz -> i1: Probability = 0.20, Count = 1
nnz -> nnx: Probability = 0.20, Count = 1
jsz -> +: Probability = 0.50, Count = 1
jsz -> jsz: Probability = 0.50, Count = 1
sxbeg -> sxbeg: Probability = 0.50, Count = 1
sxbeg -> +: Probability = 0.50, Count = 1
sxz -> [: Probability = 0.50, Count = 1
sxz -> sxz: Probability = 0.50, Count = 1
szbeg -> +: Probability = 0.50, Count = 1
szbeg -> szbeg: Probability = 0.50, Count = 1
npml -> ): Probability = 0.29, Count = 2
npml -> npml: Probability = 0.29, Count = 2
npml -> =: Probability = 0.14, Count = 1
npml -> nnz: Probability = 0.14, Count = 1
npml -> &: Probability = 0.14, Count = 1
jsx -> jsx: Probability = 0.50, Count = 1
jsx -> +: Probability = 0.50, Count = 1
ns -> ns: Probability = 0.50, Count = 3
ns -> x: Probability = 0.33, Count = 2
ns -> nt: Probability = 0.17, Count = 1
cpu_set_sg -> cuda_set_sg: Probability = 1.00, Count = 1
addMatrix -> addMatrixGPU: Probability = 1.00, Count = 1
resizedClsScore_cpu -> __global__: Probability = 0.50, Count = 1
resizedClsScore_cpu -> resizedClsScore: Probability = 0.50, Count = 1
score_factors -> score_factors: Probability = 1.00, Count = 2
truth -> truth: Probability = 0.25, Count = 1
truth -> [: Probability = 0.25, Count = 1
truth -> group_offset: Probability = 0.50, Count = 2
pred -> pred: Probability = 0.33, Count = 1
pred -> [: Probability = 0.33, Count = 1
pred -> input: Probability = 0.33, Count = 1
diff -> >: Probability = 0.17, Count = 1
diff -> =: Probability = 0.17, Count = 1
diff -> ): Probability = 0.17, Count = 1
diff -> diff: Probability = 0.50, Count = 3
error -> [: Probability = 0.33, Count = 1
error -> error: Probability = 0.33, Count = 1
error -> output: Probability = 0.33, Count = 1
delta -> [: Probability = 0.11, Count = 1
delta -> delta: Probability = 0.11, Count = 1
delta -> groups: Probability = 0.11, Count = 1
delta -> temp: Probability = 0.11, Count = 1
delta -> +: Probability = 0.11, Count = 1
delta -> =: Probability = 0.11, Count = 1
delta -> ;: Probability = 0.22, Count = 2
delta -> /: Probability = 0.11, Count = 1
fabs -> (: Probability = 1.00, Count = 1
l1_cpu -> l1_kernel: Probability = 1.00, Count = 1
cnt -> [: Probability = 0.75, Count = 3
cnt -> idx: Probability = 0.25, Count = 1
AddMatrixOnCPU -> AddMatrixOnGPU: Probability = 1.00, Count = 1
ny -> ny: Probability = 0.60, Count = 3
ny -> j: Probability = 0.20, Count = 1
ny -> <: Probability = 0.20, Count = 1
nx -> nx: Probability = 0.33, Count = 4
nx -> k: Probability = 0.08, Count = 1
nx -> j: Probability = 0.17, Count = 2
nx -> +: Probability = 0.17, Count = 2
nx -> =: Probability = 0.08, Count = 1
nx -> i: Probability = 0.08, Count = 1
nx -> sources_x: Probability = 0.08, Count = 1
srcData -> srcData: Probability = 1.00, Count = 7
data_size -> data_size: Probability = 0.67, Count = 4
data_size -> <: Probability = 0.33, Count = 2
dstData -> dstData: Probability = 1.00, Count = 2
LreluForward -> LreluForward: Probability = 1.00, Count = 1
filter -> [: Probability = 0.20, Count = 1
filter -> filter: Probability = 0.80, Count = 4
nxprj2 -> nxprj2: Probability = 0.33, Count = 1
nxprj2 -> +: Probability = 0.67, Count = 2
filterFFT_cpu -> __global__: Probability = 0.50, Count = 1
filterFFT_cpu -> filterFFT: Probability = 0.50, Count = 1
FFT -> FFT: Probability = 0.50, Count = 1
FFT -> [: Probability = 0.50, Count = 1
nviews -> nviews: Probability = 1.00, Count = 2
IND -> =: Probability = 0.33, Count = 1
IND -> ]: Probability = 0.67, Count = 2
255 -> ;: Probability = 0.14, Count = 1
255 -> else: Probability = 0.14, Count = 1
255 -> ): Probability = 0.29, Count = 2
255 -> :: Probability = 0.29, Count = 2
255 -> index: Probability = 0.14, Count = 1
out_image -> out_image: Probability = 0.50, Count = 1
out_image -> [: Probability = 0.50, Count = 1
convertFloatToRGBA_cpu -> convertFloatToRGBA_kernel: Probability = 1.00, Count = 1
in_image -> in_image: Probability = 0.50, Count = 1
in_image -> [: Probability = 0.50, Count = 1
temp -> {: Probability = 0.03, Count = 1
temp -> ;: Probability = 0.03, Count = 1
temp -> =: Probability = 0.06, Count = 2
temp -> }: Probability = 0.03, Count = 1
temp -> d_in: Probability = 0.03, Count = 1
temp -> temp: Probability = 0.45, Count = 15
temp -> +: Probability = 0.24, Count = 8
temp -> .: Probability = 0.06, Count = 2
temp -> return: Probability = 0.03, Count = 1
temp -> [: Probability = 0.03, Count = 1
d_output -> ;: Probability = 0.50, Count = 1
d_output -> d_output: Probability = 0.50, Count = 1
d_input -> ;: Probability = 0.25, Count = 1
d_input -> (: Probability = 0.25, Count = 1
d_input -> d_input: Probability = 0.25, Count = 1
d_input -> ,: Probability = 0.25, Count = 1
min -> =: Probability = 1.00, Count = 1
convertEdgeMaskToFloatCpu -> convertEdgeMaskToFloatDevice: Probability = 1.00, Count = 1
pos -> =: Probability = 0.08, Count = 1
pos -> ]: Probability = 0.25, Count = 3
pos -> -: Probability = 0.25, Count = 3
pos -> +: Probability = 0.42, Count = 5
mat_out -> [: Probability = 0.50, Count = 1
mat_out -> mat_out: Probability = 0.50, Count = 1
mat_in -> [: Probability = 0.50, Count = 1
mat_in -> mat_in: Probability = 0.50, Count = 1
trans_pos -> =: Probability = 0.50, Count = 1
trans_pos -> ]: Probability = 0.50, Count = 1
gpu_matrix_transpose -> gpu_matrix_transpose: Probability = 1.00, Count = 1
idy -> ;: Probability = 0.17, Count = 1
idy -> *: Probability = 0.50, Count = 3
idy -> idy: Probability = 0.33, Count = 2
srcDiff -> srcDiff: Probability = 0.67, Count = 2
srcDiff -> srcData: Probability = 0.33, Count = 1
dstDiff -> dstDiff: Probability = 0.67, Count = 2
dstDiff -> srcDiff: Probability = 0.33, Count = 1
LreluBackward -> LreluBackward: Probability = 1.00, Count = 1
stride -> x: Probability = 0.08, Count = 3
stride -> N: Probability = 0.03, Count = 1
stride -> =: Probability = 0.06, Count = 2
stride -> stride: Probability = 0.22, Count = 8
stride -> sample: Probability = 0.06, Count = 2
stride -> w: Probability = 0.03, Count = 1
stride -> in_index: Probability = 0.03, Count = 1
stride -> ;: Probability = 0.06, Count = 2
stride -> h1: Probability = 0.03, Count = 1
stride -> w1: Probability = 0.03, Count = 1
stride -> int: Probability = 0.19, Count = 7
stride -> *: Probability = 0.08, Count = 3
stride -> /: Probability = 0.06, Count = 2
stride -> (: Probability = 0.03, Count = 1
stride -> +: Probability = 0.03, Count = 1
cpuReduce -> gpuReduceRecursive: Probability = 1.00, Count = 1
p -> [: Probability = 0.05, Count = 1
p -> p: Probability = 0.50, Count = 11
p -> k: Probability = 0.18, Count = 4
p -> ;: Probability = 0.05, Count = 1
p -> *: Probability = 0.05, Count = 1
p -> :: Probability = 0.05, Count = 1
p -> g: Probability = 0.05, Count = 1
p -> for: Probability = 0.05, Count = 1
p -> ]: Probability = 0.05, Count = 1
pcountinner -> pcountinner: Probability = 0.33, Count = 1
pcountinner -> [: Probability = 0.67, Count = 2
pn -> [: Probability = 0.67, Count = 2
pn -> pn: Probability = 0.33, Count = 1
Xsize -> Xsize: Probability = 1.00, Count = 5
Zsize -> Zsize: Probability = 1.00, Count = 5
devidecountInnerCPU -> devidecountInner: Probability = 1.00, Count = 1
Ysize -> Ysize: Probability = 1.00, Count = 5
curr_decision -> curr_decision: Probability = 1.00, Count = 3
bit_index -> =: Probability = 0.33, Count = 1
bit_index -> bit_index: Probability = 0.67, Count = 2
bit_stream -> bit_stream: Probability = 1.00, Count = 3
short -> short: Probability = 1.00, Count = 1
dec_index -> dec_index: Probability = 0.67, Count = 2
dec_index -> *: Probability = 0.33, Count = 1
dec_size -> dec_size: Probability = 0.50, Count = 1
dec_size -> =: Probability = 0.50, Count = 1
bit_decisions -> bit_decisions: Probability = 1.00, Count = 2
cpuConvertToBits -> cudaConvertToBits: Probability = 1.00, Count = 1
devMatX -> ]: Probability = 0.80, Count = 4
devMatX -> devMatX: Probability = 0.20, Count = 1
memWidth -> *: Probability = 0.80, Count = 4
memWidth -> memWidth: Probability = 0.20, Count = 1
devMat -> [: Probability = 0.80, Count = 4
devMat -> devMat: Probability = 0.20, Count = 1
copyAliasRow -> copyAliasRow: Probability = 1.00, Count = 1
memHeight -> -: Probability = 0.67, Count = 2
memHeight -> memHeight: Probability = 0.33, Count = 1
areaRes -> [: Probability = 0.50, Count = 1
areaRes -> areaRes: Probability = 0.50, Count = 1
sizeof -> blockDim: Probability = 1.00, Count = 1
ObjFeatures_circularity -> circularity: Probability = 0.50, Count = 1
ObjFeatures_circularity -> __global__: Probability = 0.50, Count = 1
malloc -> threadIdx: Probability = 0.50, Count = 1
malloc -> blockDim: Probability = 0.50, Count = 1
perimeter -> perimeterRes: Probability = 0.33, Count = 1
perimeter -> [: Probability = 0.67, Count = 2
circ -> [: Probability = 0.50, Count = 1
circ -> circ: Probability = 0.50, Count = 1
compCount -> compCount: Probability = 1.00, Count = 2
14159265359 -> *: Probability = 1.00, Count = 1
pcount -> [: Probability = 0.67, Count = 2
pcount -> pcount: Probability = 0.33, Count = 1
pint -> pint: Probability = 0.50, Count = 1
pint -> [: Probability = 0.50, Count = 1
devidecountCPU -> devidecount: Probability = 1.00, Count = 1
bubbleSort -> oddevenSort: Probability = 1.00, Count = 1
matmul -> matmul: Probability = 1.00, Count = 1
maxval -> maxval: Probability = 1.00, Count = 5
corrValidCount -> corrValidCount: Probability = 1.00, Count = 2
snrValue -> snrValue: Probability = 1.00, Count = 2
corrSum -> corrSum: Probability = 1.00, Count = 2
mean -> mean: Probability = 0.80, Count = 8
mean -> -: Probability = 0.20, Count = 2
cudaKernel_estimateSnr_cpu -> cudaKernel_estimateSnr: Probability = 1.00, Count = 1
cpu_sgemm -> naive_sgemm_kernel: Probability = 1.00, Count = 1
keyCharPtr -> keyCharPtr: Probability = 1.00, Count = 2
keyIndex -> keyIndex: Probability = 1.00, Count = 2
keyChar -> keyChar: Probability = 1.00, Count = 2
input_length -> input_length: Probability = 0.50, Count = 1
input_length -> =: Probability = 0.50, Count = 1
^ -> ^: Probability = 1.00, Count = 1
key -> key: Probability = 1.00, Count = 2
possible_plaintext_str_cuda -> possible_plaintext_str_cuda: Probability = 1.00, Count = 2
input_str_cuda -> input_str_cuda: Probability = 1.00, Count = 2
kernelXor -> kernelXor: Probability = 1.00, Count = 1
edad -> edad: Probability = 0.25, Count = 1
edad -> [: Probability = 0.75, Count = 3
80 -> |: Probability = 1.00, Count = 1
pupacion -> pupacion: Probability = 0.50, Count = 1
pupacion -> [: Probability = 0.50, Count = 1
320 -> ): Probability = 1.00, Count = 1
| -> |: Probability = 0.82, Count = 9
| -> dia: Probability = 0.09, Count = 1
| -> ELEMENT_INDEX: Probability = 0.09, Count = 1
estado -> estado: Probability = 1.00, Count = 1
envejecer_kernel_cpu -> envejecer_kernel: Probability = 1.00, Count = 1
sin -> a: Probability = 1.00, Count = 2
cos -> b: Probability = 1.00, Count = 3
globalCalculateKernel -> globalCalculateKernel: Probability = 1.00, Count = 1
cpu_matrix_mul -> gpu_matrix_mul: Probability = 1.00, Count = 1
g -> g: Probability = 0.29, Count = 2
g -> =: Probability = 0.29, Count = 2
g -> +: Probability = 0.43, Count = 3
71 -> *: Probability = 1.00, Count = 2
21 -> *: Probability = 1.00, Count = 2
grayscale -> grayscale: Probability = 1.00, Count = 1
07 -> *: Probability = 1.00, Count = 2
pixelNum -> images: Probability = 0.50, Count = 2
pixelNum -> :: Probability = 0.25, Count = 1
pixelNum -> (: Probability = 0.25, Count = 1
imageNum -> 0: Probability = 0.50, Count = 1
imageNum -> size_t: Probability = 0.50, Count = 1
images -> .: Probability = 0.14, Count = 1
images -> +: Probability = 0.14, Count = 1
images -> <: Probability = 0.14, Count = 1
images -> images: Probability = 0.14, Count = 1
images -> {: Probability = 0.14, Count = 1
images -> ]: Probability = 0.14, Count = 1
images -> row: Probability = 0.14, Count = 1
subtractMean_cpu -> __global__: Probability = 0.50, Count = 1
subtractMean_cpu -> subtractMean: Probability = 0.50, Count = 1
meanImage -> col: Probability = 0.50, Count = 1
meanImage -> meanImage: Probability = 0.50, Count = 1
start -> start: Probability = 1.00, Count = 2
maxhd -> (: Probability = 0.33, Count = 1
maxhd -> maxhd: Probability = 0.33, Count = 1
maxhd -> tx: Probability = 0.33, Count = 1
maxvd -> tx: Probability = 0.50, Count = 1
maxvd -> maxvd: Probability = 0.50, Count = 1
max_hd -> i: Probability = 0.50, Count = 1
max_hd -> ;: Probability = 0.50, Count = 1
max_vd -> i: Probability = 0.50, Count = 1
max_vd -> for: Probability = 0.50, Count = 1
kernelMaximum -> kernelMaximum: Probability = 1.00, Count = 1
175494351e -> if: Probability = 1.00, Count = 1
38F -> 0: Probability = 1.00, Count = 1
jj -> *: Probability = 0.11, Count = 1
jj -> <: Probability = 0.22, Count = 2
jj -> +: Probability = 0.22, Count = 2
jj -> ]: Probability = 0.22, Count = 2
jj -> =: Probability = 0.22, Count = 2
indptr -> [: Probability = 0.56, Count = 10
indptr -> indptr: Probability = 0.11, Count = 2
indptr -> d_indptr: Probability = 0.22, Count = 4
indptr -> ptr_stc_1: Probability = 0.06, Count = 1
indptr -> (: Probability = 0.06, Count = 1
indices -> indices: Probability = 0.25, Count = 2
indices -> [: Probability = 0.38, Count = 3
indices -> d_indices: Probability = 0.38, Count = 3
SparseMatmul_forward -> cuda_SparseMatmul_forward_kernel: Probability = 1.00, Count = 1
availablePixels -> availablePixels: Probability = 1.00, Count = 4
matrix -> matrix: Probability = 1.00, Count = 2
out -> out: Probability = 0.68, Count = 17
out -> d_out_data: Probability = 0.04, Count = 1
out -> src: Probability = 0.04, Count = 1
out -> ): Probability = 0.04, Count = 1
out -> out_index: Probability = 0.16, Count = 4
out -> +: Probability = 0.04, Count = 1
totalPixels -> totalPixels: Probability = 0.88, Count = 7
totalPixels -> %: Probability = 0.12, Count = 1
outPixelOffset -> outPixelOffset: Probability = 1.00, Count = 4
vectorMatrixMult -> vectorMatrixMult: Probability = 1.00, Count = 1
pitch -> pitch: Probability = 0.50, Count = 1
pitch -> +: Probability = 0.50, Count = 1
depth_scale -> *: Probability = 0.50, Count = 1
depth_scale -> depth_scale: Probability = 0.50, Count = 1
d_disparity -> y: Probability = 0.50, Count = 1
d_disparity -> d_disparity: Probability = 0.50, Count = 1
convertKinectDisparityInPlace_cpu -> convertKinectDisparityInPlace_kernel: Probability = 1.00, Count = 1
c_grad -> i: Probability = 0.33, Count = 1
c_grad -> b_in: Probability = 0.33, Count = 1
c_grad -> c_in: Probability = 0.33, Count = 1
b_grad -> b_in: Probability = 0.50, Count = 1
b_grad -> j: Probability = 0.50, Count = 1
SparseMatmul_backward -> cuda_SparseMatmul_backward_kernel: Probability = 1.00, Count = 1
d_label -> [: Probability = 0.50, Count = 1
d_label -> d_label: Probability = 0.50, Count = 1
ind_out -> ind_out: Probability = 0.50, Count = 3
ind_out -> ]: Probability = 0.33, Count = 2
ind_out -> ): Probability = 0.17, Count = 1
inv_sub_factor -> ): Probability = 0.50, Count = 1
inv_sub_factor -> inv_sub_factor: Probability = 0.50, Count = 1
n_out -> n_out: Probability = 1.00, Count = 2
d_label_sub -> d_label_sub: Probability = 0.50, Count = 1
d_label_sub -> [: Probability = 0.50, Count = 1
d_ind_sub -> [: Probability = 0.50, Count = 1
d_ind_sub -> d_ind_sub: Probability = 0.50, Count = 1
d_ind -> [: Probability = 0.50, Count = 1
d_ind -> d_ind: Probability = 0.50, Count = 1
ind_in -> =: Probability = 0.33, Count = 1
ind_in -> ]: Probability = 0.67, Count = 2
subsample_ind_and_labels_cpu -> subsample_ind_and_labels_GPU: Probability = 1.00, Count = 1
floorf -> (: Probability = 1.00, Count = 1
s -> =: Probability = 0.14, Count = 1
s -> +: Probability = 0.14, Count = 1
s -> s: Probability = 0.71, Count = 5
mxm_1d_cpu -> mxm_1d: Probability = 1.00, Count = 1
clamp_min -> clamp_min: Probability = 0.33, Count = 1
clamp_min -> ,: Probability = 0.67, Count = 2
fmax -> (: Probability = 1.00, Count = 2
clamp_max -> ,: Probability = 0.50, Count = 2
clamp_max -> clamp_max: Probability = 0.25, Count = 1
clamp_max -> clamp_min: Probability = 0.25, Count = 1
fmin -> (: Probability = 1.00, Count = 2
fabsf_clamp_cpu -> fabsf_clamp_kernel: Probability = 1.00, Count = 1
h_b -> b: Probability = 0.50, Count = 1
h_b -> *: Probability = 0.50, Count = 1
h -> sum: Probability = 0.04, Count = 1
h -> b: Probability = 0.04, Count = 1
h -> i: Probability = 0.04, Count = 1
h -> +: Probability = 0.17, Count = 4
h -> h: Probability = 0.17, Count = 4
h -> W_grid: Probability = 0.08, Count = 2
h -> /: Probability = 0.04, Count = 1
h -> ): Probability = 0.08, Count = 2
h -> ksize: Probability = 0.04, Count = 1
h -> pad: Probability = 0.04, Count = 1
h -> &: Probability = 0.04, Count = 1
h -> *: Probability = 0.08, Count = 2
h -> h_col: Probability = 0.04, Count = 1
h -> width_col: Probability = 0.04, Count = 1
h -> ;: Probability = 0.04, Count = 1
h_result -> *: Probability = 1.00, Count = 1
h_a -> a: Probability = 0.50, Count = 1
h_a -> *: Probability = 0.50, Count = 1
cpu_matrix_mult -> gpu_matrix_mult: Probability = 1.00, Count = 1
MulMatrixOnCPU -> MulMatrixOnGPU: Probability = 1.00, Count = 1
inline -> __global__: Probability = 1.00, Count = 1
h_N -> d_N: Probability = 0.33, Count = 1
h_N -> d_M: Probability = 0.33, Count = 1
h_N -> [: Probability = 0.33, Count = 1
h_P -> d_N: Probability = 0.33, Count = 1
h_P -> [: Probability = 0.33, Count = 1
h_P -> d_P: Probability = 0.33, Count = 1
h_M -> [: Probability = 0.50, Count = 1
h_M -> d_M: Probability = 0.50, Count = 1
Pvalue -> +: Probability = 0.50, Count = 1
Pvalue -> =: Probability = 0.50, Count = 1
matrixMulHost -> MatrixMulKernel: Probability = 1.00, Count = 1
r1 -> r1: Probability = 1.00, Count = 1
r2 -> r2: Probability = 1.00, Count = 1
c2 -> +: Probability = 0.17, Count = 2
c2 -> c2: Probability = 0.33, Count = 4
c2 -> w2: Probability = 0.17, Count = 2
c2 -> c1: Probability = 0.17, Count = 2
c2 -> b: Probability = 0.08, Count = 1
c2 -> h2: Probability = 0.08, Count = 1
c1 -> ;: Probability = 0.08, Count = 1
c1 -> c1: Probability = 0.42, Count = 5
c1 -> +: Probability = 0.08, Count = 1
c1 -> b: Probability = 0.08, Count = 1
c1 -> w1: Probability = 0.08, Count = 1
c1 -> sum: Probability = 0.08, Count = 1
c1 -> =: Probability = 0.08, Count = 1
c1 -> h1: Probability = 0.08, Count = 1
mmul_cpu -> __global__: Probability = 0.50, Count = 1
mmul_cpu -> mmul: Probability = 0.50, Count = 1
Dot -> Kernel_Dot_reduction2: Probability = 1.00, Count = 1
RES -> [: Probability = 0.82, Count = 9
RES -> RES: Probability = 0.18, Count = 2
NJ -> ]: Probability = 0.50, Count = 2
NJ -> NJ: Probability = 0.50, Count = 2
LS -> LS: Probability = 0.50, Count = 1
LS -> [: Probability = 0.50, Count = 1
IJ -> -: Probability = 0.11, Count = 2
IJ -> ]: Probability = 0.67, Count = 12
IJ -> =: Probability = 0.11, Count = 2
IJ -> +: Probability = 0.11, Count = 2
LPR -> [: Probability = 0.33, Count = 1
LPR -> LPR: Probability = 0.67, Count = 2
LW -> LW: Probability = 0.50, Count = 1
LW -> [: Probability = 0.50, Count = 1
Start -> +: Probability = 0.67, Count = 2
Start -> Start: Probability = 0.33, Count = 1
NI -> NI: Probability = 0.50, Count = 2
NI -> ): Probability = 0.50, Count = 2
Forwardsub_cpu -> __global__: Probability = 0.50, Count = 1
Forwardsub_cpu -> Forwardsub: Probability = 0.50, Count = 1
J -> J: Probability = 0.50, Count = 2
J -> -: Probability = 0.50, Count = 2
channel -> channel: Probability = 0.93, Count = 14
channel -> +: Probability = 0.07, Count = 1
column -> (: Probability = 0.08, Count = 1
column -> ): Probability = 0.15, Count = 2
column -> [: Probability = 0.08, Count = 1
column -> column: Probability = 0.23, Count = 3
column -> ]: Probability = 0.31, Count = 4
column -> =: Probability = 0.08, Count = 1
column -> int: Probability = 0.08, Count = 1
depth -> depth: Probability = 0.67, Count = 6
depth -> -: Probability = 0.11, Count = 1
depth -> *: Probability = 0.22, Count = 2
cpu_rows_dc_offset_remove_layer_kernel -> cuda_rows_dc_offset_remove_layer_kernel: Probability = 1.00, Count = 1
i2 -> =: Probability = 0.67, Count = 2
i2 -> nnz: Probability = 0.33, Count = 1
pg -> ]: Probability = 0.50, Count = 1
pg -> =: Probability = 0.50, Count = 1
Iss -> Iss: Probability = 0.50, Count = 1
Iss -> *: Probability = 0.50, Count = 1
i1 -> &: Probability = 0.33, Count = 1
i1 -> i2: Probability = 0.33, Count = 1
i1 -> i1: Probability = 0.33, Count = 1
Isg -> id: Probability = 0.50, Count = 1
Isg -> Isg: Probability = 0.50, Count = 1
ps -> +: Probability = 0.25, Count = 1
ps -> ]: Probability = 0.50, Count = 2
ps -> ): Probability = 0.25, Count = 1
sp -> float: Probability = 0.67, Count = 2
sp -> sp: Probability = 0.33, Count = 1
nnx -> nnx: Probability = 1.00, Count = 1
gp -> gp: Probability = 0.50, Count = 1
gp -> float: Probability = 0.50, Count = 1
cpu_cross_correlate -> cuda_cross_correlate: Probability = 1.00, Count = 1
colorImage -> [: Probability = 0.75, Count = 3
colorImage -> colorImage: Probability = 0.25, Count = 1
offset -> *: Probability = 0.21, Count = 3
offset -> =: Probability = 0.07, Count = 1
offset -> offset: Probability = 0.64, Count = 9
offset -> ): Probability = 0.07, Count = 1
grayValue -> =: Probability = 1.00, Count = 1
columns -> columns: Probability = 0.67, Count = 2
columns -> *: Probability = 0.33, Count = 1
colorConvert -> colorConvert: Probability = 1.00, Count = 1
grayImage -> grayImage: Probability = 1.00, Count = 1
my_pixel -> my_pixel: Probability = 0.27, Count = 3
my_pixel -> =: Probability = 0.09, Count = 1
my_pixel -> +: Probability = 0.27, Count = 3
my_pixel -> ]: Probability = 0.36, Count = 4
image -> image: Probability = 0.15, Count = 2
image -> my_pixel: Probability = 0.08, Count = 1
image -> [: Probability = 0.46, Count = 6
image -> ]: Probability = 0.08, Count = 1
image -> +: Probability = 0.08, Count = 1
image -> image_size: Probability = 0.08, Count = 1
image -> ): Probability = 0.08, Count = 1
pixels_per_image -> pixels_per_image: Probability = 0.40, Count = 2
pixels_per_image -> ;: Probability = 0.60, Count = 3
init_image_array_CPU -> init_image_array_GPU: Probability = 1.00, Count = 1
x0 -> x0: Probability = 0.17, Count = 1
x0 -> [: Probability = 0.83, Count = 5
x1 -> [: Probability = 0.50, Count = 1
x1 -> x1: Probability = 0.50, Count = 1
diffusion -> diffusion: Probability = 1.00, Count = 1
dt -> dt: Probability = 0.50, Count = 1
dt -> *: Probability = 0.50, Count = 1
auto -> pos: Probability = 1.00, Count = 1
neighbors -> cotans: Probability = 0.40, Count = 2
neighbors -> neighbors: Probability = 0.60, Count = 3
iN -> iN: Probability = 0.91, Count = 10
iN -> ): Probability = 0.09, Count = 1
neighbor -> neighbor: Probability = 1.00, Count = 4
weight -> weight: Probability = 1.00, Count = 4
meshStride -> meshStride: Probability = 1.00, Count = 10
cotans -> cotans: Probability = 0.80, Count = 4
cotans -> neighbors: Probability = 0.20, Count = 1
compute_b_minus_Rx -> compute_b_minus_Rx: Probability = 1.00, Count = 1
weights -> weights: Probability = 1.00, Count = 3
binary -> binary: Probability = 1.00, Count = 2
binarize_weights -> binarize_weights_kernel: Probability = 1.00, Count = 1
l -> +: Probability = 0.15, Count = 2
l -> l: Probability = 0.62, Count = 8
l -> =: Probability = 0.08, Count = 1
l -> <: Probability = 0.08, Count = 1
l -> 0: Probability = 0.08, Count = 1
points -> points: Probability = 1.00, Count = 2
gather_points_kernel -> gather_points_kernel: Probability = 1.00, Count = 1
cell -> <: Probability = 0.17, Count = 1
cell -> =: Probability = 0.17, Count = 1
cell -> int: Probability = 0.17, Count = 1
cell -> ]: Probability = 0.17, Count = 1
cell -> *: Probability = 0.17, Count = 1
cell -> +: Probability = 0.17, Count = 1
right_columns -> [: Probability = 0.33, Count = 1
right_columns -> +: Probability = 0.33, Count = 1
right_columns -> right_columns: Probability = 0.33, Count = 1
right -> right: Probability = 0.50, Count = 1
right -> [: Probability = 0.50, Count = 1
left -> left: Probability = 0.50, Count = 1
left -> [: Probability = 0.50, Count = 1
shared_dimensions -> ;: Probability = 0.33, Count = 1
shared_dimensions -> +: Probability = 0.33, Count = 1
shared_dimensions -> shared_dimensions: Probability = 0.33, Count = 1
result -> result: Probability = 0.50, Count = 1
result -> row: Probability = 0.50, Count = 1
matrix_mult -> gpu_matrix_mult: Probability = 1.00, Count = 1
left_rows -> left_rows: Probability = 1.00, Count = 2
row_a -> row_a: Probability = 1.00, Count = 2
host_b -> dev_b: Probability = 0.50, Count = 1
host_b -> [: Probability = 0.50, Count = 1
host_c -> [: Probability = 0.50, Count = 1
host_c -> dev_c: Probability = 0.50, Count = 1
col_b -> col_b: Probability = 0.33, Count = 1
col_b -> +: Probability = 0.67, Count = 2
col_a -> ;: Probability = 0.33, Count = 1
col_a -> col_a: Probability = 0.33, Count = 1
col_a -> +: Probability = 0.33, Count = 1
host_a -> [: Probability = 0.50, Count = 1
host_a -> dev_a: Probability = 0.50, Count = 1
matrixMultiplication_cpu -> __global__: Probability = 0.50, Count = 1
matrixMultiplication_cpu -> matrixMultiplication: Probability = 0.50, Count = 1
UN -> UN: Probability = 0.50, Count = 1
UN -> [: Probability = 0.50, Count = 1
U -> [: Probability = 0.67, Count = 2
U -> U: Probability = 0.33, Count = 1
End -> End: Probability = 0.33, Count = 1
End -> -: Probability = 0.67, Count = 2
UE -> UE: Probability = 0.50, Count = 1
UE -> [: Probability = 0.50, Count = 1
Backwardsub -> Backwardsub: Probability = 1.00, Count = 1
array_size -> -: Probability = 0.50, Count = 1
array_size -> array_size: Probability = 0.50, Count = 1
mask_size -> mask_size: Probability = 0.67, Count = 2
mask_size -> ;: Probability = 0.33, Count = 1
ELEMENT_INDEX -> 0: Probability = 0.20, Count = 1
ELEMENT_INDEX -> ]: Probability = 0.20, Count = 1
ELEMENT_INDEX -> =: Probability = 0.20, Count = 1
ELEMENT_INDEX -> <: Probability = 0.20, Count = 1
ELEMENT_INDEX -> >: Probability = 0.20, Count = 1
MASK_RADIUS -> +: Probability = 0.50, Count = 1
MASK_RADIUS -> MASK_RADIUS: Probability = 0.50, Count = 1
mask -> mask: Probability = 0.50, Count = 1
mask -> [: Probability = 0.50, Count = 1
convolution_cpu_1d -> convolution_gpu_1d_naive: Probability = 1.00, Count = 1
! -> (: Probability = 0.50, Count = 1
! -> !: Probability = 0.50, Count = 1
numOfNucl -> {: Probability = 0.17, Count = 1
numOfNucl -> if: Probability = 0.33, Count = 2
numOfNucl -> pb: Probability = 0.17, Count = 1
numOfNucl -> blockDim: Probability = 0.17, Count = 1
numOfNucl -> blockIdx: Probability = 0.17, Count = 1
psi -> x: Probability = 0.40, Count = 2
psi -> psi: Probability = 0.40, Count = 2
psi -> [: Probability = 0.20, Count = 1
rho -> dcopy: Probability = 0.33, Count = 1
rho -> =: Probability = 0.33, Count = 1
rho -> rho: Probability = 0.33, Count = 1
\ -> rho: Probability = 0.20, Count = 1
\ -> x: Probability = 0.20, Count = 1
\ -> >: Probability = 0.20, Count = 1
\ -> tc: Probability = 0.40, Count = 2
getRho -> getRho_cuda: Probability = 1.00, Count = 1
debug -> 1: Probability = 0.33, Count = 1
debug -> stepSize: Probability = 0.33, Count = 1
debug -> if: Probability = 0.33, Count = 1
occNo -> x: Probability = 0.20, Count = 1
occNo -> occNo: Probability = 0.40, Count = 2
occNo -> [: Probability = 0.40, Count = 2
maximum -> =: Probability = 0.50, Count = 2
maximum -> ;: Probability = 0.25, Count = 1
maximum -> ): Probability = 0.25, Count = 1
res -> +: Probability = 0.50, Count = 1
res -> =: Probability = 0.50, Count = 1
colLog2SumExp2_cpu -> __global__: Probability = 0.50, Count = 1
colLog2SumExp2_cpu -> colLog2SumExp2Kernel: Probability = 0.50, Count = 1
frontPrune -> frontPrune: Probability = 1.00, Count = 2
batchInJump -> batchInJump: Probability = 1.00, Count = 2
outputlength -> outputlength: Probability = 0.88, Count = 7
outputlength -> inputLength: Probability = 0.12, Count = 1
inputLength -> inputLength: Probability = 0.67, Count = 2
inputLength -> outputlength: Probability = 0.33, Count = 1
in -> in: Probability = 0.50, Count = 9
in -> dst: Probability = 0.06, Count = 1
in -> d_in_data: Probability = 0.06, Count = 1
in -> ]: Probability = 0.06, Count = 1
in -> in_index: Probability = 0.06, Count = 1
in -> [: Probability = 0.28, Count = 5
indexInBatch -> indexInBatch: Probability = 1.00, Count = 2
batch -> batch: Probability = 0.77, Count = 10
batch -> (: Probability = 0.08, Count = 1
batch -> %: Probability = 0.08, Count = 1
batch -> minh: Probability = 0.08, Count = 1
indexOutBatch -> indexOutBatch: Probability = 1.00, Count = 2
frontJump -> frontJump: Probability = 1.00, Count = 2
batchOutJump -> batchOutJump: Probability = 0.67, Count = 2
batchOutJump -> batchInJump: Probability = 0.33, Count = 1
bitPrune_cpu -> __global__: Probability = 0.50, Count = 1
bitPrune_cpu -> bitPrune: Probability = 0.50, Count = 1
diag -> diag: Probability = 1.00, Count = 2
residual -> residual: Probability = 1.00, Count = 1
w -> w: Probability = 0.18, Count = 5
w -> =: Probability = 0.07, Count = 2
w -> ;: Probability = 0.11, Count = 3
w -> [: Probability = 0.04, Count = 1
w -> ): Probability = 0.04, Count = 1
w -> W: Probability = 0.04, Count = 1
w -> *: Probability = 0.18, Count = 5
w -> /: Probability = 0.04, Count = 1
w -> %: Probability = 0.04, Count = 1
w -> +: Probability = 0.04, Count = 1
w -> <: Probability = 0.04, Count = 1
w -> ksize: Probability = 0.04, Count = 1
w -> (: Probability = 0.04, Count = 1
w -> width_col: Probability = 0.04, Count = 1
w -> ,: Probability = 0.04, Count = 1
w -> float: Probability = 0.04, Count = 1
w -> 1: Probability = 0.04, Count = 1
out_index -> out_index: Probability = 0.33, Count = 5
out_index -> =: Probability = 0.20, Count = 3
out_index -> *: Probability = 0.07, Count = 1
out_index -> +: Probability = 0.13, Count = 2
out_index -> i: Probability = 0.07, Count = 1
out_index -> (: Probability = 0.07, Count = 1
out_index -> ]: Probability = 0.13, Count = 2
in_index -> in_index: Probability = 0.67, Count = 2
in_index -> ,: Probability = 0.33, Count = 1
forward_avgpool_layer -> forward_avgpool_layer_kernel: Probability = 1.00, Count = 1
filterR -> k: Probability = 0.50, Count = 1
filterR -> filterR: Probability = 0.50, Count = 1
d -> imageH: Probability = 0.11, Count = 1
d -> idx_y: Probability = 0.11, Count = 1
d -> =: Probability = 0.11, Count = 1
d -> d: Probability = 0.67, Count = 6
h_Src -> idx_y: Probability = 0.50, Count = 1
h_Src -> d: Probability = 0.50, Count = 1
h_Filter -> -: Probability = 0.50, Count = 1
h_Filter -> buffer: Probability = 0.50, Count = 1
imageW -> imageW: Probability = 0.33, Count = 1
imageW -> filterR: Probability = 0.33, Count = 1
imageW -> idx_x: Probability = 0.33, Count = 1
h_Dst -> }: Probability = 0.50, Count = 1
h_Dst -> idx_x: Probability = 0.50, Count = 1
imageH -> imageH: Probability = 0.50, Count = 1
imageH -> {: Probability = 0.50, Count = 1
convolutionColumnCPU -> __global__: Probability = 0.50, Count = 1
convolutionColumnCPU -> kernel_columns: Probability = 0.50, Count = 1
rowsA -> rowsA: Probability = 0.50, Count = 1
rowsA -> colsA: Probability = 0.50, Count = 1
colsB -> colsB: Probability = 0.25, Count = 1
colsB -> tIndy: Probability = 0.50, Count = 2
colsB -> ;: Probability = 0.25, Count = 1
colsA -> colsA: Probability = 0.33, Count = 1
colsA -> colsB: Probability = 0.33, Count = 1
colsA -> k: Probability = 0.33, Count = 1
matrMult -> gpuMatrMultD: Probability = 1.00, Count = 1
model -> i: Probability = 0.50, Count = 1
model -> model: Probability = 0.50, Count = 1
nt -> it: Probability = 0.33, Count = 1
nt -> nt: Probability = 0.33, Count = 1
nt -> x: Probability = 0.33, Count = 1
ib -> b: Probability = 0.50, Count = 1
ib -> +: Probability = 0.50, Count = 1
it -> it: Probability = 0.50, Count = 1
it -> *: Probability = 0.50, Count = 1
nz -> nx: Probability = 0.50, Count = 1
nz -> nz: Probability = 0.50, Count = 1
wfp -> ib: Probability = 0.50, Count = 1
wfp -> wfp: Probability = 0.50, Count = 1
sources_z -> sources_z: Probability = 0.50, Count = 1
sources_z -> b: Probability = 0.50, Count = 1
source_amplitude -> source_amplitude: Probability = 0.50, Count = 1
source_amplitude -> b: Probability = 0.50, Count = 1
add_sources_d -> add_sources_d: Probability = 1.00, Count = 1
sources_x -> sources_x: Probability = 0.50, Count = 1
sources_x -> b: Probability = 0.50, Count = 1
spatial -> spatial: Probability = 0.40, Count = 4
spatial -> <: Probability = 0.10, Count = 1
spatial -> *: Probability = 0.30, Count = 3
spatial -> +: Probability = 0.20, Count = 2
variance -> ;: Probability = 0.50, Count = 2
variance -> variance: Probability = 0.25, Count = 1
variance -> }: Probability = 0.25, Count = 1
filters -> filters: Probability = 0.72, Count = 18
filters -> *: Probability = 0.08, Count = 2
filters -> ;: Probability = 0.08, Count = 2
filters -> f: Probability = 0.04, Count = 1
filters -> &: Probability = 0.08, Count = 2
variance_cpu -> variance_kernel: Probability = 1.00, Count = 1
grad -> rows: Probability = 0.25, Count = 1
grad -> grad: Probability = 0.50, Count = 2
grad -> cols: Probability = 0.25, Count = 1
uidx -> ;: Probability = 0.50, Count = 2
uidx -> ]: Probability = 0.50, Count = 2
grad_y_cpu -> grad_y: Probability = 1.00, Count = 1
size2d -> [: Probability = 0.15, Count = 2
size2d -> unsigned: Probability = 0.15, Count = 2
size2d -> z: Probability = 0.08, Count = 1
size2d -> ;: Probability = 0.46, Count = 6
size2d -> >: Probability = 0.15, Count = 2
grad_x_cpu -> grad_x: Probability = 1.00, Count = 1
coef -> =: Probability = 0.25, Count = 1
coef -> d_in_data: Probability = 0.25, Count = 1
coef -> *: Probability = 0.25, Count = 1
coef -> coef: Probability = 0.25, Count = 1
GraphSum_forward -> cuda_GraphSum_forward_kernel: Probability = 1.00, Count = 1
sqrtf -> *: Probability = 0.33, Count = 1
sqrtf -> ): Probability = 0.33, Count = 1
sqrtf -> (: Probability = 0.33, Count = 1
G -> +: Probability = 0.50, Count = 1
G -> =: Probability = 0.50, Count = 1
grayimg -> [: Probability = 0.50, Count = 1
grayimg -> grayimg: Probability = 0.50, Count = 1
gray -> =: Probability = 1.00, Count = 1
R -> =: Probability = 0.50, Count = 1
R -> +: Probability = 0.50, Count = 1
apply_grayscale -> apply_grayscale: Probability = 1.00, Count = 1
307 -> *: Probability = 1.00, Count = 1
113 -> *: Probability = 1.00, Count = 1
604 -> *: Probability = 1.00, Count = 1
numPerbatch -> numPerbatch: Probability = 1.00, Count = 7
before_nms_boxes -> before_nms_boxes: Probability = 1.00, Count = 2
batchSize -> batchSize: Probability = 1.00, Count = 8
max_coordinate -> max_coordinate: Probability = 1.00, Count = 2
getOffsetBox_cpu -> __global__: Probability = 0.50, Count = 1
getOffsetBox_cpu -> getOffsetBox: Probability = 0.50, Count = 1
clsIndex -> clsIndex: Probability = 1.00, Count = 2
M -> M: Probability = 0.33, Count = 1
M -> [: Probability = 0.33, Count = 1
M -> Md: Probability = 0.33, Count = 1
host_inputArray3 -> host_inputArray3: Probability = 0.33, Count = 1
host_inputArray3 -> row: Probability = 0.67, Count = 2
e -> y: Probability = 0.50, Count = 1
e -> +: Probability = 0.50, Count = 1
element_c -> =: Probability = 0.33, Count = 1
element_c -> beta: Probability = 0.33, Count = 1
element_c -> 0: Probability = 0.33, Count = 1
K -> eachElement: Probability = 0.40, Count = 2
K -> K: Probability = 0.40, Count = 2
K -> ;: Probability = 0.20, Count = 1
beta -> host_inputArray3: Probability = 0.50, Count = 1
beta -> beta: Probability = 0.50, Count = 1
sgemm_kernelCPU -> sgemm_kernelGPU: Probability = 1.00, Count = 1
host_inputArray2 -> eachElement: Probability = 0.50, Count = 1
host_inputArray2 -> host_inputArray2: Probability = 0.50, Count = 1
host_inputArray1 -> host_inputArray1: Probability = 1.00, Count = 1
out_grad -> d_out_grad: Probability = 0.50, Count = 1
out_grad -> [: Probability = 0.50, Count = 1
in_grad -> [: Probability = 0.50, Count = 1
in_grad -> d_in_grad: Probability = 0.50, Count = 1
GraphSum_backward -> cuda_GraphSum_backward_kernel: Probability = 1.00, Count = 1
summ -> 0: Probability = 0.50, Count = 1
summ -> .: Probability = 0.50, Count = 1
currentFrame -> [: Probability = 0.25, Count = 1
currentFrame -> currentFrame: Probability = 0.25, Count = 1
currentFrame -> ]: Probability = 0.50, Count = 2
pixel -> ;: Probability = 0.10, Count = 1
pixel -> ]: Probability = 0.30, Count = 3
pixel -> pixel: Probability = 0.40, Count = 4
pixel -> (: Probability = 0.20, Count = 2
pixelsPerFrame -> pixelsPerFrame: Probability = 1.00, Count = 2
stdvLogNormalFrame -> stdvLogNormalFrame: Probability = 0.50, Count = 1
stdvLogNormalFrame -> ]: Probability = 0.50, Count = 1
MeanLogNormalFrame -> MeanLogNormalFrame: Probability = 0.50, Count = 1
MeanLogNormalFrame -> [: Probability = 0.50, Count = 1
newvalue -> =: Probability = 0.33, Count = 1
newvalue -> if: Probability = 0.33, Count = 1
newvalue -> ;: Probability = 0.33, Count = 1
5f -> .: Probability = 0.50, Count = 1
5f -> (: Probability = 0.50, Count = 1
log -> (: Probability = 1.00, Count = 1
median -> median: Probability = 0.50, Count = 1
median -> [: Probability = 0.50, Count = 1
CDFfunction -> CDFfunction: Probability = 1.00, Count = 1
sqrt -> (: Probability = 0.33, Count = 1
sqrt -> sqrt: Probability = 0.33, Count = 1
sqrt -> __fsqrt_rn: Probability = 0.33, Count = 1
erf -> ): Probability = 1.00, Count = 1
width_N -> +: Probability = 0.40, Count = 2
width_N -> width_N: Probability = 0.20, Count = 1
width_N -> width_M: Probability = 0.20, Count = 1
width_N -> width: Probability = 0.20, Count = 1
height_M -> width_M: Probability = 0.33, Count = 1
height_M -> height_blk: Probability = 0.33, Count = 1
height_M -> ): Probability = 0.33, Count = 1
width_M -> height_M: Probability = 0.33, Count = 1
width_M -> +: Probability = 0.33, Count = 1
width_M -> width_N: Probability = 0.33, Count = 1
mul -> matrixmul: Probability = 1.00, Count = 1
softmax_x_ent_cpu -> __global__: Probability = 0.25, Count = 1
softmax_x_ent_cpu -> float: Probability = 0.25, Count = 1
softmax_x_ent_cpu -> x: Probability = 0.25, Count = 1
softmax_x_ent_cpu -> softmax_kernel: Probability = 0.25, Count = 1
t -> >: Probability = 0.50, Count = 2
t -> b: Probability = 0.25, Count = 1
t -> ]: Probability = 0.25, Count = 1
image_size -> +: Probability = 0.33, Count = 1
image_size -> ;: Probability = 0.33, Count = 1
image_size -> image_size: Probability = 0.33, Count = 1
normalize_img -> __global__: Probability = 0.33, Count = 1
normalize_img -> normalizacion: Probability = 0.33, Count = 1
normalize_img -> blockIdx: Probability = 0.33, Count = 1
0e -> ]: Probability = 1.00, Count = 1
bands -> bands: Probability = 1.00, Count = 1
priorNum -> priorNum: Probability = 1.00, Count = 4
devideNum -> devideNum: Probability = 0.83, Count = 5
devideNum -> ;: Probability = 0.17, Count = 1
featureSize -> featureSize: Probability = 1.00, Count = 3
permuteData_cpu -> __global__: Probability = 0.50, Count = 1
permuteData_cpu -> permuteData: Probability = 0.50, Count = 1
real -> real: Probability = 1.00, Count = 4
xq -> xq: Probability = 0.67, Count = 4
xq -> xi: Probability = 0.33, Count = 2
sr -> sr: Probability = 0.60, Count = 3
sr -> Lq: Probability = 0.40, Count = 2
sLength -> sLength: Probability = 1.00, Count = 2
si -> si: Probability = 0.80, Count = 4
si -> sr: Probability = 0.20, Count = 1
uLength -> uLength: Probability = 0.50, Count = 1
uLength -> =: Probability = 0.50, Count = 1
xi -> xi: Probability = 1.00, Count = 3
cpuSimpleCorrelator -> cudaSimpleCorrelator: Probability = 1.00, Count = 1
imag -> imag: Probability = 1.00, Count = 2
d_regularDisparityPitch -> d_regularDisparityPitch: Probability = 0.50, Count = 1
d_regularDisparityPitch -> +: Probability = 0.50, Count = 1
d_KinectDisparityPitch -> d_KinectDisparityPitch: Probability = 0.50, Count = 1
d_KinectDisparityPitch -> +: Probability = 0.50, Count = 1
d_KinectDisparity -> d_KinectDisparity: Probability = 0.50, Count = 1
d_KinectDisparity -> y: Probability = 0.50, Count = 1
d_regularDisparity -> d_regularDisparity: Probability = 0.50, Count = 1
d_regularDisparity -> y: Probability = 0.50, Count = 1
convertKinectDisparityToRegularDisparity_cpu -> convertKinectDisparityToRegularDisparity_kernel: Probability = 1.00, Count = 1
sampleIndex -> sampleIndex: Probability = 1.00, Count = 7
sumQ -> sumQ: Probability = 0.75, Count = 3
sumQ -> sumI: Probability = 0.25, Count = 1
sumI -> sumI: Probability = 1.00, Count = 4
Q -> Q: Probability = 0.33, Count = 3
Q -> *: Probability = 0.44, Count = 4
Q -> 3: Probability = 0.11, Count = 1
Q -> j: Probability = 0.11, Count = 1
samplesLength -> samplesLength: Probability = 1.00, Count = 2
filtered_I -> filtered_I: Probability = 1.00, Count = 2
filterLength -> filterLength: Probability = 1.00, Count = 2
I -> I: Probability = 1.00, Count = 2
convLength -> convLength: Probability = 0.50, Count = 1
convLength -> =: Probability = 0.50, Count = 1
filtered_Q -> filtered_Q: Probability = 1.00, Count = 1
runFilterCpu -> runFilterCuda: Probability = 1.00, Count = 1
powf -> (: Probability = 1.00, Count = 2
dx -> dx: Probability = 0.60, Count = 3
dx -> {: Probability = 0.20, Count = 1
dx -> anchor: Probability = 0.20, Count = 1
l2normalize_cpu -> l2normalize_kernel: Probability = 1.00, Count = 1
distMat -> distMat: Probability = 1.00, Count = 2
patchSize -> patchSize: Probability = 1.00, Count = 7
data_i -> data_i: Probability = 0.67, Count = 2
data_i -> stride: Probability = 0.33, Count = 1
filtSig -> filtSig: Probability = 1.00, Count = 2
elem -> elem: Probability = 1.00, Count = 5
exp -> exp: Probability = 1.00, Count = 1
data_j -> data_i: Probability = 0.25, Count = 1
data_j -> data_j: Probability = 0.75, Count = 3
distanceMatCalc -> distanceMatCalc: Probability = 1.00, Count = 1
minc -> ;: Probability = 0.20, Count = 2
minc -> minc: Probability = 0.40, Count = 4
minc -> int: Probability = 0.10, Count = 1
minc -> id: Probability = 0.10, Count = 1
minc -> (: Probability = 0.20, Count = 2
h2 -> h2: Probability = 0.17, Count = 2
h2 -> (: Probability = 0.08, Count = 1
h2 -> h1: Probability = 0.17, Count = 2
h2 -> /: Probability = 0.08, Count = 1
h2 -> =: Probability = 0.17, Count = 2
h2 -> w2: Probability = 0.17, Count = 2
h2 -> ): Probability = 0.17, Count = 2
w2 -> w2: Probability = 0.36, Count = 4
w2 -> (: Probability = 0.09, Count = 1
w2 -> w1: Probability = 0.18, Count = 2
w2 -> minw: Probability = 0.18, Count = 2
w2 -> =: Probability = 0.09, Count = 1
w2 -> *: Probability = 0.09, Count = 1
add_index -> add_index: Probability = 0.25, Count = 1
add_index -> [: Probability = 0.25, Count = 1
add_index -> i: Probability = 0.25, Count = 1
add_index -> (: Probability = 0.25, Count = 1
minw -> minw: Probability = 0.50, Count = 2
minw -> out_index: Probability = 0.25, Count = 1
minw -> (: Probability = 0.25, Count = 1
sample -> sample: Probability = 0.22, Count = 2
sample -> h2: Probability = 0.11, Count = 1
sample -> x: Probability = 0.11, Count = 1
sample -> w2: Probability = 0.11, Count = 1
sample -> >: Probability = 0.11, Count = 1
sample -> +: Probability = 0.11, Count = 1
sample -> *: Probability = 0.11, Count = 1
sample -> minc: Probability = 0.11, Count = 1
minh -> minh: Probability = 1.00, Count = 2
w1 -> w1: Probability = 0.57, Count = 4
w1 -> (: Probability = 0.14, Count = 1
w1 -> j: Probability = 0.14, Count = 1
w1 -> *: Probability = 0.14, Count = 1
h1 -> h2: Probability = 0.10, Count = 1
h1 -> h1: Probability = 0.40, Count = 4
h1 -> ;: Probability = 0.20, Count = 2
h1 -> (: Probability = 0.10, Count = 1
h1 -> w1: Probability = 0.10, Count = 1
h1 -> =: Probability = 0.10, Count = 1
shortcut_kernel_cpu -> shortcut_kernel: Probability = 1.00, Count = 1
dot -> sum: Probability = 0.25, Count = 1
dot -> index: Probability = 0.25, Count = 1
dot -> *: Probability = 0.25, Count = 1
dot -> i: Probability = 0.25, Count = 1
v -> m: Probability = 0.50, Count = 2
v -> v: Probability = 0.50, Count = 2
m_hat -> m_hat: Probability = 0.67, Count = 2
m_hat -> ]: Probability = 0.33, Count = 1
eps -> eps: Probability = 1.00, Count = 2
max_size -> max_size: Probability = 1.00, Count = 2
beta2_tpower -> beta1_tpower: Probability = 0.33, Count = 1
beta2_tpower -> beta2_tpower: Probability = 0.67, Count = 2
learning_rate -> learning_rate: Probability = 1.00, Count = 2
d_temp -> d_temp: Probability = 0.67, Count = 2
d_temp -> beta1: Probability = 0.33, Count = 1
beta2 -> beta2: Probability = 1.00, Count = 3
beta1 -> beta1: Probability = 1.00, Count = 2
8 -> 8: Probability = 1.00, Count = 3
v_hat -> v_hat: Probability = 1.00, Count = 2
beta1_tpower -> beta1_tpower: Probability = 0.50, Count = 1
beta1_tpower -> beta2: Probability = 0.50, Count = 1
k_adam_kernel -> k_adam_kernel: Probability = 1.00, Count = 1
1e -> 1e: Probability = 1.00, Count = 1
H -> blockIdx: Probability = 1.00, Count = 2
W_out -> W_grid: Probability = 0.50, Count = 1
W_out -> +: Probability = 0.50, Count = 1
q -> Y: Probability = 0.25, Count = 1
q -> q: Probability = 0.50, Count = 2
q -> m: Probability = 0.25, Count = 1
W -> W: Probability = 0.50, Count = 1
W -> W_grid: Probability = 0.50, Count = 1
Wk -> ,: Probability = 1.00, Count = 1
convLayer_forward -> ConvLayerForward_Kernel: Probability = 1.00, Count = 1
size3d -> *: Probability = 0.50, Count = 2
size3d -> >: Probability = 0.50, Count = 2
vec1 -> *: Probability = 0.30, Count = 3
vec1 -> vec1: Probability = 0.20, Count = 2
vec1 -> ]: Probability = 0.30, Count = 3
vec1 -> =: Probability = 0.10, Count = 1
vec1 -> +: Probability = 0.10, Count = 1
opL23_cpu -> __global__: Probability = 0.50, Count = 1
opL23_cpu -> opL23: Probability = 0.50, Count = 1
forward -> forward: Probability = 0.50, Count = 1
forward -> [: Probability = 0.50, Count = 1
upsample_cpu -> upsample_kernel: Probability = 1.00, Count = 1
114 -> *: Probability = 1.00, Count = 1
gpu_img_in_g -> gpu_img_in_g: Probability = 0.25, Count = 1
gpu_img_in_g -> [: Probability = 0.50, Count = 2
gpu_img_in_g -> gpu_img_in_b: Probability = 0.25, Count = 1
gpu_img_out_v -> gpu_img_out_u: Probability = 0.33, Count = 1
gpu_img_out_v -> [: Probability = 0.33, Count = 1
gpu_img_out_v -> gpu_img_out_v: Probability = 0.33, Count = 1
gpu_img_in_r -> gpu_img_in_r: Probability = 0.50, Count = 1
gpu_img_in_r -> gpu_img_in_g: Probability = 0.50, Count = 1
128 -> ): Probability = 0.80, Count = 4
128 -> 0: Probability = 0.20, Count = 1
499 -> *: Probability = 1.00, Count = 2
gpu_img_out_y -> gpu_img_out_u: Probability = 0.33, Count = 1
gpu_img_out_y -> gpu_img_out_y: Probability = 0.33, Count = 1
gpu_img_out_y -> [: Probability = 0.33, Count = 1
gpu_img_in_b -> [: Probability = 0.33, Count = 1
gpu_img_in_b -> gpu_img_in_b: Probability = 0.33, Count = 1
gpu_img_in_b -> gpu_img_out_y: Probability = 0.33, Count = 1
gpu_img_out_u -> [: Probability = 0.33, Count = 1
gpu_img_out_u -> gpu_img_out_u: Probability = 0.33, Count = 1
gpu_img_out_u -> gpu_img_out_y: Probability = 0.33, Count = 1
169 -> *: Probability = 1.00, Count = 1
rgb2yuv_kernel -> rgb2yuv_kernel: Probability = 1.00, Count = 1
331 -> *: Probability = 1.00, Count = 1
587 -> *: Probability = 1.00, Count = 1
img_size -> img_size: Probability = 1.00, Count = 4
299 -> *: Probability = 1.00, Count = 1
dpsi -> [: Probability = 0.67, Count = 2
dpsi -> dpsi: Probability = 0.33, Count = 1
drho -> dcopy: Probability = 0.20, Count = 1
drho -> threadIdx: Probability = 0.40, Count = 2
drho -> drho: Probability = 0.20, Count = 1
drho -> .: Probability = 0.20, Count = 1
DRHO -> x: Probability = 1.00, Count = 1
▁ -> >: Probability = 1.00, Count = 1
getDRho -> getDRho_cuda: Probability = 1.00, Count = 1
25 -> ]: Probability = 0.25, Count = 1
25 -> 0: Probability = 0.50, Count = 2
25 -> i: Probability = 0.25, Count = 1
opL12_cpu -> __global__: Probability = 0.50, Count = 1
opL12_cpu -> opL12: Probability = 0.50, Count = 1
realPart -> realPart: Probability = 0.83, Count = 5
realPart -> ): Probability = 0.17, Count = 1
Lq -> Lq: Probability = 0.80, Count = 4
Lq -> ;: Probability = 0.20, Count = 1
q_i -> q_i: Probability = 0.80, Count = 4
q_i -> r_q: Probability = 0.20, Count = 1
imagPart -> imagPart: Probability = 0.80, Count = 4
imagPart -> +: Probability = 0.20, Count = 1
r_q -> r_q: Probability = 0.67, Count = 4
r_q -> -: Probability = 0.17, Count = 1
r_q -> r_i: Probability = 0.17, Count = 1
q_q -> q_q: Probability = 0.60, Count = 3
q_q -> ): Probability = 0.40, Count = 2
r_i -> r_i: Probability = 0.75, Count = 3
r_i -> *: Probability = 0.25, Count = 1
uSum -> uSum: Probability = 0.50, Count = 1
uSum -> +: Probability = 0.50, Count = 1
cpuBYUSimplified -> cudaBYUSimplified: Probability = 1.00, Count = 1
7 -> 7: Probability = 0.75, Count = 3
7 -> unsigned: Probability = 0.25, Count = 1
s1 -> out: Probability = 0.50, Count = 1
s1 -> s1: Probability = 0.50, Count = 1
shortcut_cpu -> shortcut_kernel: Probability = 1.00, Count = 1
s2 -> add: Probability = 0.33, Count = 1
s2 -> h2: Probability = 0.33, Count = 1
s2 -> s2: Probability = 0.33, Count = 1
scores_out -> +: Probability = 0.25, Count = 1
scores_out -> scores_out: Probability = 0.75, Count = 3
boxes_out -> [: Probability = 0.30, Count = 3
boxes_out -> boxes_out: Probability = 0.70, Count = 7
labels_out -> labels_out: Probability = 1.00, Count = 3
boxes -> boxes: Probability = 1.00, Count = 4
labels -> labels: Probability = 1.00, Count = 1
get_before_nms_data_cpu -> get_before_nms_data: Probability = 1.00, Count = 1
scores -> scores: Probability = 1.00, Count = 2
ksize -> h_index: Probability = 0.07, Count = 1
ksize -> width_col: Probability = 0.20, Count = 3
ksize -> ksize: Probability = 0.13, Count = 2
ksize -> *: Probability = 0.20, Count = 3
ksize -> height_col: Probability = 0.07, Count = 1
ksize -> pad: Probability = 0.13, Count = 2
ksize -> width: Probability = 0.07, Count = 1
ksize -> ): Probability = 0.07, Count = 1
ksize -> -: Probability = 0.07, Count = 1
data_col -> data_col: Probability = 0.40, Count = 2
data_col -> height_col: Probability = 0.20, Count = 1
data_col -> width: Probability = 0.20, Count = 1
data_col -> +: Probability = 0.20, Count = 1
c_im -> channel_in: Probability = 0.50, Count = 1
c_im -> h_out: Probability = 0.50, Count = 1
pad -> pad: Probability = 0.29, Count = 2
pad -> ]: Probability = 0.14, Count = 1
pad -> -: Probability = 0.14, Count = 1
pad -> :: Probability = 0.14, Count = 1
pad -> width_col: Probability = 0.14, Count = 1
pad -> +: Probability = 0.14, Count = 1
w_offset -> w_out: Probability = 0.50, Count = 2
w_offset -> h: Probability = 0.25, Count = 1
w_offset -> *: Probability = 0.25, Count = 1
height_col -> +: Probability = 0.20, Count = 1
height_col -> height_col: Probability = 0.40, Count = 2
height_col -> <: Probability = 0.20, Count = 1
height_col -> int: Probability = 0.20, Count = 1
channels_col -> =: Probability = 0.29, Count = 2
channels_col -> int: Probability = 0.29, Count = 2
channels_col -> /: Probability = 0.14, Count = 1
channels_col -> %: Probability = 0.14, Count = 1
channels_col -> ,: Probability = 0.14, Count = 1
data_im -> data_im: Probability = 1.00, Count = 2
width_col -> data_col: Probability = 0.14, Count = 1
width_col -> j: Probability = 0.14, Count = 1
width_col -> int: Probability = 0.14, Count = 1
width_col -> width_col: Probability = 0.29, Count = 2
width_col -> ): Probability = 0.14, Count = 1
width_col -> w_col_end: Probability = 0.14, Count = 1
im2col_cpu -> im2col_gpu_kernel: Probability = 1.00, Count = 1
channels -> =: Probability = 0.50, Count = 1
channels -> blockIdx: Probability = 0.50, Count = 1
totalScoreNum -> totalScoreNum: Probability = 1.00, Count = 3
classNum -> classNum: Probability = 0.75, Count = 3
classNum -> ]: Probability = 0.25, Count = 1
classIndex -> anchorIndex: Probability = 0.33, Count = 1
classIndex -> classIndex: Probability = 0.67, Count = 2
outputIndex -> outputIndex: Probability = 0.71, Count = 5
outputIndex -> i: Probability = 0.14, Count = 1
outputIndex -> outputScore: Probability = 0.14, Count = 1
outputScore -> outputScore: Probability = 1.00, Count = 2
threshold -> threshold: Probability = 0.67, Count = 2
threshold -> if: Probability = 0.33, Count = 1
inputIndex -> inputScore: Probability = 0.50, Count = 1
inputIndex -> inputIndex: Probability = 0.50, Count = 1
anchorIndex -> [: Probability = 0.25, Count = 1
anchorIndex -> anchorIndex: Probability = 0.50, Count = 2
anchorIndex -> outputIndex: Probability = 0.25, Count = 1
getTopkNum -> getTopkNum: Probability = 1.00, Count = 1
inputScore -> inputScore: Probability = 0.67, Count = 2
inputScore -> inputIndex: Probability = 0.33, Count = 1
cy -> ;: Probability = 0.67, Count = 2
cy -> i: Probability = 0.33, Count = 1
xMid -> =: Probability = 0.25, Count = 1
xMid -> %: Probability = 0.25, Count = 1
xMid -> -: Probability = 0.25, Count = 1
xMid -> .: Probability = 0.25, Count = 1
055846456f -> xMid: Probability = 0.50, Count = 1
055846456f -> ;: Probability = 0.50, Count = 1
yMin -> =: Probability = 0.50, Count = 1
yMin -> width: Probability = 0.50, Count = 1
frames -> frames: Probability = 1.00, Count = 2
x2 -> +: Probability = 0.25, Count = 1
x2 -> ,: Probability = 0.25, Count = 1
x2 -> -: Probability = 0.25, Count = 1
x2 -> =: Probability = 0.25, Count = 1
cx -> ;: Probability = 0.50, Count = 2
cx -> =: Probability = 0.25, Count = 1
cx -> dw: Probability = 0.25, Count = 1
pic -> pic: Probability = 0.50, Count = 1
pic -> [: Probability = 0.50, Count = 1
yMid -> -: Probability = 0.50, Count = 1
yMid -> =: Probability = 0.50, Count = 1
y2 -> ): Probability = 0.25, Count = 1
y2 -> ;: Probability = 0.25, Count = 1
y2 -> +: Probability = 0.25, Count = 1
y2 -> =: Probability = 0.25, Count = 1
Delta -> *: Probability = 0.33, Count = 1
Delta -> float: Probability = 0.33, Count = 1
Delta -> =: Probability = 0.33, Count = 1
dw -> =: Probability = 0.20, Count = 1
dw -> ;: Probability = 0.40, Count = 2
dw -> dw: Probability = 0.20, Count = 1
dw -> dy: Probability = 0.20, Count = 1
975f -> ,: Probability = 1.00, Count = 1
do -> {: Probability = 1.00, Count = 1
xMin -> +: Probability = 0.50, Count = 1
xMin -> =: Probability = 0.50, Count = 1
frame -> width: Probability = 0.33, Count = 1
frame -> =: Probability = 0.33, Count = 1
frame -> frame: Probability = 0.33, Count = 1
fractal_cpu -> __global__: Probability = 0.50, Count = 1
fractal_cpu -> fractal: Probability = 0.50, Count = 1
256 -> ;: Probability = 1.00, Count = 1
668311119f -> ;: Probability = 1.00, Count = 1
firstIndexToGrab -> +: Probability = 0.42, Count = 5
firstIndexToGrab -> firstIndexToGrab: Probability = 0.58, Count = 7
bit7 -> bit7: Probability = 0.50, Count = 2
bit7 -> =: Probability = 0.25, Count = 1
bit7 -> bit6: Probability = 0.25, Count = 1
0x01 -> 0x01: Probability = 0.67, Count = 6
0x01 -> ): Probability = 0.33, Count = 3
bit6 -> bit6: Probability = 1.00, Count = 2
6 -> 6: Probability = 0.67, Count = 2
6 -> ;: Probability = 0.33, Count = 1
bit2 -> =: Probability = 0.50, Count = 1
bit2 -> bit2: Probability = 0.50, Count = 1
bit4 -> bit4: Probability = 0.67, Count = 2
bit4 -> =: Probability = 0.33, Count = 1
bit3 -> bit3: Probability = 0.67, Count = 2
bit3 -> =: Probability = 0.33, Count = 1
bit8Channels_cpu -> __global__: Probability = 0.50, Count = 1
bit8Channels_cpu -> bit8Channels: Probability = 0.50, Count = 1
bit5 -> bit5: Probability = 0.50, Count = 1
bit5 -> =: Probability = 0.50, Count = 1
bit0 -> bit0: Probability = 1.00, Count = 2
bit1 -> bit1: Probability = 0.50, Count = 1
bit1 -> =: Probability = 0.50, Count = 1
max_dist -> min: Probability = 0.20, Count = 1
max_dist -> ;: Probability = 0.40, Count = 2
max_dist -> d: Probability = 0.20, Count = 1
max_dist -> [: Probability = 0.20, Count = 1
Match -> Match: Probability = 1.00, Count = 1
P -> *: Probability = 0.60, Count = 3
P -> 3: Probability = 0.20, Count = 1
P -> P: Probability = 0.20, Count = 1
q_points -> q_points: Probability = 1.00, Count = 1
dist -> d: Probability = 0.25, Count = 1
dist -> min: Probability = 0.25, Count = 1
dist -> ]: Probability = 0.25, Count = 1
dist -> +: Probability = 0.25, Count = 1
num_points -> ): Probability = 1.00, Count = 1
1000000000 -> (: Probability = 0.33, Count = 1
1000000000 -> 100000: Probability = 0.33, Count = 1
1000000000 -> .: Probability = 0.33, Count = 1
col_index -> (: Probability = 1.00, Count = 1
h_offset -> *: Probability = 0.25, Count = 1
h_offset -> h: Probability = 0.50, Count = 2
h_offset -> [: Probability = 0.25, Count = 1
im_row -> =: Probability = 1.00, Count = 1
col2im_cpu -> col2im_gpu_kernel: Probability = 1.00, Count = 1
772 -> *: Probability = 1.00, Count = 1
gt -> gt: Probability = 0.20, Count = 1
gt -> >: Probability = 0.40, Count = 2
gt -> ;: Probability = 0.20, Count = 1
gt -> =: Probability = 0.20, Count = 1
gpu_img_in_y -> [: Probability = 0.67, Count = 2
gpu_img_in_y -> gpu_img_in_y: Probability = 0.33, Count = 1
gpu_img_in_v -> [: Probability = 0.50, Count = 2
gpu_img_in_v -> gpu_img_in_v: Probability = 0.25, Count = 1
gpu_img_in_v -> gpu_img_out_r: Probability = 0.25, Count = 1
gpu_img_in_u -> gpu_img_in_u: Probability = 0.33, Count = 1
gpu_img_in_u -> [: Probability = 0.33, Count = 1
gpu_img_in_u -> gpu_img_in_v: Probability = 0.33, Count = 1
714 -> gpu_img_in_u: Probability = 0.50, Count = 1
714 -> *: Probability = 0.50, Count = 1
gpu_img_out_b -> [: Probability = 0.67, Count = 2
gpu_img_out_b -> gpu_img_out_b: Probability = 0.33, Count = 1
gt2 -> gt2: Probability = 0.33, Count = 1
gt2 -> =: Probability = 0.33, Count = 1
gt2 -> <: Probability = 0.33, Count = 1
bt -> bt: Probability = 0.33, Count = 1
bt -> >: Probability = 0.33, Count = 1
bt -> =: Probability = 0.33, Count = 1
402 -> *: Probability = 0.50, Count = 1
402 -> gpu_img_in_y: Probability = 0.50, Count = 1
rt -> rt: Probability = 0.17, Count = 1
rt -> >: Probability = 0.17, Count = 1
rt -> ;: Probability = 0.33, Count = 2
rt -> =: Probability = 0.17, Count = 1
rt -> gpu_img_in_u: Probability = 0.17, Count = 1
bt2 -> <: Probability = 0.40, Count = 2
bt2 -> bt2: Probability = 0.20, Count = 1
bt2 -> ;: Probability = 0.20, Count = 1
bt2 -> =: Probability = 0.20, Count = 1
rt2 -> rt2: Probability = 0.20, Count = 1
rt2 -> ;: Probability = 0.40, Count = 2
rt2 -> >: Probability = 0.20, Count = 1
rt2 -> <: Probability = 0.20, Count = 1
gpu_img_out_r -> gt: Probability = 0.33, Count = 1
gpu_img_out_r -> gpu_img_out_r: Probability = 0.33, Count = 1
gpu_img_out_r -> gpu_img_in_v: Probability = 0.33, Count = 1
344 -> gpu_img_in_y: Probability = 1.00, Count = 1
yuv2rgb_kernel -> yuv2rgb_kernel: Probability = 1.00, Count = 1
gpu_img_out_g -> gpu_img_out_g: Probability = 0.50, Count = 1
gpu_img_out_g -> [: Probability = 0.50, Count = 1
boxes_before_nms -> boxes_before_nms: Probability = 0.64, Count = 7
boxes_before_nms -> *: Probability = 0.27, Count = 3
boxes_before_nms -> =: Probability = 0.09, Count = 1
boxes_for_nms -> boxes_for_nms: Probability = 0.78, Count = 7
boxes_for_nms -> [: Probability = 0.22, Count = 2
get_boxes_for_nms_cpu -> get_boxes_for_nms: Probability = 1.00, Count = 1
mult -> mult: Probability = 1.00, Count = 1
eltwise_cpu -> eltwise_kernel: Probability = 1.00, Count = 1
predictBox -> predictBox: Probability = 0.80, Count = 4
predictBox -> i: Probability = 0.20, Count = 1
preCy -> preCx: Probability = 0.33, Count = 1
preCy -> preCy: Probability = 0.33, Count = 1
preCy -> 0: Probability = 0.33, Count = 1
anchor -> anchor: Probability = 0.86, Count = 6
anchor -> i: Probability = 0.14, Count = 1
anchorCy -> anchorCy: Probability = 0.50, Count = 1
anchorCy -> anchor: Probability = 0.50, Count = 1
scaleClamp -> scaleClamp: Probability = 0.83, Count = 5
scaleClamp -> 3: Probability = 0.17, Count = 1
preCx -> preCx: Probability = 0.50, Count = 2
preCx -> anchorH: Probability = 0.25, Count = 1
preCx -> 0: Probability = 0.25, Count = 1
anchorH -> anchorH: Probability = 0.67, Count = 2
anchorH -> anchorW: Probability = 0.33, Count = 1
anchorW -> =: Probability = 0.20, Count = 1
anchorW -> anchorW: Probability = 0.60, Count = 3
anchorW -> float: Probability = 0.20, Count = 1
preW -> predictBox: Probability = 0.20, Count = 1
preW -> preW: Probability = 0.40, Count = 2
preW -> dx: Probability = 0.20, Count = 1
preW -> dy: Probability = 0.20, Count = 1
anchorCx -> ]: Probability = 0.20, Count = 1
anchorCx -> ;: Probability = 0.20, Count = 1
anchorCx -> anchorCx: Probability = 0.40, Count = 2
anchorCx -> anchorH: Probability = 0.20, Count = 1
dy -> dx: Probability = 0.67, Count = 2
dy -> dy: Probability = 0.33, Count = 1
dh -> dw: Probability = 0.67, Count = 2
dh -> dh: Probability = 0.33, Count = 1
preH -> preH: Probability = 1.00, Count = 2
decode_cpu -> __global__: Probability = 0.50, Count = 1
decode_cpu -> decode: Probability = 0.50, Count = 1
locData -> locData: Probability = 0.80, Count = 4
locData -> i: Probability = 0.20, Count = 1
shift -> shift: Probability = 0.78, Count = 18
shift -> =: Probability = 0.17, Count = 4
shift -> <: Probability = 0.04, Count = 1
top_data -> +: Probability = 0.04, Count = 1
top_data -> step: Probability = 0.04, Count = 1
top_data -> [: Probability = 0.21, Count = 5
top_data -> top_data: Probability = 0.67, Count = 16
top_data -> -: Probability = 0.04, Count = 1
step -> step: Probability = 0.84, Count = 66
step -> +: Probability = 0.03, Count = 2
step -> width: Probability = 0.03, Count = 2
step -> *: Probability = 0.01, Count = 1
step -> <: Probability = 0.04, Count = 3
step -> ]: Probability = 0.05, Count = 4
step -> base: Probability = 0.01, Count = 1
fbase -> fbase: Probability = 0.72, Count = 26
fbase -> c: Probability = 0.08, Count = 3
fbase -> base: Probability = 0.06, Count = 2
fbase -> +: Probability = 0.08, Count = 3
fbase -> &: Probability = 0.03, Count = 1
fbase -> (: Probability = 0.03, Count = 1
wsize -> wsize: Probability = 1.00, Count = 6
nlf_down_forward_cpu -> nlf_down_forward: Probability = 1.00, Count = 1
filters_diff -> filters_diff: Probability = 0.70, Count = 14
filters_diff -> [: Probability = 0.15, Count = 3
filters_diff -> ]: Probability = 0.05, Count = 1
filters_diff -> step: Probability = 0.05, Count = 1
filters_diff -> +: Probability = 0.05, Count = 1
temp_diff -> [: Probability = 0.16, Count = 4
temp_diff -> temp_diff: Probability = 0.64, Count = 16
temp_diff -> +: Probability = 0.04, Count = 1
temp_diff -> top_data: Probability = 0.04, Count = 1
temp_diff -> 1: Probability = 0.04, Count = 1
temp_diff -> *: Probability = 0.04, Count = 1
temp_diff -> base: Probability = 0.04, Count = 1
bottom_data -> bottom_data: Probability = 0.89, Count = 8
bottom_data -> -: Probability = 0.11, Count = 1
nlf_filter_left_backward_cpu -> nlf_filter_left_backward: Probability = 1.00, Count = 1
nlf_filter_down_backward_cpu -> nlf_filter_down_backward: Probability = 1.00, Count = 1
nlf_up_forward_cpu -> nlf_up_forward: Probability = 1.00, Count = 1
